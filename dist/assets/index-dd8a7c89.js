(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}})();function Ll(e,t){const n=Object.create(null),i=e.split(",");for(let r=0;r<i.length;r++)n[i[r]]=!0;return t?r=>!!n[r.toLowerCase()]:r=>!!n[r]}const Je={},Ki=[],Zt=()=>{},Qf=()=>!1,ed=/^on[^a-z]/,Do=e=>ed.test(e),Cl=e=>e.startsWith("onUpdate:"),st=Object.assign,Pl=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},td=Object.prototype.hasOwnProperty,Oe=(e,t)=>td.call(e,t),Se=Array.isArray,zr=e=>No(e)==="[object Map]",nd=e=>No(e)==="[object Set]",Ce=e=>typeof e=="function",ct=e=>typeof e=="string",Rl=e=>typeof e=="symbol",tt=e=>e!==null&&typeof e=="object",Th=e=>tt(e)&&Ce(e.then)&&Ce(e.catch),id=Object.prototype.toString,No=e=>id.call(e),rd=e=>No(e).slice(8,-1),sd=e=>No(e)==="[object Object]",Il=e=>ct(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,ao=Ll(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Oo=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},od=/-(\w)/g,nr=Oo(e=>e.replace(od,(t,n)=>n?n.toUpperCase():"")),ad=/\B([A-Z])/g,gr=Oo(e=>e.replace(ad,"-$1").toLowerCase()),Ah=Oo(e=>e.charAt(0).toUpperCase()+e.slice(1)),Jo=Oo(e=>e?`on${Ah(e)}`:""),po=(e,t)=>!Object.is(e,t),Ko=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},mo=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},ld=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let fc;const Na=()=>fc||(fc=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Dl(e){if(Se(e)){const t={};for(let n=0;n<e.length;n++){const i=e[n],r=ct(i)?fd(i):Dl(i);if(r)for(const s in r)t[s]=r[s]}return t}else{if(ct(e))return e;if(tt(e))return e}}const cd=/;(?![^(]*\))/g,ud=/:([^]+)/,hd=/\/\*[^]*?\*\//g;function fd(e){const t={};return e.replace(hd,"").split(cd).forEach(n=>{if(n){const i=n.split(ud);i.length>1&&(t[i[0].trim()]=i[1].trim())}}),t}function Nl(e){let t="";if(ct(e))t=e;else if(Se(e))for(let n=0;n<e.length;n++){const i=Nl(e[n]);i&&(t+=i+" ")}else if(tt(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const dd="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",pd=Ll(dd);function Lh(e){return!!e||e===""}let jt;class md{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=jt,!t&&jt&&(this.index=(jt.scopes||(jt.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const n=jt;try{return jt=this,t()}finally{jt=n}}}on(){jt=this}off(){jt=this.parent}stop(t){if(this._active){let n,i;for(n=0,i=this.effects.length;n<i;n++)this.effects[n].stop();for(n=0,i=this.cleanups.length;n<i;n++)this.cleanups[n]();if(this.scopes)for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!t){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function gd(e,t=jt){t&&t.active&&t.effects.push(e)}function vd(){return jt}const Ol=e=>{const t=new Set(e);return t.w=0,t.n=0,t},Ch=e=>(e.w&Zn)>0,Ph=e=>(e.n&Zn)>0,yd=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=Zn},xd=e=>{const{deps:t}=e;if(t.length){let n=0;for(let i=0;i<t.length;i++){const r=t[i];Ch(r)&&!Ph(r)?r.delete(e):t[n++]=r,r.w&=~Zn,r.n&=~Zn}t.length=n}},Oa=new WeakMap;let Or=0,Zn=1;const Fa=30;let qt;const ui=Symbol(""),Ba=Symbol("");class Fl{constructor(t,n=null,i){this.fn=t,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,gd(this,i)}run(){if(!this.active)return this.fn();let t=qt,n=jn;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=qt,qt=this,jn=!0,Zn=1<<++Or,Or<=Fa?yd(this):dc(this),this.fn()}finally{Or<=Fa&&xd(this),Zn=1<<--Or,qt=this.parent,jn=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){qt===this?this.deferStop=!0:this.active&&(dc(this),this.onStop&&this.onStop(),this.active=!1)}}function dc(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let jn=!0;const Rh=[];function vr(){Rh.push(jn),jn=!1}function yr(){const e=Rh.pop();jn=e===void 0?!0:e}function Tt(e,t,n){if(jn&&qt){let i=Oa.get(e);i||Oa.set(e,i=new Map);let r=i.get(n);r||i.set(n,r=Ol()),Ih(r)}}function Ih(e,t){let n=!1;Or<=Fa?Ph(e)||(e.n|=Zn,n=!Ch(e)):n=!e.has(qt),n&&(e.add(qt),qt.deps.push(e))}function En(e,t,n,i,r,s){const o=Oa.get(e);if(!o)return;let a=[];if(t==="clear")a=[...o.values()];else if(n==="length"&&Se(e)){const l=Number(i);o.forEach((c,h)=>{(h==="length"||h>=l)&&a.push(c)})}else switch(n!==void 0&&a.push(o.get(n)),t){case"add":Se(e)?Il(n)&&a.push(o.get("length")):(a.push(o.get(ui)),zr(e)&&a.push(o.get(Ba)));break;case"delete":Se(e)||(a.push(o.get(ui)),zr(e)&&a.push(o.get(Ba)));break;case"set":zr(e)&&a.push(o.get(ui));break}if(a.length===1)a[0]&&Ua(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);Ua(Ol(l))}}function Ua(e,t){const n=Se(e)?e:[...e];for(const i of n)i.computed&&pc(i);for(const i of n)i.computed||pc(i)}function pc(e,t){(e!==qt||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const _d=Ll("__proto__,__v_isRef,__isVue"),Dh=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Rl)),bd=Bl(),wd=Bl(!1,!0),Md=Bl(!0),mc=Sd();function Sd(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const i=ze(this);for(let s=0,o=this.length;s<o;s++)Tt(i,"get",s+"");const r=i[t](...n);return r===-1||r===!1?i[t](...n.map(ze)):r}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){vr();const i=ze(this)[t].apply(this,n);return yr(),i}}),e}function Ed(e){const t=ze(this);return Tt(t,"has",e),t.hasOwnProperty(e)}function Bl(e=!1,t=!1){return function(i,r,s){if(r==="__v_isReactive")return!e;if(r==="__v_isReadonly")return e;if(r==="__v_isShallow")return t;if(r==="__v_raw"&&s===(e?t?Gd:Uh:t?Bh:Fh).get(i))return i;const o=Se(i);if(!e){if(o&&Oe(mc,r))return Reflect.get(mc,r,s);if(r==="hasOwnProperty")return Ed}const a=Reflect.get(i,r,s);return(Rl(r)?Dh.has(r):_d(r))||(e||Tt(i,"get",r),t)?a:yt(a)?o&&Il(r)?a:a.value:tt(a)?e?zh(a):Hl(a):a}}const Td=Nh(),Ad=Nh(!0);function Nh(e=!1){return function(n,i,r,s){let o=n[i];if(Jr(o)&&yt(o)&&!yt(r))return!1;if(!e&&(!za(r)&&!Jr(r)&&(o=ze(o),r=ze(r)),!Se(n)&&yt(o)&&!yt(r)))return o.value=r,!0;const a=Se(n)&&Il(i)?Number(i)<n.length:Oe(n,i),l=Reflect.set(n,i,r,s);return n===ze(s)&&(a?po(r,o)&&En(n,"set",i,r):En(n,"add",i,r)),l}}function Ld(e,t){const n=Oe(e,t);e[t];const i=Reflect.deleteProperty(e,t);return i&&n&&En(e,"delete",t,void 0),i}function Cd(e,t){const n=Reflect.has(e,t);return(!Rl(t)||!Dh.has(t))&&Tt(e,"has",t),n}function Pd(e){return Tt(e,"iterate",Se(e)?"length":ui),Reflect.ownKeys(e)}const Oh={get:bd,set:Td,deleteProperty:Ld,has:Cd,ownKeys:Pd},Rd={get:Md,set(e,t){return!0},deleteProperty(e,t){return!0}},Id=st({},Oh,{get:wd,set:Ad}),Ul=e=>e,Fo=e=>Reflect.getPrototypeOf(e);function ws(e,t,n=!1,i=!1){e=e.__v_raw;const r=ze(e),s=ze(t);n||(t!==s&&Tt(r,"get",t),Tt(r,"get",s));const{has:o}=Fo(r),a=i?Ul:n?Vl:kl;if(o.call(r,t))return a(e.get(t));if(o.call(r,s))return a(e.get(s));e!==r&&e.get(t)}function Ms(e,t=!1){const n=this.__v_raw,i=ze(n),r=ze(e);return t||(e!==r&&Tt(i,"has",e),Tt(i,"has",r)),e===r?n.has(e):n.has(e)||n.has(r)}function Ss(e,t=!1){return e=e.__v_raw,!t&&Tt(ze(e),"iterate",ui),Reflect.get(e,"size",e)}function gc(e){e=ze(e);const t=ze(this);return Fo(t).has.call(t,e)||(t.add(e),En(t,"add",e,e)),this}function vc(e,t){t=ze(t);const n=ze(this),{has:i,get:r}=Fo(n);let s=i.call(n,e);s||(e=ze(e),s=i.call(n,e));const o=r.call(n,e);return n.set(e,t),s?po(t,o)&&En(n,"set",e,t):En(n,"add",e,t),this}function yc(e){const t=ze(this),{has:n,get:i}=Fo(t);let r=n.call(t,e);r||(e=ze(e),r=n.call(t,e)),i&&i.call(t,e);const s=t.delete(e);return r&&En(t,"delete",e,void 0),s}function xc(){const e=ze(this),t=e.size!==0,n=e.clear();return t&&En(e,"clear",void 0,void 0),n}function Es(e,t){return function(i,r){const s=this,o=s.__v_raw,a=ze(o),l=t?Ul:e?Vl:kl;return!e&&Tt(a,"iterate",ui),o.forEach((c,h)=>i.call(r,l(c),l(h),s))}}function Ts(e,t,n){return function(...i){const r=this.__v_raw,s=ze(r),o=zr(s),a=e==="entries"||e===Symbol.iterator&&o,l=e==="keys"&&o,c=r[e](...i),h=n?Ul:t?Vl:kl;return!t&&Tt(s,"iterate",l?Ba:ui),{next(){const{value:u,done:d}=c.next();return d?{value:u,done:d}:{value:a?[h(u[0]),h(u[1])]:h(u),done:d}},[Symbol.iterator](){return this}}}}function Rn(e){return function(...t){return e==="delete"?!1:this}}function Dd(){const e={get(s){return ws(this,s)},get size(){return Ss(this)},has:Ms,add:gc,set:vc,delete:yc,clear:xc,forEach:Es(!1,!1)},t={get(s){return ws(this,s,!1,!0)},get size(){return Ss(this)},has:Ms,add:gc,set:vc,delete:yc,clear:xc,forEach:Es(!1,!0)},n={get(s){return ws(this,s,!0)},get size(){return Ss(this,!0)},has(s){return Ms.call(this,s,!0)},add:Rn("add"),set:Rn("set"),delete:Rn("delete"),clear:Rn("clear"),forEach:Es(!0,!1)},i={get(s){return ws(this,s,!0,!0)},get size(){return Ss(this,!0)},has(s){return Ms.call(this,s,!0)},add:Rn("add"),set:Rn("set"),delete:Rn("delete"),clear:Rn("clear"),forEach:Es(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{e[s]=Ts(s,!1,!1),n[s]=Ts(s,!0,!1),t[s]=Ts(s,!1,!0),i[s]=Ts(s,!0,!0)}),[e,n,t,i]}const[Nd,Od,Fd,Bd]=Dd();function zl(e,t){const n=t?e?Bd:Fd:e?Od:Nd;return(i,r,s)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?i:Reflect.get(Oe(n,r)&&r in i?n:i,r,s)}const Ud={get:zl(!1,!1)},zd={get:zl(!1,!0)},Hd={get:zl(!0,!1)},Fh=new WeakMap,Bh=new WeakMap,Uh=new WeakMap,Gd=new WeakMap;function kd(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Vd(e){return e.__v_skip||!Object.isExtensible(e)?0:kd(rd(e))}function Hl(e){return Jr(e)?e:Gl(e,!1,Oh,Ud,Fh)}function Wd(e){return Gl(e,!1,Id,zd,Bh)}function zh(e){return Gl(e,!0,Rd,Hd,Uh)}function Gl(e,t,n,i,r){if(!tt(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const s=r.get(e);if(s)return s;const o=Vd(e);if(o===0)return e;const a=new Proxy(e,o===2?i:n);return r.set(e,a),a}function $i(e){return Jr(e)?$i(e.__v_raw):!!(e&&e.__v_isReactive)}function Jr(e){return!!(e&&e.__v_isReadonly)}function za(e){return!!(e&&e.__v_isShallow)}function Hh(e){return $i(e)||Jr(e)}function ze(e){const t=e&&e.__v_raw;return t?ze(t):e}function Gh(e){return mo(e,"__v_skip",!0),e}const kl=e=>tt(e)?Hl(e):e,Vl=e=>tt(e)?zh(e):e;function jd(e){jn&&qt&&(e=ze(e),Ih(e.dep||(e.dep=Ol())))}function qd(e,t){e=ze(e);const n=e.dep;n&&Ua(n)}function yt(e){return!!(e&&e.__v_isRef===!0)}function Xd(e){return yt(e)?e.value:e}const Yd={get:(e,t,n)=>Xd(Reflect.get(e,t,n)),set:(e,t,n,i)=>{const r=e[t];return yt(r)&&!yt(n)?(r.value=n,!0):Reflect.set(e,t,n,i)}};function kh(e){return $i(e)?e:new Proxy(e,Yd)}class Zd{constructor(t,n,i,r){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new Fl(t,()=>{this._dirty||(this._dirty=!0,qd(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=i}get value(){const t=ze(this);return jd(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function Jd(e,t,n=!1){let i,r;const s=Ce(e);return s?(i=e,r=Zt):(i=e.get,r=e.set),new Zd(i,r,s||!r,n)}function qn(e,t,n,i){let r;try{r=i?e(...i):e()}catch(s){Bo(s,t,n)}return r}function Jt(e,t,n,i){if(Ce(e)){const s=qn(e,t,n,i);return s&&Th(s)&&s.catch(o=>{Bo(o,t,n)}),s}const r=[];for(let s=0;s<e.length;s++)r.push(Jt(e[s],t,n,i));return r}function Bo(e,t,n,i=!0){const r=t?t.vnode:null;if(t){let s=t.parent;const o=t.proxy,a=n;for(;s;){const c=s.ec;if(c){for(let h=0;h<c.length;h++)if(c[h](e,o,a)===!1)return}s=s.parent}const l=t.appContext.config.errorHandler;if(l){qn(l,null,10,[e,o,a]);return}}Kd(e,n,r,i)}function Kd(e,t,n,i=!0){console.error(e)}let Kr=!1,Ha=!1;const ht=[];let an=0;const Qi=[];let wn=null,li=0;const Vh=Promise.resolve();let Wl=null;function $d(e){const t=Wl||Vh;return e?t.then(this?e.bind(this):e):t}function Qd(e){let t=an+1,n=ht.length;for(;t<n;){const i=t+n>>>1;$r(ht[i])<e?t=i+1:n=i}return t}function jl(e){(!ht.length||!ht.includes(e,Kr&&e.allowRecurse?an+1:an))&&(e.id==null?ht.push(e):ht.splice(Qd(e.id),0,e),Wh())}function Wh(){!Kr&&!Ha&&(Ha=!0,Wl=Vh.then(qh))}function ep(e){const t=ht.indexOf(e);t>an&&ht.splice(t,1)}function tp(e){Se(e)?Qi.push(...e):(!wn||!wn.includes(e,e.allowRecurse?li+1:li))&&Qi.push(e),Wh()}function _c(e,t=Kr?an+1:0){for(;t<ht.length;t++){const n=ht[t];n&&n.pre&&(ht.splice(t,1),t--,n())}}function jh(e){if(Qi.length){const t=[...new Set(Qi)];if(Qi.length=0,wn){wn.push(...t);return}for(wn=t,wn.sort((n,i)=>$r(n)-$r(i)),li=0;li<wn.length;li++)wn[li]();wn=null,li=0}}const $r=e=>e.id==null?1/0:e.id,np=(e,t)=>{const n=$r(e)-$r(t);if(n===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function qh(e){Ha=!1,Kr=!0,ht.sort(np);const t=Zt;try{for(an=0;an<ht.length;an++){const n=ht[an];n&&n.active!==!1&&qn(n,null,14)}}finally{an=0,ht.length=0,jh(),Kr=!1,Wl=null,(ht.length||Qi.length)&&qh()}}function ip(e,t,...n){if(e.isUnmounted)return;const i=e.vnode.props||Je;let r=n;const s=t.startsWith("update:"),o=s&&t.slice(7);if(o&&o in i){const h=`${o==="modelValue"?"model":o}Modifiers`,{number:u,trim:d}=i[h]||Je;d&&(r=n.map(f=>ct(f)?f.trim():f)),u&&(r=n.map(ld))}let a,l=i[a=Jo(t)]||i[a=Jo(nr(t))];!l&&s&&(l=i[a=Jo(gr(t))]),l&&Jt(l,e,6,r);const c=i[a+"Once"];if(c){if(!e.emitted)e.emitted={};else if(e.emitted[a])return;e.emitted[a]=!0,Jt(c,e,6,r)}}function Xh(e,t,n=!1){const i=t.emitsCache,r=i.get(e);if(r!==void 0)return r;const s=e.emits;let o={},a=!1;if(!Ce(e)){const l=c=>{const h=Xh(c,t,!0);h&&(a=!0,st(o,h))};!n&&t.mixins.length&&t.mixins.forEach(l),e.extends&&l(e.extends),e.mixins&&e.mixins.forEach(l)}return!s&&!a?(tt(e)&&i.set(e,null),null):(Se(s)?s.forEach(l=>o[l]=null):st(o,s),tt(e)&&i.set(e,o),o)}function Uo(e,t){return!e||!Do(t)?!1:(t=t.slice(2).replace(/Once$/,""),Oe(e,t[0].toLowerCase()+t.slice(1))||Oe(e,gr(t))||Oe(e,t))}let cn=null,Yh=null;function go(e){const t=cn;return cn=e,Yh=e&&e.type.__scopeId||null,t}function rp(e,t=cn,n){if(!t||e._n)return e;const i=(...r)=>{i._d&&Pc(-1);const s=go(t);let o;try{o=e(...r)}finally{go(s),i._d&&Pc(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function $o(e){const{type:t,vnode:n,proxy:i,withProxy:r,props:s,propsOptions:[o],slots:a,attrs:l,emit:c,render:h,renderCache:u,data:d,setupState:f,ctx:p,inheritAttrs:v}=e;let y,g;const m=go(e);try{if(n.shapeFlag&4){const S=r||i;y=sn(h.call(S,S,u,s,f,d,p)),g=l}else{const S=t;y=sn(S.length>1?S(s,{attrs:l,slots:a,emit:c}):S(s,null)),g=t.props?l:sp(l)}}catch(S){Gr.length=0,Bo(S,e,1),y=hi(Qr)}let E=y;if(g&&v!==!1){const S=Object.keys(g),{shapeFlag:A}=E;S.length&&A&7&&(o&&S.some(Cl)&&(g=op(g,o)),E=ir(E,g))}return n.dirs&&(E=ir(E),E.dirs=E.dirs?E.dirs.concat(n.dirs):n.dirs),n.transition&&(E.transition=n.transition),y=E,go(m),y}const sp=e=>{let t;for(const n in e)(n==="class"||n==="style"||Do(n))&&((t||(t={}))[n]=e[n]);return t},op=(e,t)=>{const n={};for(const i in e)(!Cl(i)||!(i.slice(9)in t))&&(n[i]=e[i]);return n};function ap(e,t,n){const{props:i,children:r,component:s}=e,{props:o,children:a,patchFlag:l}=t,c=s.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&l>=0){if(l&1024)return!0;if(l&16)return i?bc(i,o,c):!!o;if(l&8){const h=t.dynamicProps;for(let u=0;u<h.length;u++){const d=h[u];if(o[d]!==i[d]&&!Uo(c,d))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?bc(i,o,c):!0:!!o;return!1}function bc(e,t,n){const i=Object.keys(t);if(i.length!==Object.keys(e).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(t[s]!==e[s]&&!Uo(n,s))return!0}return!1}function lp({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}const cp=e=>e.__isSuspense;function up(e,t){t&&t.pendingBranch?Se(e)?t.effects.push(...e):t.effects.push(e):tp(e)}const As={};function Qo(e,t,n){return Zh(e,t,n)}function Zh(e,t,{immediate:n,deep:i,flush:r,onTrack:s,onTrigger:o}=Je){var a;const l=vd()===((a=ft)==null?void 0:a.scope)?ft:null;let c,h=!1,u=!1;if(yt(e)?(c=()=>e.value,h=za(e)):$i(e)?(c=()=>e,i=!0):Se(e)?(u=!0,h=e.some(S=>$i(S)||za(S)),c=()=>e.map(S=>{if(yt(S))return S.value;if($i(S))return Vi(S);if(Ce(S))return qn(S,l,2)})):Ce(e)?t?c=()=>qn(e,l,2):c=()=>{if(!(l&&l.isUnmounted))return d&&d(),Jt(e,l,3,[f])}:c=Zt,t&&i){const S=c;c=()=>Vi(S())}let d,f=S=>{d=m.onStop=()=>{qn(S,l,4)}},p;if(ts)if(f=Zt,t?n&&Jt(t,l,3,[c(),u?[]:void 0,f]):c(),r==="sync"){const S=lm();p=S.__watcherHandles||(S.__watcherHandles=[])}else return Zt;let v=u?new Array(e.length).fill(As):As;const y=()=>{if(m.active)if(t){const S=m.run();(i||h||(u?S.some((A,b)=>po(A,v[b])):po(S,v)))&&(d&&d(),Jt(t,l,3,[S,v===As?void 0:u&&v[0]===As?[]:v,f]),v=S)}else m.run()};y.allowRecurse=!!t;let g;r==="sync"?g=y:r==="post"?g=()=>St(y,l&&l.suspense):(y.pre=!0,l&&(y.id=l.uid),g=()=>jl(y));const m=new Fl(c,g);t?n?y():v=m.run():r==="post"?St(m.run.bind(m),l&&l.suspense):m.run();const E=()=>{m.stop(),l&&l.scope&&Pl(l.scope.effects,m)};return p&&p.push(E),E}function hp(e,t,n){const i=this.proxy,r=ct(e)?e.includes(".")?Jh(i,e):()=>i[e]:e.bind(i,i);let s;Ce(t)?s=t:(s=t.handler,n=t);const o=ft;rr(this);const a=Zh(r,s.bind(i),n);return o?rr(o):fi(),a}function Jh(e,t){const n=t.split(".");return()=>{let i=e;for(let r=0;r<n.length&&i;r++)i=i[n[r]];return i}}function Vi(e,t){if(!tt(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),yt(e))Vi(e.value,t);else if(Se(e))for(let n=0;n<e.length;n++)Vi(e[n],t);else if(nd(e)||zr(e))e.forEach(n=>{Vi(n,t)});else if(sd(e))for(const n in e)Vi(e[n],t);return e}function ni(e,t,n,i){const r=e.dirs,s=t&&t.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[i];l&&(vr(),Jt(l,n,8,[e.el,a,e,t]),yr())}}function fp(e,t){return Ce(e)?(()=>st({name:e.name},t,{setup:e}))():e}const lo=e=>!!e.type.__asyncLoader,Kh=e=>e.type.__isKeepAlive;function dp(e,t){$h(e,"a",t)}function pp(e,t){$h(e,"da",t)}function $h(e,t,n=ft){const i=e.__wdc||(e.__wdc=()=>{let r=n;for(;r;){if(r.isDeactivated)return;r=r.parent}return e()});if(zo(t,i,n),n){let r=n.parent;for(;r&&r.parent;)Kh(r.parent.vnode)&&mp(i,t,n,r),r=r.parent}}function mp(e,t,n,i){const r=zo(t,e,i,!0);ef(()=>{Pl(i[t],r)},n)}function zo(e,t,n=ft,i=!1){if(n){const r=n[e]||(n[e]=[]),s=t.__weh||(t.__weh=(...o)=>{if(n.isUnmounted)return;vr(),rr(n);const a=Jt(t,n,e,o);return fi(),yr(),a});return i?r.unshift(s):r.push(s),s}}const Pn=e=>(t,n=ft)=>(!ts||e==="sp")&&zo(e,(...i)=>t(...i),n),gp=Pn("bm"),Qh=Pn("m"),vp=Pn("bu"),yp=Pn("u"),xp=Pn("bum"),ef=Pn("um"),_p=Pn("sp"),bp=Pn("rtg"),wp=Pn("rtc");function Mp(e,t=ft){zo("ec",e,t)}const Sp=Symbol.for("v-ndc"),Ga=e=>e?hf(e)?Kl(e)||e.proxy:Ga(e.parent):null,Hr=st(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ga(e.parent),$root:e=>Ga(e.root),$emit:e=>e.emit,$options:e=>ql(e),$forceUpdate:e=>e.f||(e.f=()=>jl(e.update)),$nextTick:e=>e.n||(e.n=$d.bind(e.proxy)),$watch:e=>hp.bind(e)}),ea=(e,t)=>e!==Je&&!e.__isScriptSetup&&Oe(e,t),Ep={get({_:e},t){const{ctx:n,setupState:i,data:r,props:s,accessCache:o,type:a,appContext:l}=e;let c;if(t[0]!=="$"){const f=o[t];if(f!==void 0)switch(f){case 1:return i[t];case 2:return r[t];case 4:return n[t];case 3:return s[t]}else{if(ea(i,t))return o[t]=1,i[t];if(r!==Je&&Oe(r,t))return o[t]=2,r[t];if((c=e.propsOptions[0])&&Oe(c,t))return o[t]=3,s[t];if(n!==Je&&Oe(n,t))return o[t]=4,n[t];ka&&(o[t]=0)}}const h=Hr[t];let u,d;if(h)return t==="$attrs"&&Tt(e,"get",t),h(e);if((u=a.__cssModules)&&(u=u[t]))return u;if(n!==Je&&Oe(n,t))return o[t]=4,n[t];if(d=l.config.globalProperties,Oe(d,t))return d[t]},set({_:e},t,n){const{data:i,setupState:r,ctx:s}=e;return ea(r,t)?(r[t]=n,!0):i!==Je&&Oe(i,t)?(i[t]=n,!0):Oe(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(s[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:i,appContext:r,propsOptions:s}},o){let a;return!!n[o]||e!==Je&&Oe(e,o)||ea(t,o)||(a=s[0])&&Oe(a,o)||Oe(i,o)||Oe(Hr,o)||Oe(r.config.globalProperties,o)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:Oe(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};function wc(e){return Se(e)?e.reduce((t,n)=>(t[n]=null,t),{}):e}let ka=!0;function Tp(e){const t=ql(e),n=e.proxy,i=e.ctx;ka=!1,t.beforeCreate&&Mc(t.beforeCreate,e,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:h,beforeMount:u,mounted:d,beforeUpdate:f,updated:p,activated:v,deactivated:y,beforeDestroy:g,beforeUnmount:m,destroyed:E,unmounted:S,render:A,renderTracked:b,renderTriggered:R,errorCaptured:G,serverPrefetch:W,expose:se,inheritAttrs:z,components:X,directives:V,filters:B}=t;if(c&&Ap(c,i,null),o)for(const K in o){const $=o[K];Ce($)&&(i[K]=$.bind(n))}if(r){const K=r.call(n,n);tt(K)&&(e.data=Hl(K))}if(ka=!0,s)for(const K in s){const $=s[K],oe=Ce($)?$.bind(n,n):Ce($.get)?$.get.bind(n,n):Zt,ue=!Ce($)&&Ce($.set)?$.set.bind(n):Zt,ae=om({get:oe,set:ue});Object.defineProperty(i,K,{enumerable:!0,configurable:!0,get:()=>ae.value,set:pe=>ae.value=pe})}if(a)for(const K in a)tf(a[K],i,n,K);if(l){const K=Ce(l)?l.call(n):l;Reflect.ownKeys(K).forEach($=>{Dp($,K[$])})}h&&Mc(h,e,"c");function H(K,$){Se($)?$.forEach(oe=>K(oe.bind(n))):$&&K($.bind(n))}if(H(gp,u),H(Qh,d),H(vp,f),H(yp,p),H(dp,v),H(pp,y),H(Mp,G),H(wp,b),H(bp,R),H(xp,m),H(ef,S),H(_p,W),Se(se))if(se.length){const K=e.exposed||(e.exposed={});se.forEach($=>{Object.defineProperty(K,$,{get:()=>n[$],set:oe=>n[$]=oe})})}else e.exposed||(e.exposed={});A&&e.render===Zt&&(e.render=A),z!=null&&(e.inheritAttrs=z),X&&(e.components=X),V&&(e.directives=V)}function Ap(e,t,n=Zt){Se(e)&&(e=Va(e));for(const i in e){const r=e[i];let s;tt(r)?"default"in r?s=co(r.from||i,r.default,!0):s=co(r.from||i):s=co(r),yt(s)?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):t[i]=s}}function Mc(e,t,n){Jt(Se(e)?e.map(i=>i.bind(t.proxy)):e.bind(t.proxy),t,n)}function tf(e,t,n,i){const r=i.includes(".")?Jh(n,i):()=>n[i];if(ct(e)){const s=t[e];Ce(s)&&Qo(r,s)}else if(Ce(e))Qo(r,e.bind(n));else if(tt(e))if(Se(e))e.forEach(s=>tf(s,t,n,i));else{const s=Ce(e.handler)?e.handler.bind(n):t[e.handler];Ce(s)&&Qo(r,s,e)}}function ql(e){const t=e.type,{mixins:n,extends:i}=t,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=e.appContext,a=s.get(t);let l;return a?l=a:!r.length&&!n&&!i?l=t:(l={},r.length&&r.forEach(c=>vo(l,c,o,!0)),vo(l,t,o)),tt(t)&&s.set(t,l),l}function vo(e,t,n,i=!1){const{mixins:r,extends:s}=t;s&&vo(e,s,n,!0),r&&r.forEach(o=>vo(e,o,n,!0));for(const o in t)if(!(i&&o==="expose")){const a=Lp[o]||n&&n[o];e[o]=a?a(e[o],t[o]):t[o]}return e}const Lp={data:Sc,props:Ec,emits:Ec,methods:Fr,computed:Fr,beforeCreate:gt,created:gt,beforeMount:gt,mounted:gt,beforeUpdate:gt,updated:gt,beforeDestroy:gt,beforeUnmount:gt,destroyed:gt,unmounted:gt,activated:gt,deactivated:gt,errorCaptured:gt,serverPrefetch:gt,components:Fr,directives:Fr,watch:Pp,provide:Sc,inject:Cp};function Sc(e,t){return t?e?function(){return st(Ce(e)?e.call(this,this):e,Ce(t)?t.call(this,this):t)}:t:e}function Cp(e,t){return Fr(Va(e),Va(t))}function Va(e){if(Se(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function gt(e,t){return e?[...new Set([].concat(e,t))]:t}function Fr(e,t){return e?st(Object.create(null),e,t):t}function Ec(e,t){return e?Se(e)&&Se(t)?[...new Set([...e,...t])]:st(Object.create(null),wc(e),wc(t??{})):t}function Pp(e,t){if(!e)return t;if(!t)return e;const n=st(Object.create(null),e);for(const i in t)n[i]=gt(e[i],t[i]);return n}function nf(){return{app:null,config:{isNativeTag:Qf,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Rp=0;function Ip(e,t){return function(i,r=null){Ce(i)||(i=st({},i)),r!=null&&!tt(r)&&(r=null);const s=nf(),o=new Set;let a=!1;const l=s.app={_uid:Rp++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:cm,get config(){return s.config},set config(c){},use(c,...h){return o.has(c)||(c&&Ce(c.install)?(o.add(c),c.install(l,...h)):Ce(c)&&(o.add(c),c(l,...h))),l},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),l},component(c,h){return h?(s.components[c]=h,l):s.components[c]},directive(c,h){return h?(s.directives[c]=h,l):s.directives[c]},mount(c,h,u){if(!a){const d=hi(i,r);return d.appContext=s,h&&t?t(d,c):e(d,c,u),a=!0,l._container=c,c.__vue_app__=l,Kl(d.component)||d.component.proxy}},unmount(){a&&(e(null,l._container),delete l._container.__vue_app__)},provide(c,h){return s.provides[c]=h,l},runWithContext(c){yo=l;try{return c()}finally{yo=null}}};return l}}let yo=null;function Dp(e,t){if(ft){let n=ft.provides;const i=ft.parent&&ft.parent.provides;i===n&&(n=ft.provides=Object.create(i)),n[e]=t}}function co(e,t,n=!1){const i=ft||cn;if(i||yo){const r=i?i.parent==null?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:yo._context.provides;if(r&&e in r)return r[e];if(arguments.length>1)return n&&Ce(t)?t.call(i&&i.proxy):t}}function Np(e,t,n,i=!1){const r={},s={};mo(s,Go,1),e.propsDefaults=Object.create(null),rf(e,t,r,s);for(const o in e.propsOptions[0])o in r||(r[o]=void 0);n?e.props=i?r:Wd(r):e.type.props?e.props=r:e.props=s,e.attrs=s}function Op(e,t,n,i){const{props:r,attrs:s,vnode:{patchFlag:o}}=e,a=ze(r),[l]=e.propsOptions;let c=!1;if((i||o>0)&&!(o&16)){if(o&8){const h=e.vnode.dynamicProps;for(let u=0;u<h.length;u++){let d=h[u];if(Uo(e.emitsOptions,d))continue;const f=t[d];if(l)if(Oe(s,d))f!==s[d]&&(s[d]=f,c=!0);else{const p=nr(d);r[p]=Wa(l,a,p,f,e,!1)}else f!==s[d]&&(s[d]=f,c=!0)}}}else{rf(e,t,r,s)&&(c=!0);let h;for(const u in a)(!t||!Oe(t,u)&&((h=gr(u))===u||!Oe(t,h)))&&(l?n&&(n[u]!==void 0||n[h]!==void 0)&&(r[u]=Wa(l,a,u,void 0,e,!0)):delete r[u]);if(s!==a)for(const u in s)(!t||!Oe(t,u))&&(delete s[u],c=!0)}c&&En(e,"set","$attrs")}function rf(e,t,n,i){const[r,s]=e.propsOptions;let o=!1,a;if(t)for(let l in t){if(ao(l))continue;const c=t[l];let h;r&&Oe(r,h=nr(l))?!s||!s.includes(h)?n[h]=c:(a||(a={}))[h]=c:Uo(e.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,o=!0)}if(s){const l=ze(n),c=a||Je;for(let h=0;h<s.length;h++){const u=s[h];n[u]=Wa(r,l,u,c[u],e,!Oe(c,u))}}return o}function Wa(e,t,n,i,r,s){const o=e[n];if(o!=null){const a=Oe(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&Ce(l)){const{propsDefaults:c}=r;n in c?i=c[n]:(rr(r),i=c[n]=l.call(null,t),fi())}else i=l}o[0]&&(s&&!a?i=!1:o[1]&&(i===""||i===gr(n))&&(i=!0))}return i}function sf(e,t,n=!1){const i=t.propsCache,r=i.get(e);if(r)return r;const s=e.props,o={},a=[];let l=!1;if(!Ce(e)){const h=u=>{l=!0;const[d,f]=sf(u,t,!0);st(o,d),f&&a.push(...f)};!n&&t.mixins.length&&t.mixins.forEach(h),e.extends&&h(e.extends),e.mixins&&e.mixins.forEach(h)}if(!s&&!l)return tt(e)&&i.set(e,Ki),Ki;if(Se(s))for(let h=0;h<s.length;h++){const u=nr(s[h]);Tc(u)&&(o[u]=Je)}else if(s)for(const h in s){const u=nr(h);if(Tc(u)){const d=s[h],f=o[u]=Se(d)||Ce(d)?{type:d}:st({},d);if(f){const p=Cc(Boolean,f.type),v=Cc(String,f.type);f[0]=p>-1,f[1]=v<0||p<v,(p>-1||Oe(f,"default"))&&a.push(u)}}}const c=[o,a];return tt(e)&&i.set(e,c),c}function Tc(e){return e[0]!=="$"}function Ac(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:e===null?"null":""}function Lc(e,t){return Ac(e)===Ac(t)}function Cc(e,t){return Se(t)?t.findIndex(n=>Lc(n,e)):Ce(t)&&Lc(t,e)?0:-1}const of=e=>e[0]==="_"||e==="$stable",Xl=e=>Se(e)?e.map(sn):[sn(e)],Fp=(e,t,n)=>{if(t._n)return t;const i=rp((...r)=>Xl(t(...r)),n);return i._c=!1,i},af=(e,t,n)=>{const i=e._ctx;for(const r in e){if(of(r))continue;const s=e[r];if(Ce(s))t[r]=Fp(r,s,i);else if(s!=null){const o=Xl(s);t[r]=()=>o}}},lf=(e,t)=>{const n=Xl(t);e.slots.default=()=>n},Bp=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=ze(t),mo(t,"_",n)):af(t,e.slots={})}else e.slots={},t&&lf(e,t);mo(e.slots,Go,1)},Up=(e,t,n)=>{const{vnode:i,slots:r}=e;let s=!0,o=Je;if(i.shapeFlag&32){const a=t._;a?n&&a===1?s=!1:(st(r,t),!n&&a===1&&delete r._):(s=!t.$stable,af(t,r)),o=t}else t&&(lf(e,t),o={default:1});if(s)for(const a in r)!of(a)&&!(a in o)&&delete r[a]};function ja(e,t,n,i,r=!1){if(Se(e)){e.forEach((d,f)=>ja(d,t&&(Se(t)?t[f]:t),n,i,r));return}if(lo(i)&&!r)return;const s=i.shapeFlag&4?Kl(i.component)||i.component.proxy:i.el,o=r?null:s,{i:a,r:l}=e,c=t&&t.r,h=a.refs===Je?a.refs={}:a.refs,u=a.setupState;if(c!=null&&c!==l&&(ct(c)?(h[c]=null,Oe(u,c)&&(u[c]=null)):yt(c)&&(c.value=null)),Ce(l))qn(l,a,12,[o,h]);else{const d=ct(l),f=yt(l);if(d||f){const p=()=>{if(e.f){const v=d?Oe(u,l)?u[l]:h[l]:l.value;r?Se(v)&&Pl(v,s):Se(v)?v.includes(s)||v.push(s):d?(h[l]=[s],Oe(u,l)&&(u[l]=h[l])):(l.value=[s],e.k&&(h[e.k]=l.value))}else d?(h[l]=o,Oe(u,l)&&(u[l]=o)):f&&(l.value=o,e.k&&(h[e.k]=o))};o?(p.id=-1,St(p,n)):p()}}}const St=up;function zp(e){return Hp(e)}function Hp(e,t){const n=Na();n.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:h,parentNode:u,nextSibling:d,setScopeId:f=Zt,insertStaticContent:p}=e,v=(w,L,I,U=null,O=null,_=null,x=!1,F=null,N=!!L.dynamicChildren)=>{if(w===L)return;w&&!Er(w,L)&&(U=de(w),pe(w,O,_,!0),w=null),L.patchFlag===-2&&(N=!1,L.dynamicChildren=null);const{type:M,ref:k,shapeFlag:j}=L;switch(M){case Ho:y(w,L,I,U);break;case Qr:g(w,L,I,U);break;case ta:w==null&&m(L,I,U,x);break;case Mn:X(w,L,I,U,O,_,x,F,N);break;default:j&1?A(w,L,I,U,O,_,x,F,N):j&6?V(w,L,I,U,O,_,x,F,N):(j&64||j&128)&&M.process(w,L,I,U,O,_,x,F,N,ge)}k!=null&&O&&ja(k,w&&w.ref,_,L||w,!L)},y=(w,L,I,U)=>{if(w==null)i(L.el=a(L.children),I,U);else{const O=L.el=w.el;L.children!==w.children&&c(O,L.children)}},g=(w,L,I,U)=>{w==null?i(L.el=l(L.children||""),I,U):L.el=w.el},m=(w,L,I,U)=>{[w.el,w.anchor]=p(w.children,L,I,U,w.el,w.anchor)},E=({el:w,anchor:L},I,U)=>{let O;for(;w&&w!==L;)O=d(w),i(w,I,U),w=O;i(L,I,U)},S=({el:w,anchor:L})=>{let I;for(;w&&w!==L;)I=d(w),r(w),w=I;r(L)},A=(w,L,I,U,O,_,x,F,N)=>{x=x||L.type==="svg",w==null?b(L,I,U,O,_,x,F,N):W(w,L,O,_,x,F,N)},b=(w,L,I,U,O,_,x,F)=>{let N,M;const{type:k,props:j,shapeFlag:ee,transition:Y,dirs:C}=w;if(N=w.el=o(w.type,_,j&&j.is,j),ee&8?h(N,w.children):ee&16&&G(w.children,N,null,U,O,_&&k!=="foreignObject",x,F),C&&ni(w,null,U,"created"),R(N,w,w.scopeId,x,U),j){for(const re in j)re!=="value"&&!ao(re)&&s(N,re,null,j[re],_,w.children,U,O,Be);"value"in j&&s(N,"value",null,j.value),(M=j.onVnodeBeforeMount)&&tn(M,U,w)}C&&ni(w,null,U,"beforeMount");const Q=(!O||O&&!O.pendingBranch)&&Y&&!Y.persisted;Q&&Y.beforeEnter(N),i(N,L,I),((M=j&&j.onVnodeMounted)||Q||C)&&St(()=>{M&&tn(M,U,w),Q&&Y.enter(N),C&&ni(w,null,U,"mounted")},O)},R=(w,L,I,U,O)=>{if(I&&f(w,I),U)for(let _=0;_<U.length;_++)f(w,U[_]);if(O){let _=O.subTree;if(L===_){const x=O.vnode;R(w,x,x.scopeId,x.slotScopeIds,O.parent)}}},G=(w,L,I,U,O,_,x,F,N=0)=>{for(let M=N;M<w.length;M++){const k=w[M]=F?Hn(w[M]):sn(w[M]);v(null,k,L,I,U,O,_,x,F)}},W=(w,L,I,U,O,_,x)=>{const F=L.el=w.el;let{patchFlag:N,dynamicChildren:M,dirs:k}=L;N|=w.patchFlag&16;const j=w.props||Je,ee=L.props||Je;let Y;I&&ii(I,!1),(Y=ee.onVnodeBeforeUpdate)&&tn(Y,I,L,w),k&&ni(L,w,I,"beforeUpdate"),I&&ii(I,!0);const C=O&&L.type!=="foreignObject";if(M?se(w.dynamicChildren,M,F,I,U,C,_):x||$(w,L,F,null,I,U,C,_,!1),N>0){if(N&16)z(F,L,j,ee,I,U,O);else if(N&2&&j.class!==ee.class&&s(F,"class",null,ee.class,O),N&4&&s(F,"style",j.style,ee.style,O),N&8){const Q=L.dynamicProps;for(let re=0;re<Q.length;re++){const ie=Q[re],he=j[ie],Pe=ee[ie];(Pe!==he||ie==="value")&&s(F,ie,he,Pe,O,w.children,I,U,Be)}}N&1&&w.children!==L.children&&h(F,L.children)}else!x&&M==null&&z(F,L,j,ee,I,U,O);((Y=ee.onVnodeUpdated)||k)&&St(()=>{Y&&tn(Y,I,L,w),k&&ni(L,w,I,"updated")},U)},se=(w,L,I,U,O,_,x)=>{for(let F=0;F<L.length;F++){const N=w[F],M=L[F],k=N.el&&(N.type===Mn||!Er(N,M)||N.shapeFlag&70)?u(N.el):I;v(N,M,k,null,U,O,_,x,!0)}},z=(w,L,I,U,O,_,x)=>{if(I!==U){if(I!==Je)for(const F in I)!ao(F)&&!(F in U)&&s(w,F,I[F],null,x,L.children,O,_,Be);for(const F in U){if(ao(F))continue;const N=U[F],M=I[F];N!==M&&F!=="value"&&s(w,F,M,N,x,L.children,O,_,Be)}"value"in U&&s(w,"value",I.value,U.value)}},X=(w,L,I,U,O,_,x,F,N)=>{const M=L.el=w?w.el:a(""),k=L.anchor=w?w.anchor:a("");let{patchFlag:j,dynamicChildren:ee,slotScopeIds:Y}=L;Y&&(F=F?F.concat(Y):Y),w==null?(i(M,I,U),i(k,I,U),G(L.children,I,k,O,_,x,F,N)):j>0&&j&64&&ee&&w.dynamicChildren?(se(w.dynamicChildren,ee,I,O,_,x,F),(L.key!=null||O&&L===O.subTree)&&cf(w,L,!0)):$(w,L,I,k,O,_,x,F,N)},V=(w,L,I,U,O,_,x,F,N)=>{L.slotScopeIds=F,w==null?L.shapeFlag&512?O.ctx.activate(L,I,U,x,N):B(L,I,U,O,_,x,N):D(w,L,N)},B=(w,L,I,U,O,_,x)=>{const F=w.component=em(w,U,O);if(Kh(w)&&(F.ctx.renderer=ge),tm(F),F.asyncDep){if(O&&O.registerDep(F,H),!w.el){const N=F.subTree=hi(Qr);g(null,N,L,I)}return}H(F,w,L,I,O,_,x)},D=(w,L,I)=>{const U=L.component=w.component;if(ap(w,L,I))if(U.asyncDep&&!U.asyncResolved){K(U,L,I);return}else U.next=L,ep(U.update),U.update();else L.el=w.el,U.vnode=L},H=(w,L,I,U,O,_,x)=>{const F=()=>{if(w.isMounted){let{next:k,bu:j,u:ee,parent:Y,vnode:C}=w,Q=k,re;ii(w,!1),k?(k.el=C.el,K(w,k,x)):k=C,j&&Ko(j),(re=k.props&&k.props.onVnodeBeforeUpdate)&&tn(re,Y,k,C),ii(w,!0);const ie=$o(w),he=w.subTree;w.subTree=ie,v(he,ie,u(he.el),de(he),w,O,_),k.el=ie.el,Q===null&&lp(w,ie.el),ee&&St(ee,O),(re=k.props&&k.props.onVnodeUpdated)&&St(()=>tn(re,Y,k,C),O)}else{let k;const{el:j,props:ee}=L,{bm:Y,m:C,parent:Q}=w,re=lo(L);if(ii(w,!1),Y&&Ko(Y),!re&&(k=ee&&ee.onVnodeBeforeMount)&&tn(k,Q,L),ii(w,!0),j&&be){const ie=()=>{w.subTree=$o(w),be(j,w.subTree,w,O,null)};re?L.type.__asyncLoader().then(()=>!w.isUnmounted&&ie()):ie()}else{const ie=w.subTree=$o(w);v(null,ie,I,U,w,O,_),L.el=ie.el}if(C&&St(C,O),!re&&(k=ee&&ee.onVnodeMounted)){const ie=L;St(()=>tn(k,Q,ie),O)}(L.shapeFlag&256||Q&&lo(Q.vnode)&&Q.vnode.shapeFlag&256)&&w.a&&St(w.a,O),w.isMounted=!0,L=I=U=null}},N=w.effect=new Fl(F,()=>jl(M),w.scope),M=w.update=()=>N.run();M.id=w.uid,ii(w,!0),M()},K=(w,L,I)=>{L.component=w;const U=w.vnode.props;w.vnode=L,w.next=null,Op(w,L.props,U,I),Up(w,L.children,I),vr(),_c(),yr()},$=(w,L,I,U,O,_,x,F,N=!1)=>{const M=w&&w.children,k=w?w.shapeFlag:0,j=L.children,{patchFlag:ee,shapeFlag:Y}=L;if(ee>0){if(ee&128){ue(M,j,I,U,O,_,x,F,N);return}else if(ee&256){oe(M,j,I,U,O,_,x,F,N);return}}Y&8?(k&16&&Be(M,O,_),j!==M&&h(I,j)):k&16?Y&16?ue(M,j,I,U,O,_,x,F,N):Be(M,O,_,!0):(k&8&&h(I,""),Y&16&&G(j,I,U,O,_,x,F,N))},oe=(w,L,I,U,O,_,x,F,N)=>{w=w||Ki,L=L||Ki;const M=w.length,k=L.length,j=Math.min(M,k);let ee;for(ee=0;ee<j;ee++){const Y=L[ee]=N?Hn(L[ee]):sn(L[ee]);v(w[ee],Y,I,null,O,_,x,F,N)}M>k?Be(w,O,_,!0,!1,j):G(L,I,U,O,_,x,F,N,j)},ue=(w,L,I,U,O,_,x,F,N)=>{let M=0;const k=L.length;let j=w.length-1,ee=k-1;for(;M<=j&&M<=ee;){const Y=w[M],C=L[M]=N?Hn(L[M]):sn(L[M]);if(Er(Y,C))v(Y,C,I,null,O,_,x,F,N);else break;M++}for(;M<=j&&M<=ee;){const Y=w[j],C=L[ee]=N?Hn(L[ee]):sn(L[ee]);if(Er(Y,C))v(Y,C,I,null,O,_,x,F,N);else break;j--,ee--}if(M>j){if(M<=ee){const Y=ee+1,C=Y<k?L[Y].el:U;for(;M<=ee;)v(null,L[M]=N?Hn(L[M]):sn(L[M]),I,C,O,_,x,F,N),M++}}else if(M>ee)for(;M<=j;)pe(w[M],O,_,!0),M++;else{const Y=M,C=M,Q=new Map;for(M=C;M<=ee;M++){const We=L[M]=N?Hn(L[M]):sn(L[M]);We.key!=null&&Q.set(We.key,M)}let re,ie=0;const he=ee-C+1;let Pe=!1,$e=0;const Ht=new Array(he);for(M=0;M<he;M++)Ht[M]=0;for(M=Y;M<=j;M++){const We=w[M];if(ie>=he){pe(We,O,_,!0);continue}let Dt;if(We.key!=null)Dt=Q.get(We.key);else for(re=C;re<=ee;re++)if(Ht[re-C]===0&&Er(We,L[re])){Dt=re;break}Dt===void 0?pe(We,O,_,!0):(Ht[Dt-C]=M+1,Dt>=$e?$e=Dt:Pe=!0,v(We,L[Dt],I,null,O,_,x,F,N),ie++)}const wt=Pe?Gp(Ht):Ki;for(re=wt.length-1,M=he-1;M>=0;M--){const We=C+M,Dt=L[We],Mi=We+1<k?L[We+1].el:U;Ht[M]===0?v(null,Dt,I,Mi,O,_,x,F,N):Pe&&(re<0||M!==wt[re]?ae(Dt,I,Mi,2):re--)}}},ae=(w,L,I,U,O=null)=>{const{el:_,type:x,transition:F,children:N,shapeFlag:M}=w;if(M&6){ae(w.component.subTree,L,I,U);return}if(M&128){w.suspense.move(L,I,U);return}if(M&64){x.move(w,L,I,ge);return}if(x===Mn){i(_,L,I);for(let j=0;j<N.length;j++)ae(N[j],L,I,U);i(w.anchor,L,I);return}if(x===ta){E(w,L,I);return}if(U!==2&&M&1&&F)if(U===0)F.beforeEnter(_),i(_,L,I),St(()=>F.enter(_),O);else{const{leave:j,delayLeave:ee,afterLeave:Y}=F,C=()=>i(_,L,I),Q=()=>{j(_,()=>{C(),Y&&Y()})};ee?ee(_,C,Q):Q()}else i(_,L,I)},pe=(w,L,I,U=!1,O=!1)=>{const{type:_,props:x,ref:F,children:N,dynamicChildren:M,shapeFlag:k,patchFlag:j,dirs:ee}=w;if(F!=null&&ja(F,null,I,w,!0),k&256){L.ctx.deactivate(w);return}const Y=k&1&&ee,C=!lo(w);let Q;if(C&&(Q=x&&x.onVnodeBeforeUnmount)&&tn(Q,L,w),k&6)ne(w.component,I,U);else{if(k&128){w.suspense.unmount(I,U);return}Y&&ni(w,null,L,"beforeUnmount"),k&64?w.type.remove(w,L,I,O,ge,U):M&&(_!==Mn||j>0&&j&64)?Be(M,L,I,!1,!0):(_===Mn&&j&384||!O&&k&16)&&Be(N,L,I),U&&_e(w)}(C&&(Q=x&&x.onVnodeUnmounted)||Y)&&St(()=>{Q&&tn(Q,L,w),Y&&ni(w,null,L,"unmounted")},I)},_e=w=>{const{type:L,el:I,anchor:U,transition:O}=w;if(L===Mn){Ge(I,U);return}if(L===ta){S(w);return}const _=()=>{r(I),O&&!O.persisted&&O.afterLeave&&O.afterLeave()};if(w.shapeFlag&1&&O&&!O.persisted){const{leave:x,delayLeave:F}=O,N=()=>x(I,_);F?F(w.el,_,N):N()}else _()},Ge=(w,L)=>{let I;for(;w!==L;)I=d(w),r(w),w=I;r(L)},ne=(w,L,I)=>{const{bum:U,scope:O,update:_,subTree:x,um:F}=w;U&&Ko(U),O.stop(),_&&(_.active=!1,pe(x,w,L,I)),F&&St(F,L),St(()=>{w.isUnmounted=!0},L),L&&L.pendingBranch&&!L.isUnmounted&&w.asyncDep&&!w.asyncResolved&&w.suspenseId===L.pendingId&&(L.deps--,L.deps===0&&L.resolve())},Be=(w,L,I,U=!1,O=!1,_=0)=>{for(let x=_;x<w.length;x++)pe(w[x],L,I,U,O)},de=w=>w.shapeFlag&6?de(w.component.subTree):w.shapeFlag&128?w.suspense.next():d(w.anchor||w.el),Te=(w,L,I)=>{w==null?L._vnode&&pe(L._vnode,null,null,!0):v(L._vnode||null,w,L,null,null,null,I),_c(),jh(),L._vnode=w},ge={p:v,um:pe,m:ae,r:_e,mt:B,mc:G,pc:$,pbc:se,n:de,o:e};let Ie,be;return t&&([Ie,be]=t(ge)),{render:Te,hydrate:Ie,createApp:Ip(Te,Ie)}}function ii({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function cf(e,t,n=!1){const i=e.children,r=t.children;if(Se(i)&&Se(r))for(let s=0;s<i.length;s++){const o=i[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Hn(r[s]),a.el=o.el),n||cf(o,a)),a.type===Ho&&(a.el=o.el)}}function Gp(e){const t=e.slice(),n=[0];let i,r,s,o,a;const l=e.length;for(i=0;i<l;i++){const c=e[i];if(c!==0){if(r=n[n.length-1],e[r]<c){t[i]=r,n.push(i);continue}for(s=0,o=n.length-1;s<o;)a=s+o>>1,e[n[a]]<c?s=a+1:o=a;c<e[n[s]]&&(s>0&&(t[i]=n[s-1]),n[s]=i)}}for(s=n.length,o=n[s-1];s-- >0;)n[s]=o,o=t[o];return n}const kp=e=>e.__isTeleport,Mn=Symbol.for("v-fgt"),Ho=Symbol.for("v-txt"),Qr=Symbol.for("v-cmt"),ta=Symbol.for("v-stc"),Gr=[];let Yt=null;function Vp(e=!1){Gr.push(Yt=e?null:[])}function Wp(){Gr.pop(),Yt=Gr[Gr.length-1]||null}let es=1;function Pc(e){es+=e}function jp(e){return e.dynamicChildren=es>0?Yt||Ki:null,Wp(),es>0&&Yt&&Yt.push(e),e}function qp(e,t,n,i,r,s){return jp(Yl(e,t,n,i,r,s,!0))}function Xp(e){return e?e.__v_isVNode===!0:!1}function Er(e,t){return e.type===t.type&&e.key===t.key}const Go="__vInternal",uf=({key:e})=>e??null,uo=({ref:e,ref_key:t,ref_for:n})=>(typeof e=="number"&&(e=""+e),e!=null?ct(e)||yt(e)||Ce(e)?{i:cn,r:e,k:t,f:!!n}:e:null);function Yl(e,t=null,n=null,i=0,r=null,s=e===Mn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&uf(t),ref:t&&uo(t),scopeId:Yh,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:cn};return a?(Zl(l,n),s&128&&e.normalize(l)):n&&(l.shapeFlag|=ct(n)?8:16),es>0&&!o&&Yt&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Yt.push(l),l}const hi=Yp;function Yp(e,t=null,n=null,i=0,r=null,s=!1){if((!e||e===Sp)&&(e=Qr),Xp(e)){const a=ir(e,t,!0);return n&&Zl(a,n),es>0&&!s&&Yt&&(a.shapeFlag&6?Yt[Yt.indexOf(e)]=a:Yt.push(a)),a.patchFlag|=-2,a}if(sm(e)&&(e=e.__vccOpts),t){t=Zp(t);let{class:a,style:l}=t;a&&!ct(a)&&(t.class=Nl(a)),tt(l)&&(Hh(l)&&!Se(l)&&(l=st({},l)),t.style=Dl(l))}const o=ct(e)?1:cp(e)?128:kp(e)?64:tt(e)?4:Ce(e)?2:0;return Yl(e,t,n,i,r,o,s,!0)}function Zp(e){return e?Hh(e)||Go in e?st({},e):e:null}function ir(e,t,n=!1){const{props:i,ref:r,patchFlag:s,children:o}=e,a=t?Kp(i||{},t):i;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:a,key:a&&uf(a),ref:t&&t.ref?n&&r?Se(r)?r.concat(uo(t)):[r,uo(t)]:uo(t):r,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Mn?s===-1?16:s|16:s,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&ir(e.ssContent),ssFallback:e.ssFallback&&ir(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function Jp(e=" ",t=0){return hi(Ho,null,e,t)}function sn(e){return e==null||typeof e=="boolean"?hi(Qr):Se(e)?hi(Mn,null,e.slice()):typeof e=="object"?Hn(e):hi(Ho,null,String(e))}function Hn(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:ir(e)}function Zl(e,t){let n=0;const{shapeFlag:i}=e;if(t==null)t=null;else if(Se(t))n=16;else if(typeof t=="object")if(i&65){const r=t.default;r&&(r._c&&(r._d=!1),Zl(e,r()),r._c&&(r._d=!0));return}else{n=32;const r=t._;!r&&!(Go in t)?t._ctx=cn:r===3&&cn&&(cn.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else Ce(t)?(t={default:t,_ctx:cn},n=32):(t=String(t),i&64?(n=16,t=[Jp(t)]):n=8);e.children=t,e.shapeFlag|=n}function Kp(...e){const t={};for(let n=0;n<e.length;n++){const i=e[n];for(const r in i)if(r==="class")t.class!==i.class&&(t.class=Nl([t.class,i.class]));else if(r==="style")t.style=Dl([t.style,i.style]);else if(Do(r)){const s=t[r],o=i[r];o&&s!==o&&!(Se(s)&&s.includes(o))&&(t[r]=s?[].concat(s,o):o)}else r!==""&&(t[r]=i[r])}return t}function tn(e,t,n,i=null){Jt(e,t,7,[n,i])}const $p=nf();let Qp=0;function em(e,t,n){const i=e.type,r=(t?t.appContext:e.appContext)||$p,s={uid:Qp++,vnode:e,type:i,parent:t,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new md(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:sf(i,r),emitsOptions:Xh(i,r),emit:null,emitted:null,propsDefaults:Je,inheritAttrs:i.inheritAttrs,ctx:Je,data:Je,props:Je,attrs:Je,slots:Je,refs:Je,setupState:Je,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=t?t.root:s,s.emit=ip.bind(null,s),e.ce&&e.ce(s),s}let ft=null,Jl,Ei,Rc="__VUE_INSTANCE_SETTERS__";(Ei=Na()[Rc])||(Ei=Na()[Rc]=[]),Ei.push(e=>ft=e),Jl=e=>{Ei.length>1?Ei.forEach(t=>t(e)):Ei[0](e)};const rr=e=>{Jl(e),e.scope.on()},fi=()=>{ft&&ft.scope.off(),Jl(null)};function hf(e){return e.vnode.shapeFlag&4}let ts=!1;function tm(e,t=!1){ts=t;const{props:n,children:i}=e.vnode,r=hf(e);Np(e,n,r,t),Bp(e,i);const s=r?nm(e,t):void 0;return ts=!1,s}function nm(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=Gh(new Proxy(e.ctx,Ep));const{setup:i}=n;if(i){const r=e.setupContext=i.length>1?rm(e):null;rr(e),vr();const s=qn(i,e,0,[e.props,r]);if(yr(),fi(),Th(s)){if(s.then(fi,fi),t)return s.then(o=>{Ic(e,o,t)}).catch(o=>{Bo(o,e,0)});e.asyncDep=s}else Ic(e,s,t)}else ff(e,t)}function Ic(e,t,n){Ce(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:tt(t)&&(e.setupState=kh(t)),ff(e,n)}let Dc;function ff(e,t,n){const i=e.type;if(!e.render){if(!t&&Dc&&!i.render){const r=i.template||ql(e).template;if(r){const{isCustomElement:s,compilerOptions:o}=e.appContext.config,{delimiters:a,compilerOptions:l}=i,c=st(st({isCustomElement:s,delimiters:a},o),l);i.render=Dc(r,c)}}e.render=i.render||Zt}rr(e),vr(),Tp(e),yr(),fi()}function im(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,n){return Tt(e,"get","$attrs"),t[n]}}))}function rm(e){const t=n=>{e.exposed=n||{}};return{get attrs(){return im(e)},slots:e.slots,emit:e.emit,expose:t}}function Kl(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(kh(Gh(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in Hr)return Hr[n](e)},has(t,n){return n in t||n in Hr}}))}function sm(e){return Ce(e)&&"__vccOpts"in e}const om=(e,t)=>Jd(e,t,ts),am=Symbol.for("v-scx"),lm=()=>co(am),cm="3.3.4",um="http://www.w3.org/2000/svg",ci=typeof document<"u"?document:null,Nc=ci&&ci.createElement("template"),hm={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,i)=>{const r=t?ci.createElementNS(um,e):ci.createElement(e,n?{is:n}:void 0);return e==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:e=>ci.createTextNode(e),createComment:e=>ci.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>ci.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,i,r,s){const o=n?n.previousSibling:t.lastChild;if(r&&(r===s||r.nextSibling))for(;t.insertBefore(r.cloneNode(!0),n),!(r===s||!(r=r.nextSibling)););else{Nc.innerHTML=i?`<svg>${e}</svg>`:e;const a=Nc.content;if(i){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}t.insertBefore(a,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function fm(e,t,n){const i=e._vtc;i&&(t=(t?[t,...i]:[...i]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function dm(e,t,n){const i=e.style,r=ct(n);if(n&&!r){if(t&&!ct(t))for(const s in t)n[s]==null&&qa(i,s,"");for(const s in n)qa(i,s,n[s])}else{const s=i.display;r?t!==n&&(i.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(i.display=s)}}const Oc=/\s*!important$/;function qa(e,t,n){if(Se(n))n.forEach(i=>qa(e,t,i));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const i=pm(e,t);Oc.test(n)?e.setProperty(gr(i),n.replace(Oc,""),"important"):e[i]=n}}const Fc=["Webkit","Moz","ms"],na={};function pm(e,t){const n=na[t];if(n)return n;let i=nr(t);if(i!=="filter"&&i in e)return na[t]=i;i=Ah(i);for(let r=0;r<Fc.length;r++){const s=Fc[r]+i;if(s in e)return na[t]=s}return t}const Bc="http://www.w3.org/1999/xlink";function mm(e,t,n,i,r){if(i&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(Bc,t.slice(6,t.length)):e.setAttributeNS(Bc,t,n);else{const s=pd(t);n==null||s&&!Lh(n)?e.removeAttribute(t):e.setAttribute(t,s?"":n)}}function gm(e,t,n,i,r,s,o){if(t==="innerHTML"||t==="textContent"){i&&o(i,r,s),e[t]=n??"";return}const a=e.tagName;if(t==="value"&&a!=="PROGRESS"&&!a.includes("-")){e._value=n;const c=a==="OPTION"?e.getAttribute("value"):e.value,h=n??"";c!==h&&(e.value=h),n==null&&e.removeAttribute(t);return}let l=!1;if(n===""||n==null){const c=typeof e[t];c==="boolean"?n=Lh(n):n==null&&c==="string"?(n="",l=!0):c==="number"&&(n=0,l=!0)}try{e[t]=n}catch{}l&&e.removeAttribute(t)}function vm(e,t,n,i){e.addEventListener(t,n,i)}function ym(e,t,n,i){e.removeEventListener(t,n,i)}function xm(e,t,n,i,r=null){const s=e._vei||(e._vei={}),o=s[t];if(i&&o)o.value=i;else{const[a,l]=_m(t);if(i){const c=s[t]=Mm(i,r);vm(e,a,c,l)}else o&&(ym(e,a,o,l),s[t]=void 0)}}const Uc=/(?:Once|Passive|Capture)$/;function _m(e){let t;if(Uc.test(e)){t={};let i;for(;i=e.match(Uc);)e=e.slice(0,e.length-i[0].length),t[i[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):gr(e.slice(2)),t]}let ia=0;const bm=Promise.resolve(),wm=()=>ia||(bm.then(()=>ia=0),ia=Date.now());function Mm(e,t){const n=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=n.attached)return;Jt(Sm(i,n.value),t,5,[i])};return n.value=e,n.attached=wm(),n}function Sm(e,t){if(Se(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(i=>r=>!r._stopped&&i&&i(r))}else return t}const zc=/^on[a-z]/,Em=(e,t,n,i,r=!1,s,o,a,l)=>{t==="class"?fm(e,i,r):t==="style"?dm(e,n,i):Do(t)?Cl(t)||xm(e,t,n,i,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):Tm(e,t,i,r))?gm(e,t,i,s,o,a,l):(t==="true-value"?e._trueValue=i:t==="false-value"&&(e._falseValue=i),mm(e,t,i,r))};function Tm(e,t,n,i){return i?!!(t==="innerHTML"||t==="textContent"||t in e&&zc.test(t)&&Ce(n)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||zc.test(t)&&ct(n)?!1:t in e}const Am=st({patchProp:Em},hm);let Hc;function Lm(){return Hc||(Hc=zp(Am))}const Cm=(...e)=>{const t=Lm().createApp(...e),{mount:n}=t;return t.mount=i=>{const r=Pm(i);if(!r)return;const s=t._component;!Ce(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.innerHTML="";const o=n(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},t};function Pm(e){return ct(e)?document.querySelector(e):e}const Rm="124",Gn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},kn={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Im=0,Gc=1,Dm=2,df=1,Nm=2,Br=3,ko=0,at=1,Vo=2,pf=1,kr=0,Vr=1,kc=2,Vc=3,Wc=4,Om=5,ki=100,Fm=101,Bm=102,jc=103,qc=104,Um=200,zm=201,Hm=202,Gm=203,mf=204,gf=205,km=206,Vm=207,Wm=208,jm=209,qm=210,Xm=0,Ym=1,Zm=2,Xa=3,Jm=4,Km=5,$m=6,Qm=7,Wo=0,eg=1,tg=2,Wr=0,ng=1,ig=2,rg=3,sg=4,og=5,vf=300,$l=301,Ql=302,Xc=303,Yc=304,ec=306,tc=307,Ya=1e3,Ct=1001,Za=1002,vt=1003,Zc=1004,Jc=1005,pt=1006,ag=1007,jo=1008,nc=1009,lg=1010,cg=1011,xo=1012,ug=1013,ho=1014,Vn=1015,_o=1016,hg=1017,fg=1018,dg=1019,jr=1020,pg=1021,di=1022,Kt=1023,mg=1024,gg=1025,er=1026,ns=1027,vg=1028,yg=1029,xg=1030,_g=1031,bg=1032,wg=1033,Kc=33776,$c=33777,Qc=33778,eu=33779,tu=35840,nu=35841,iu=35842,ru=35843,Mg=36196,su=37492,ou=37496,Sg=37808,Eg=37809,Tg=37810,Ag=37811,Lg=37812,Cg=37813,Pg=37814,Rg=37815,Ig=37816,Dg=37817,Ng=37818,Og=37819,Fg=37820,Bg=37821,Ug=36492,zg=37840,Hg=37841,Gg=37842,kg=37843,Vg=37844,Wg=37845,jg=37846,qg=37847,Xg=37848,Yg=37849,Zg=37850,Jg=37851,Kg=37852,$g=37853,Qg=2200,ev=2201,tv=2202,bo=2300,fo=2301,ra=2302,Wi=2400,ji=2401,wo=2402,ic=2500,yf=2501,nv=0,ys=3e3,xf=3001,iv=3007,rv=3002,sv=3003,ov=3004,av=3005,lv=3006,cv=3200,uv=3201,xr=0,hv=1,sa=7680,fv=519,qo=35044,is=35048,au="300 es";function en(){}Object.assign(en.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}},dispatchEvent:function(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,e)}}});const ot=[];for(let e=0;e<256;e++)ot[e]=(e<16?"0":"")+e.toString(16);let Ls=1234567;const we={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(ot[e&255]+ot[e>>8&255]+ot[e>>16&255]+ot[e>>24&255]+"-"+ot[t&255]+ot[t>>8&255]+"-"+ot[t>>16&15|64]+ot[t>>24&255]+"-"+ot[n&63|128]+ot[n>>8&255]+"-"+ot[n>>16&255]+ot[n>>24&255]+ot[i&255]+ot[i>>8&255]+ot[i>>16&255]+ot[i>>24&255]).toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return e!==void 0&&(Ls=e%2147483647),Ls=Ls*16807%2147483647,(Ls-1)/2147483646},degToRad:function(e){return e*we.DEG2RAD},radToDeg:function(e){return e*we.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),l=o(n/2),c=s((t+i)/2),h=o((t+i)/2),u=s((t-i)/2),d=o((t-i)/2),f=s((i-t)/2),p=o((i-t)/2);switch(r){case"XYX":e.set(a*h,l*u,l*d,a*c);break;case"YZY":e.set(l*d,a*h,l*u,a*c);break;case"ZXZ":e.set(l*u,l*d,a*h,a*c);break;case"XZX":e.set(a*h,l*p,l*f,a*c);break;case"YXY":e.set(l*f,a*h,l*p,a*c);break;case"ZYZ":e.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class J{constructor(t=0,n=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=n}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,n){return this.x=t,this.y=n,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this}sub(t,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const n=this.x,i=this.y,r=t.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y;return n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t}fromBufferAttribute(t,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this}rotateAround(t,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-t.x,o=this.y-t.y;return this.x=s*i-o*r+t.x,this.y=s*r+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Et{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,n,i,r,s,o,a,l,c){const h=this.elements;return h[0]=t,h[1]=r,h[2]=a,h[3]=n,h[4]=s,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(t,n,i){return t.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const n=t.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],v=r[0],y=r[3],g=r[6],m=r[1],E=r[4],S=r[7],A=r[2],b=r[5],R=r[8];return s[0]=o*v+a*m+l*A,s[3]=o*y+a*E+l*b,s[6]=o*g+a*S+l*R,s[1]=c*v+h*m+u*A,s[4]=c*y+h*E+u*b,s[7]=c*g+h*S+u*R,s[2]=d*v+f*m+p*A,s[5]=d*y+f*E+p*b,s[8]=d*g+f*S+p*R,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=t,n[4]*=t,n[7]*=t,n[2]*=t,n[5]*=t,n[8]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[1],r=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8];return n*o*h-n*a*c-i*s*h+i*a*l+r*s*c-r*o*l}invert(){const t=this.elements,n=t[0],i=t[1],r=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=h*o-a*c,d=a*l-h*s,f=c*s-o*l,p=n*u+i*d+r*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return t[0]=u*v,t[1]=(r*c-h*i)*v,t[2]=(a*i-r*o)*v,t[3]=d*v,t[4]=(h*n-r*l)*v,t[5]=(r*s-a*n)*v,t[6]=f*v,t[7]=(i*l-c*n)*v,t[8]=(o*n-i*s)*v,this}transpose(){let t;const n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).copy(this).invert().transpose()}transposeIntoArray(t){const n=this.elements;return t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8],this}setUvTransform(t,n,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+t,-r*c,r*l,-r*(-c*o+l*a)+a+n,0,0,1),this}scale(t,n){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(t){const n=Math.cos(t),i=Math.sin(t),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],h=r[7];return r[0]=n*s+i*l,r[3]=n*o+i*c,r[6]=n*a+i*h,r[1]=-i*s+n*l,r[4]=-i*o+n*c,r[7]=-i*a+n*h,this}translate(t,n){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n=0){for(let i=0;i<9;i++)this.elements[i]=t[i+n];return this}toArray(t=[],n=0){const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t}}let Ti;const _r={getDataURL:function(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ti===void 0&&(Ti=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Ti.width=e.width,Ti.height=e.height;const n=Ti.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ti}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let dv=0;function Ve(e=Ve.DEFAULT_IMAGE,t=Ve.DEFAULT_MAPPING,n=Ct,i=Ct,r=pt,s=jo,o=Kt,a=nc,l=1,c=ys){Object.defineProperty(this,"id",{value:dv++}),this.uuid=we.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new J(0,0),this.repeat=new J(1,1),this.center=new J(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}Ve.DEFAULT_IMAGE=void 0;Ve.DEFAULT_MAPPING=vf;Ve.prototype=Object.assign(Object.create(en.prototype),{constructor:Ve,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=we.generateUUID()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?r.push(oa(i[s].image)):r.push(oa(i[s]))}else r=oa(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==vf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ya:e.x=e.x-Math.floor(e.x);break;case Ct:e.x=e.x<0?0:1;break;case Za:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ya:e.y=e.y-Math.floor(e.y);break;case Ct:e.y=e.y<0?0:1;break;case Za:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}});Object.defineProperty(Ve.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function oa(e){return typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap?_r.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class ke{constructor(t=0,n=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,n,i,r){return this.x=t,this.y=n,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this.w=t.w+n.w,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this.w+=t.w*n,this}sub(t,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this.w=t.w-n.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,s=this.w,o=t.elements;return this.x=o[0]*n+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*n+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*n+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*n+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const n=Math.sqrt(1-t.w*t.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/n,this.y=t.y/n,this.z=t.z/n),this}setAxisAngleFromRotationMatrix(t){let n,i,r,s;const l=t.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],v=l[2],y=l[6],g=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-v)<.01&&Math.abs(p-y)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+v)<.1&&Math.abs(p+y)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const E=(c+1)/2,S=(f+1)/2,A=(g+1)/2,b=(h+d)/4,R=(u+v)/4,G=(p+y)/4;return E>S&&E>A?E<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(E),r=b/i,s=R/i):S>A?S<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(S),i=b/r,s=G/r):A<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(A),i=R/s,r=G/s),this.set(i,r,s,n),this}let m=Math.sqrt((y-p)*(y-p)+(u-v)*(u-v)+(d-h)*(d-h));return Math.abs(m)<.001&&(m=1),this.x=(y-p)/m,this.y=(u-v)/m,this.z=(d-h)/m,this.w=Math.acos((c+f+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this.w=Math.max(t.w,Math.min(n.w,this.w)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this.w=Math.max(t,Math.min(n,this.w)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this.w+=(t.w-this.w)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this.w=t.w+(n.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this.z=t[n+2],this.w=t[n+3],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t[n+3]=this.w,t}fromBufferAttribute(t,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this.w=t.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function $t(e,t,n){this.width=e,this.height=t,this.scissor=new ke(0,0,e,t),this.scissorTest=!1,this.viewport=new ke(0,0,e,t),n=n||{},this.texture=new Ve(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:pt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}$t.prototype=Object.assign(Object.create(en.prototype),{constructor:$t,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function lu(e,t,n){$t.call(this,e,t,n),this.samples=4}lu.prototype=Object.assign(Object.create($t.prototype),{constructor:lu,isWebGLMultisampleRenderTarget:!0,copy:function(e){return $t.prototype.copy.call(this,e),this.samples=e.samples,this}});class xt{constructor(t=0,n=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=n,this._z=i,this._w=r}static slerp(t,n,i,r){return i.copy(t).slerp(n,r)}static slerpFlat(t,n,i,r,s,o,a){let l=i[r+0],c=i[r+1],h=i[r+2],u=i[r+3];const d=s[o+0],f=s[o+1],p=s[o+2],v=s[o+3];if(u!==v||l!==d||c!==f||h!==p){let y=1-a;const g=l*d+c*f+h*p+u*v,m=g>=0?1:-1,E=1-g*g;if(E>Number.EPSILON){const A=Math.sqrt(E),b=Math.atan2(A,g*m);y=Math.sin(y*b)/A,a=Math.sin(a*b)/A}const S=a*m;if(l=l*y+d*S,c=c*y+f*S,h=h*y+p*S,u=u*y+v*S,y===1-a){const A=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=A,c*=A,h*=A,u*=A}}t[n]=l,t[n+1]=c,t[n+2]=h,t[n+3]=u}static multiplyQuaternionsFlat(t,n,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],h=i[r+3],u=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return t[n]=a*p+h*u+l*f-c*d,t[n+1]=l*p+h*d+c*u-a*f,t[n+2]=c*p+h*f+a*d-l*u,t[n+3]=h*p-a*u-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,n,i,r){return this._x=t,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,n){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,r=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(r/2),u=a(s/2),d=l(i/2),f=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,n){const i=n/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const n=t.elements,i=n[0],r=n[4],s=n[8],o=n[1],a=n[5],l=n[9],c=n[2],h=n[6],u=n[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(o-r)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(r+o)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-c)/f,this._x=(r+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-r)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,n){let r=t.dot(n)+1;return r<1e-6?(r=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=r):(this._x=0,this._y=-t.z,this._z=t.y,this._w=r)):(this._x=t.y*n.z-t.z*n.y,this._y=t.z*n.x-t.x*n.z,this._z=t.x*n.y-t.y*n.x,this._w=r),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(we.clamp(this.dot(t),-1,1)))}rotateTowards(t,n){const i=this.angleTo(t);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,n)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,n){const i=t._x,r=t._y,s=t._z,o=t._w,a=n._x,l=n._y,c=n._z,h=n._w;return this._x=i*h+o*a+r*c-s*l,this._y=r*h+o*l+s*a-i*c,this._z=s*h+o*c+i*l-r*a,this._w=o*h-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(t,n){if(n===0)return this;if(n===1)return this.copy(t);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*t._w+i*t._x+r*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-n;return this._w=f*o+n*this._w,this._x=f*i+n*this._x,this._y=f*r+n*this._y,this._z=f*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-n)*h)/c,d=Math.sin(n*h)/c;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=r*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,n=0){return this._x=t[n],this._y=t[n+1],this._z=t[n+2],this._w=t[n+3],this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._w,t}fromBufferAttribute(t,n){return this._x=t.getX(n),this._y=t.getY(n),this._z=t.getZ(n),this._w=t.getW(n),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class P{constructor(t=0,n=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=n,this.z=i}set(t,n,i){return i===void 0&&(i=this.z),this.x=t,this.y=n,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this}sub(t,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this}multiply(t,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,n)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,n){return this.x=t.x*n.x,this.y=t.y*n.y,this.z=t.z*n.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cu.setFromEuler(t))}applyAxisAngle(t,n){return this.applyQuaternion(cu.setFromAxisAngle(t,n))}applyMatrix3(t){const n=this.x,i=this.y,r=this.z,s=t.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,s=t.elements,o=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(t){const n=this.x,i=this.y,r=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=l*n+o*r-a*i,h=l*i+a*n-s*r,u=l*r+s*i-o*n,d=-s*n-o*i-a*r;return this.x=c*l+d*-s+h*-a-u*-o,this.y=h*l+d*-o+u*-s-c*-a,this.z=u*l+d*-a+c*-o-h*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const n=this.x,i=this.y,r=this.z,s=t.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this}cross(t,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,n)):this.crossVectors(this,t)}crossVectors(t,n){const i=t.x,r=t.y,s=t.z,o=n.x,a=n.y,l=n.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(t){const n=t.lengthSq();if(n===0)return this.set(0,0,0);const i=t.dot(this)/n;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return aa.copy(this).projectOnVector(t),this.sub(aa)}reflect(t){return this.sub(aa.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const n=Math.sqrt(this.lengthSq()*t.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(t)/n;return Math.acos(we.clamp(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return n*n+i*i+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,n,i){const r=Math.sin(n)*t;return this.x=r*Math.sin(i),this.y=Math.cos(n)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,n,i){return this.x=t*Math.sin(n),this.y=i,this.z=t*Math.cos(n),this}setFromMatrixPosition(t){const n=t.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(t){const n=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(t,n){return this.fromArray(t.elements,n*4)}setFromMatrix3Column(t,n){return this.fromArray(t.elements,n*3)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this.z=t[n+2],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t}fromBufferAttribute(t,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const aa=new P,cu=new xt;class Qn{constructor(t,n){Object.defineProperty(this,"isBox3",{value:!0}),this.min=t!==void 0?t:new P(1/0,1/0,1/0),this.max=n!==void 0?n:new P(-1/0,-1/0,-1/0)}set(t,n){return this.min.copy(t),this.max.copy(n),this}setFromArray(t){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const h=t[l],u=t[l+1],d=t[l+2];h<n&&(n=h),u<i&&(i=u),d<r&&(r=d),h>s&&(s=h),u>o&&(o=u),d>a&&(a=d)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(t){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const h=t.getX(l),u=t.getY(l),d=t.getZ(l);h<n&&(n=h),u<i&&(i=u),d<r&&(r=d),h>s&&(s=h),u>o&&(o=u),d>a&&(a=d)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromPoints(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n++)this.expandByPoint(t[n]);return this}setFromCenterAndSize(t,n){const i=Tr.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return t===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new P),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return t===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new P),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const n=t.geometry;n!==void 0&&(n.boundingBox===null&&n.computeBoundingBox(),ca.copy(n.boundingBox),ca.applyMatrix4(t.matrixWorld),this.union(ca));const i=t.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,n){return n===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new P),n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Tr),Tr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let n,i;return t.normal.x>0?(n=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(n=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(n+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(n+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(n+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(n+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),n<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ar),Cs.subVectors(this.max,Ar),Ai.subVectors(t.a,Ar),Li.subVectors(t.b,Ar),Ci.subVectors(t.c,Ar),In.subVectors(Li,Ai),Dn.subVectors(Ci,Li),ri.subVectors(Ai,Ci);let n=[0,-In.z,In.y,0,-Dn.z,Dn.y,0,-ri.z,ri.y,In.z,0,-In.x,Dn.z,0,-Dn.x,ri.z,0,-ri.x,-In.y,In.x,0,-Dn.y,Dn.x,0,-ri.y,ri.x,0];return!la(n,Ai,Li,Ci,Cs)||(n=[1,0,0,0,1,0,0,0,1],!la(n,Ai,Li,Ci,Cs))?!1:(Ps.crossVectors(In,Dn),n=[Ps.x,Ps.y,Ps.z],la(n,Ai,Li,Ci,Cs))}clampPoint(t,n){return n===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new P),n.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Tr.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return t===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=this.getSize(Tr).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(vn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),vn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),vn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),vn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),vn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),vn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),vn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),vn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(vn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function la(e,t,n,i,r){for(let s=0,o=e.length-3;s<=o;s+=3){si.fromArray(e,s);const a=r.x*Math.abs(si.x)+r.y*Math.abs(si.y)+r.z*Math.abs(si.z),l=t.dot(si),c=n.dot(si),h=i.dot(si);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const vn=[new P,new P,new P,new P,new P,new P,new P,new P],Tr=new P,ca=new Qn,Ai=new P,Li=new P,Ci=new P,In=new P,Dn=new P,ri=new P,Ar=new P,Cs=new P,Ps=new P,si=new P,pv=new Qn;class ei{constructor(t,n){this.center=t!==void 0?t:new P,this.radius=n!==void 0?n:-1}set(t,n){return this.center.copy(t),this.radius=n,this}setFromPoints(t,n){const i=this.center;n!==void 0?i.copy(n):pv.setFromPoints(t).getCenter(i);let r=0;for(let s=0,o=t.length;s<o;s++)r=Math.max(r,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const n=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=n*n}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,n){const i=this.center.distanceToSquared(t);return n===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new P),n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(t){return t===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new Qn),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const yn=new P,ua=new P,Rs=new P,Nn=new P,ha=new P,Is=new P,fa=new P;class xs{constructor(t,n){this.origin=t!==void 0?t:new P,this.direction=n!==void 0?n:new P(0,0,-1)}set(t,n){return this.origin.copy(t),this.direction.copy(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,n){return n===void 0&&(console.warn("THREE.Ray: .at() target is now required"),n=new P),n.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,yn)),this}closestPointToPoint(t,n){n===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new P),n.subVectors(t,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const n=yn.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(yn.copy(this.direction).multiplyScalar(n).add(this.origin),yn.distanceToSquared(t))}distanceSqToSegment(t,n,i,r){ua.copy(t).add(n).multiplyScalar(.5),Rs.copy(n).sub(t).normalize(),Nn.copy(this.origin).sub(ua);const s=t.distanceTo(n)*.5,o=-this.direction.dot(Rs),a=Nn.dot(this.direction),l=-Nn.dot(Rs),c=Nn.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*l-a,d=o*a-l,p=s*h,u>=0)if(d>=-p)if(d<=p){const v=1/h;u*=v,d*=v,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-o*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(o*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=o>0?-s:s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Rs).multiplyScalar(d).add(ua),f}intersectSphere(t,n){yn.subVectors(t.center,this.origin);const i=yn.dot(this.direction),r=yn.dot(yn)-i*i,s=t.radius*t.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,n):this.at(a,n)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const n=t.normal.dot(this.direction);if(n===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/n;return i>=0?i:null}intersectPlane(t,n){const i=this.distanceToPlane(t);return i===null?null:this.at(i,n)}intersectsPlane(t){const n=t.distanceToPoint(this.origin);return n===0||t.normal.dot(this.direction)*n<0}intersectBox(t,n){let i,r,s,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(t.min.x-d.x)*c,r=(t.max.x-d.x)*c):(i=(t.max.x-d.x)*c,r=(t.min.x-d.x)*c),h>=0?(s=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(s=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),u>=0?(a=(t.min.z-d.z)*u,l=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,l=(t.min.z-d.z)*u),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(t){return this.intersectBox(t,yn)!==null}intersectTriangle(t,n,i,r,s){ha.subVectors(n,t),Is.subVectors(i,t),fa.crossVectors(ha,Is);let o=this.direction.dot(fa),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Nn.subVectors(this.origin,t);const l=a*this.direction.dot(Is.crossVectors(Nn,Is));if(l<0)return null;const c=a*this.direction.dot(ha.cross(Nn));if(c<0||l+c>o)return null;const h=-a*Nn.dot(fa);return h<0?null:this.at(h/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class Ee{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,n,i,r,s,o,a,l,c,h,u,d,f,p,v,y){const g=this.elements;return g[0]=t,g[4]=n,g[8]=i,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=d,g[3]=f,g[7]=p,g[11]=v,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ee().fromArray(this.elements)}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(t){const n=this.elements,i=t.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}extractBasis(t,n,i){return t.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,n,i){return this.set(t.x,n.x,i.x,0,t.y,n.y,i.y,0,t.z,n.z,i.z,0,0,0,0,1),this}extractRotation(t){const n=this.elements,i=t.elements,r=1/Pi.setFromMatrixColumn(t,0).length(),s=1/Pi.setFromMatrixColumn(t,1).length(),o=1/Pi.setFromMatrixColumn(t,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=t.x,r=t.y,s=t.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),h=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const d=o*h,f=o*u,p=a*h,v=a*u;n[0]=l*h,n[4]=-l*u,n[8]=c,n[1]=f+p*c,n[5]=d-v*c,n[9]=-a*l,n[2]=v-d*c,n[6]=p+f*c,n[10]=o*l}else if(t.order==="YXZ"){const d=l*h,f=l*u,p=c*h,v=c*u;n[0]=d+v*a,n[4]=p*a-f,n[8]=o*c,n[1]=o*u,n[5]=o*h,n[9]=-a,n[2]=f*a-p,n[6]=v+d*a,n[10]=o*l}else if(t.order==="ZXY"){const d=l*h,f=l*u,p=c*h,v=c*u;n[0]=d-v*a,n[4]=-o*u,n[8]=p+f*a,n[1]=f+p*a,n[5]=o*h,n[9]=v-d*a,n[2]=-o*c,n[6]=a,n[10]=o*l}else if(t.order==="ZYX"){const d=o*h,f=o*u,p=a*h,v=a*u;n[0]=l*h,n[4]=p*c-f,n[8]=d*c+v,n[1]=l*u,n[5]=v*c+d,n[9]=f*c-p,n[2]=-c,n[6]=a*l,n[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;n[0]=l*h,n[4]=v-d*u,n[8]=p*u+f,n[1]=u,n[5]=o*h,n[9]=-a*h,n[2]=-c*h,n[6]=f*u+p,n[10]=d-v*u}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;n[0]=l*h,n[4]=-u,n[8]=c*h,n[1]=d*u+v,n[5]=o*h,n[9]=f*u-p,n[2]=p*u-f,n[6]=a*h,n[10]=v*u+d}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(t){return this.compose(mv,t,gv)}lookAt(t,n,i){const r=this.elements;return At.subVectors(t,n),At.lengthSq()===0&&(At.z=1),At.normalize(),On.crossVectors(i,At),On.lengthSq()===0&&(Math.abs(i.z)===1?At.x+=1e-4:At.z+=1e-4,At.normalize(),On.crossVectors(i,At)),On.normalize(),Ds.crossVectors(At,On),r[0]=On.x,r[4]=Ds.x,r[8]=At.x,r[1]=On.y,r[5]=Ds.y,r[9]=At.y,r[2]=On.z,r[6]=Ds.z,r[10]=At.z,this}multiply(t,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,n)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],v=i[6],y=i[10],g=i[14],m=i[3],E=i[7],S=i[11],A=i[15],b=r[0],R=r[4],G=r[8],W=r[12],se=r[1],z=r[5],X=r[9],V=r[13],B=r[2],D=r[6],H=r[10],K=r[14],$=r[3],oe=r[7],ue=r[11],ae=r[15];return s[0]=o*b+a*se+l*B+c*$,s[4]=o*R+a*z+l*D+c*oe,s[8]=o*G+a*X+l*H+c*ue,s[12]=o*W+a*V+l*K+c*ae,s[1]=h*b+u*se+d*B+f*$,s[5]=h*R+u*z+d*D+f*oe,s[9]=h*G+u*X+d*H+f*ue,s[13]=h*W+u*V+d*K+f*ae,s[2]=p*b+v*se+y*B+g*$,s[6]=p*R+v*z+y*D+g*oe,s[10]=p*G+v*X+y*H+g*ue,s[14]=p*W+v*V+y*K+g*ae,s[3]=m*b+E*se+S*B+A*$,s[7]=m*R+E*z+S*D+A*oe,s[11]=m*G+E*X+S*H+A*ue,s[15]=m*W+E*V+S*K+A*ae,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[4]*=t,n[8]*=t,n[12]*=t,n[1]*=t,n[5]*=t,n[9]*=t,n[13]*=t,n[2]*=t,n[6]*=t,n[10]*=t,n[14]*=t,n[3]*=t,n[7]*=t,n[11]*=t,n[15]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[4],r=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],h=t[2],u=t[6],d=t[10],f=t[14],p=t[3],v=t[7],y=t[11],g=t[15];return p*(+s*l*u-r*c*u-s*a*d+i*c*d+r*a*f-i*l*f)+v*(+n*l*f-n*c*d+s*o*d-r*o*f+r*c*h-s*l*h)+y*(+n*c*u-n*a*f-s*o*u+i*o*f+s*a*h-i*c*h)+g*(-r*a*h-n*l*u+n*a*d+r*o*u-i*o*d+i*l*h)}transpose(){const t=this.elements;let n;return n=t[1],t[1]=t[4],t[4]=n,n=t[2],t[2]=t[8],t[8]=n,n=t[6],t[6]=t[9],t[9]=n,n=t[3],t[3]=t[12],t[12]=n,n=t[7],t[7]=t[13],t[13]=n,n=t[11],t[11]=t[14],t[14]=n,this}setPosition(t,n,i){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=n,r[14]=i),this}invert(){const t=this.elements,n=t[0],i=t[1],r=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],d=t[10],f=t[11],p=t[12],v=t[13],y=t[14],g=t[15],m=u*y*c-v*d*c+v*l*f-a*y*f-u*l*g+a*d*g,E=p*d*c-h*y*c-p*l*f+o*y*f+h*l*g-o*d*g,S=h*v*c-p*u*c+p*a*f-o*v*f-h*a*g+o*u*g,A=p*u*l-h*v*l-p*a*d+o*v*d+h*a*y-o*u*y,b=n*m+i*E+r*S+s*A;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/b;return t[0]=m*R,t[1]=(v*d*s-u*y*s-v*r*f+i*y*f+u*r*g-i*d*g)*R,t[2]=(a*y*s-v*l*s+v*r*c-i*y*c-a*r*g+i*l*g)*R,t[3]=(u*l*s-a*d*s-u*r*c+i*d*c+a*r*f-i*l*f)*R,t[4]=E*R,t[5]=(h*y*s-p*d*s+p*r*f-n*y*f-h*r*g+n*d*g)*R,t[6]=(p*l*s-o*y*s-p*r*c+n*y*c+o*r*g-n*l*g)*R,t[7]=(o*d*s-h*l*s+h*r*c-n*d*c-o*r*f+n*l*f)*R,t[8]=S*R,t[9]=(p*u*s-h*v*s-p*i*f+n*v*f+h*i*g-n*u*g)*R,t[10]=(o*v*s-p*a*s+p*i*c-n*v*c-o*i*g+n*a*g)*R,t[11]=(h*a*s-o*u*s-h*i*c+n*u*c+o*i*f-n*a*f)*R,t[12]=A*R,t[13]=(h*v*r-p*u*r+p*i*d-n*v*d-h*i*y+n*u*y)*R,t[14]=(p*a*r-o*v*r-p*i*l+n*v*l+o*i*y-n*a*y)*R,t[15]=(o*u*r-h*a*r+h*i*l-n*u*l-o*i*d+n*a*d)*R,this}scale(t){const n=this.elements,i=t.x,r=t.y,s=t.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,n=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(t,n,i){return this.set(1,0,0,t,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(t){const n=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,o=t.x,a=t.y,l=t.z,c=s*o,h=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,h*a+i,h*l-r*o,0,c*l-r*a,h*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(t,n,i){return this.set(t,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,n,i){return this.set(1,n,i,0,t,1,i,0,t,n,1,0,0,0,0,1),this}compose(t,n,i){const r=this.elements,s=n._x,o=n._y,a=n._z,l=n._w,c=s+s,h=o+o,u=a+a,d=s*c,f=s*h,p=s*u,v=o*h,y=o*u,g=a*u,m=l*c,E=l*h,S=l*u,A=i.x,b=i.y,R=i.z;return r[0]=(1-(v+g))*A,r[1]=(f+S)*A,r[2]=(p-E)*A,r[3]=0,r[4]=(f-S)*b,r[5]=(1-(d+g))*b,r[6]=(y+m)*b,r[7]=0,r[8]=(p+E)*R,r[9]=(y-m)*R,r[10]=(1-(d+v))*R,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,n,i){const r=this.elements;let s=Pi.set(r[0],r[1],r[2]).length();const o=Pi.set(r[4],r[5],r[6]).length(),a=Pi.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),t.x=r[12],t.y=r[13],t.z=r[14],Gt.copy(this);const c=1/s,h=1/o,u=1/a;return Gt.elements[0]*=c,Gt.elements[1]*=c,Gt.elements[2]*=c,Gt.elements[4]*=h,Gt.elements[5]*=h,Gt.elements[6]*=h,Gt.elements[8]*=u,Gt.elements[9]*=u,Gt.elements[10]*=u,n.setFromRotationMatrix(Gt),i.x=s,i.y=o,i.z=a,this}makePerspective(t,n,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(n-t),c=2*s/(i-r),h=(n+t)/(n-t),u=(i+r)/(i-r),d=-(o+s)/(o-s),f=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,n,i,r,s,o){const a=this.elements,l=1/(n-t),c=1/(i-r),h=1/(o-s),u=(n+t)*l,d=(i+r)*c,f=(o+s)*h;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n=0){for(let i=0;i<16;i++)this.elements[i]=t[i+n];return this}toArray(t=[],n=0){const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t[n+9]=i[9],t[n+10]=i[10],t[n+11]=i[11],t[n+12]=i[12],t[n+13]=i[13],t[n+14]=i[14],t[n+15]=i[15],t}}const Pi=new P,Gt=new Ee,mv=new P(0,0,0),gv=new P(1,1,1),On=new P,Ds=new P,At=new P;class _s{constructor(t=0,n=0,i=0,r=_s.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,n,i,r){return this._x=t,this._y=n,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,n,i){const r=we.clamp,s=t.elements,o=s[0],a=s[4],l=s[8],c=s[1],h=s[5],u=s[9],d=s[2],f=s[6],p=s[10];switch(n=n||this._order,n){case"XYZ":this._y=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(f,h),this._z=0);break;case"YXZ":this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-d,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-r(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-d,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,h),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(t,n,i){return uu.makeRotationFromQuaternion(t),this.setFromRotationMatrix(uu,n,i)}setFromVector3(t,n){return this.set(t.x,t.y,t.z,n||this._order)}reorder(t){return hu.setFromEuler(this),this.setFromQuaternion(hu,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new P(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}_s.DefaultOrder="XYZ";_s.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const uu=new Ee,hu=new xt;class _f{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}}let vv=0;const fu=new P,Ri=new xt,xn=new Ee,Ns=new P,Lr=new P,yv=new P,xv=new xt,du=new P(1,0,0),pu=new P(0,1,0),mu=new P(0,0,1),_v={type:"added"},gu={type:"removed"};function ve(){Object.defineProperty(this,"id",{value:vv++}),this.uuid=we.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ve.DefaultUp.clone();const e=new P,t=new _s,n=new xt,i=new P(1,1,1);function r(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ee},normalMatrix:{value:new Et}}),this.matrix=new Ee,this.matrixWorld=new Ee,this.matrixAutoUpdate=ve.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new _f,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}ve.DefaultUp=new P(0,1,0);ve.DefaultMatrixAutoUpdate=!0;ve.prototype=Object.assign(Object.create(en.prototype),{constructor:ve,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Ri.setFromAxisAngle(e,t),this.quaternion.multiply(Ri),this},rotateOnWorldAxis:function(e,t){return Ri.setFromAxisAngle(e,t),this.quaternion.premultiply(Ri),this},rotateX:function(e){return this.rotateOnAxis(du,e)},rotateY:function(e){return this.rotateOnAxis(pu,e)},rotateZ:function(e){return this.rotateOnAxis(mu,e)},translateOnAxis:function(e,t){return fu.copy(e).applyQuaternion(this.quaternion),this.position.add(fu.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(du,e)},translateY:function(e){return this.translateOnAxis(pu,e)},translateZ:function(e){return this.translateOnAxis(mu,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(xn.copy(this.matrixWorld).invert())},lookAt:function(e,t,n){e.isVector3?Ns.copy(e):Ns.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Lr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?xn.lookAt(Lr,Ns,this.up):xn.lookAt(Ns,Lr,this.up),this.quaternion.setFromRotationMatrix(xn),i&&(xn.extractRotation(i.matrixWorld),Ri.setFromRotationMatrix(xn),this.quaternion.premultiply(Ri.invert()))},add:function(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_v)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(gu)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(gu)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),xn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),xn.multiply(e.parent.matrixWorld)),e.applyMatrix4(xn),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(e,t);if(s!==void 0)return s}},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new P),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new xt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Lr,e,yv),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new P),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Lr,xv,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new P),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(e)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let l=0,c=a.length;l<c;l++){const h=a[l];r(e.shapes,h)}else r(e.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,l=this.material.length;a<l;a++)o.push(r(e.materials,this.material[a]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(r(e.animations,a))}}if(t){const o=s(e.geometries),a=s(e.materials),l=s(e.textures),c=s(e.images),h=s(e.shapes),u=s(e.skeletons),d=s(e.animations);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),l.length>0&&(n.textures=l),c.length>0&&(n.images=c),h.length>0&&(n.shapes=h),u.length>0&&(n.skeletons=u),d.length>0&&(n.animations=d)}return n.object=i,n;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}});const da=new P,bv=new P,wv=new Et;class Sn{constructor(t,n){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=t!==void 0?t:new P(1,0,0),this.constant=n!==void 0?n:0}set(t,n){return this.normal.copy(t),this.constant=n,this}setComponents(t,n,i,r){return this.normal.set(t,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,n){return this.normal.copy(t),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(t,n,i){const r=da.subVectors(i,n).cross(bv.subVectors(t,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}clone(){return new this.constructor().copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,n){return n===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new P),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,n){n===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new P);const i=t.delta(da),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(t.start)===0?n.copy(t.start):void 0;const s=-(t.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return n.copy(i).multiplyScalar(s).add(t.start)}intersectsLine(t){const n=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return n<0&&i>0||i<0&&n>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new P),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,n){const i=n||wv.getNormalMatrix(t),r=this.coplanarPoint(da).applyMatrix4(t),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const kt=new P,_n=new P,pa=new P,bn=new P,Ii=new P,Di=new P,vu=new P,ma=new P,ga=new P,va=new P;class dt{constructor(t,n,i){this.a=t!==void 0?t:new P,this.b=n!==void 0?n:new P,this.c=i!==void 0?i:new P}static getNormal(t,n,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new P),r.subVectors(i,n),kt.subVectors(t,n),r.cross(kt);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(t,n,i,r,s){kt.subVectors(r,n),_n.subVectors(i,n),pa.subVectors(t,n);const o=kt.dot(kt),a=kt.dot(_n),l=kt.dot(pa),c=_n.dot(_n),h=_n.dot(pa),u=o*c-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new P),u===0)return s.set(-2,-1,-1);const d=1/u,f=(c*l-a*h)*d,p=(o*h-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(t,n,i,r){return this.getBarycoord(t,n,i,r,bn),bn.x>=0&&bn.y>=0&&bn.x+bn.y<=1}static getUV(t,n,i,r,s,o,a,l){return this.getBarycoord(t,n,i,r,bn),l.set(0,0),l.addScaledVector(s,bn.x),l.addScaledVector(o,bn.y),l.addScaledVector(a,bn.z),l}static isFrontFacing(t,n,i,r){return kt.subVectors(i,n),_n.subVectors(t,n),kt.cross(_n).dot(r)<0}set(t,n,i){return this.a.copy(t),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(t,n,i,r){return this.a.copy(t[n]),this.b.copy(t[i]),this.c.copy(t[r]),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return kt.subVectors(this.c,this.b),_n.subVectors(this.a,this.b),kt.cross(_n).length()*.5}getMidpoint(t){return t===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new P),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return dt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Sn),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,n){return dt.getBarycoord(t,this.a,this.b,this.c,n)}getUV(t,n,i,r,s){return dt.getUV(t,this.a,this.b,this.c,n,i,r,s)}containsPoint(t){return dt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return dt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,n){n===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new P);const i=this.a,r=this.b,s=this.c;let o,a;Ii.subVectors(r,i),Di.subVectors(s,i),ma.subVectors(t,i);const l=Ii.dot(ma),c=Di.dot(ma);if(l<=0&&c<=0)return n.copy(i);ga.subVectors(t,r);const h=Ii.dot(ga),u=Di.dot(ga);if(h>=0&&u<=h)return n.copy(r);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),n.copy(i).addScaledVector(Ii,o);va.subVectors(t,s);const f=Ii.dot(va),p=Di.dot(va);if(p>=0&&f<=p)return n.copy(s);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),n.copy(i).addScaledVector(Di,a);const y=h*p-f*u;if(y<=0&&u-h>=0&&f-p>=0)return vu.subVectors(s,r),a=(u-h)/(u-h+(f-p)),n.copy(r).addScaledVector(vu,a);const g=1/(y+v+d);return o=v*g,a=d*g,n.copy(i).addScaledVector(Ii,o).addScaledVector(Di,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const bf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Vt={h:0,s:0,l:0},Os={h:0,s:0,l:0};function ya(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function xa(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function _a(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}class fe{constructor(t,n,i){return Object.defineProperty(this,"isColor",{value:!0}),n===void 0&&i===void 0?this.set(t):this.setRGB(t,n,i)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this}setRGB(t,n,i){return this.r=t,this.g=n,this.b=i,this}setHSL(t,n,i){if(t=we.euclideanModulo(t,1),n=we.clamp(n,0,1),i=we.clamp(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,s=2*i-r;this.r=ya(s,r,t+1/3),this.g=ya(s,r,t),this.b=ya(s,r,t-1/3)}return this}setStyle(t){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,n(r[4]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,n(r[4]),this;break;case"hsl":case"hsla":if(r=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return n(r[4]),this.setHSL(a,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const n=bf[t];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,n=2){return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}copyLinearToGamma(t,n=2){const i=n>0?1/n:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=xa(t.r),this.g=xa(t.g),this.b=xa(t.b),this}copyLinearToSRGB(t){return this.r=_a(t.r),this.g=_a(t.g),this.b=_a(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){t===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const n=this.r,i=this.g,r=this.b,s=Math.max(n,i,r),o=Math.min(n,i,r);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const h=s-o;switch(l=c<=.5?h/(s+o):h/(2-s-o),s){case n:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-n)/h+2;break;case r:a=(n-i)/h+4;break}a/=6}return t.h=a,t.s=l,t.l=c,t}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(t,n,i){return this.getHSL(Vt),Vt.h+=t,Vt.s+=n,Vt.l+=i,this.setHSL(Vt.h,Vt.s,Vt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpHSL(t,n){this.getHSL(Vt),t.getHSL(Os);const i=we.lerp(Vt.h,Os.h,n),r=we.lerp(Vt.s,Os.s,n),s=we.lerp(Vt.l,Os.l,n);return this.setHSL(i,r,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}fe.NAMES=bf;fe.prototype.r=1;fe.prototype.g=1;fe.prototype.b=1;class Ja{constructor(t,n,i,r,s,o=0){this.a=t,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new P,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new fe,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o}clone(){return new this.constructor().copy(this)}copy(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let n=0,i=t.vertexNormals.length;n<i;n++)this.vertexNormals[n]=t.vertexNormals[n].clone();for(let n=0,i=t.vertexColors.length;n<i;n++)this.vertexColors[n]=t.vertexColors[n].clone();return this}}let Mv=0;function ye(){Object.defineProperty(this,"id",{value:Mv++}),this.uuid=we.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Vr,this.side=ko,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=mf,this.blendDst=gf,this.blendEquation=ki,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Xa,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=fv,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=sa,this.stencilZFail=sa,this.stencilZPass=sa,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}ye.prototype=Object.assign(Object.create(en.prototype),{constructor:ye,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===pf;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}},toJSON:function(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Vr&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==ko&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(t){const r=i(e.textures),s=i(e.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(ye.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function pi(e){ye.call(this),this.type="MeshBasicMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Wo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}pi.prototype=Object.create(ye.prototype);pi.prototype.constructor=pi;pi.prototype.isMeshBasicMaterial=!0;pi.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Xe=new P,Fs=new J;function xe(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=qo,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(xe.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(xe.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new fe),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new J),t[n++]=s.x,t[n++]=s.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new P),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new ke),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this},applyMatrix3:function(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Fs.fromBufferAttribute(this,t),Fs.applyMatrix3(e),this.setXY(t,Fs.x,Fs.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Xe.fromBufferAttribute(this,t),Xe.applyMatrix3(e),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)Xe.x=this.getX(t),Xe.y=this.getY(t),Xe.z=this.getZ(t),Xe.applyMatrix4(e),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)Xe.x=this.getX(t),Xe.y=this.getY(t),Xe.z=this.getZ(t),Xe.applyNormalMatrix(e),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)Xe.x=this.getX(t),Xe.y=this.getY(t),Xe.z=this.getZ(t),Xe.transformDirection(e),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Ka(e,t,n){xe.call(this,new Int8Array(e),t,n)}Ka.prototype=Object.create(xe.prototype);Ka.prototype.constructor=Ka;function $a(e,t,n){xe.call(this,new Uint8Array(e),t,n)}$a.prototype=Object.create(xe.prototype);$a.prototype.constructor=$a;function Qa(e,t,n){xe.call(this,new Uint8ClampedArray(e),t,n)}Qa.prototype=Object.create(xe.prototype);Qa.prototype.constructor=Qa;function el(e,t,n){xe.call(this,new Int16Array(e),t,n)}el.prototype=Object.create(xe.prototype);el.prototype.constructor=el;function rs(e,t,n){xe.call(this,new Uint16Array(e),t,n)}rs.prototype=Object.create(xe.prototype);rs.prototype.constructor=rs;function tl(e,t,n){xe.call(this,new Int32Array(e),t,n)}tl.prototype=Object.create(xe.prototype);tl.prototype.constructor=tl;function ss(e,t,n){xe.call(this,new Uint32Array(e),t,n)}ss.prototype=Object.create(xe.prototype);ss.prototype.constructor=ss;function Mo(e,t,n){xe.call(this,new Uint16Array(e),t,n)}Mo.prototype=Object.create(xe.prototype);Mo.prototype.constructor=Mo;Mo.prototype.isFloat16BufferAttribute=!0;function Fe(e,t,n){xe.call(this,new Float32Array(e),t,n)}Fe.prototype=Object.create(xe.prototype);Fe.prototype.constructor=Fe;function nl(e,t,n){xe.call(this,new Float64Array(e),t,n)}nl.prototype=Object.create(xe.prototype);nl.prototype.constructor=nl;class Sv{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const n=[];let i,r,s;const o=t.faces;for(r=0;r<o.length;r++){const a=o[r];a.materialIndex!==s&&(s=a.materialIndex,i!==void 0&&(i.count=r*3-i.start,n.push(i)),i={start:r*3,materialIndex:s})}i!==void 0&&(i.count=r*3-i.start,n.push(i)),this.groups=n}fromGeometry(t){const n=t.faces,i=t.vertices,r=t.faceVertexUvs,s=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,a=t.morphTargets,l=a.length;let c;if(l>0){c=[];for(let g=0;g<l;g++)c[g]={name:a[g].name,data:[]};this.morphTargets.position=c}const h=t.morphNormals,u=h.length;let d;if(u>0){d=[];for(let g=0;g<u;g++)d[g]={name:h[g].name,data:[]};this.morphTargets.normal=d}const f=t.skinIndices,p=t.skinWeights,v=f.length===i.length,y=p.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let g=0;g<n.length;g++){const m=n[g];this.vertices.push(i[m.a],i[m.b],i[m.c]);const E=m.vertexNormals;if(E.length===3)this.normals.push(E[0],E[1],E[2]);else{const A=m.normal;this.normals.push(A,A,A)}const S=m.vertexColors;if(S.length===3)this.colors.push(S[0],S[1],S[2]);else{const A=m.color;this.colors.push(A,A,A)}if(s===!0){const A=r[0][g];A!==void 0?this.uvs.push(A[0],A[1],A[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",g),this.uvs.push(new J,new J,new J))}if(o===!0){const A=r[1][g];A!==void 0?this.uvs2.push(A[0],A[1],A[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",g),this.uvs2.push(new J,new J,new J))}for(let A=0;A<l;A++){const b=a[A].vertices;c[A].data.push(b[m.a],b[m.b],b[m.c])}for(let A=0;A<u;A++){const b=h[A].vertexNormals[g];d[A].data.push(b.a,b.b,b.c)}v&&this.skinIndices.push(f[m.a],f[m.b],f[m.c]),y&&this.skinWeights.push(p[m.a],p[m.b],p[m.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this}}function wf(e){if(e.length===0)return-1/0;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}const Ev={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Bs(e,t){return new Ev[e](t)}let Tv=1;const nn=new Ee,ba=new ve,Ni=new P,Lt=new Qn,Cr=new Qn,it=new P;function Ue(){Object.defineProperty(this,"id",{value:Tv+=2}),this.uuid=we.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Ue.prototype=Object.assign(Object.create(en.prototype),{constructor:Ue,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(wf(e)>65535?ss:rs)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return this.attributes[e]!==void 0},addGroup:function(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Et().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return nn.makeRotationX(e),this.applyMatrix4(nn),this},rotateY:function(e){return nn.makeRotationY(e),this.applyMatrix4(nn),this},rotateZ:function(e){return nn.makeRotationZ(e),this.applyMatrix4(nn),this},translate:function(e,t,n){return nn.makeTranslation(e,t,n),this.applyMatrix4(nn),this},scale:function(e,t,n){return nn.makeScale(e,t,n),this.applyMatrix4(nn),this},lookAt:function(e){return ba.lookAt(e),ba.updateMatrix(),this.applyMatrix4(ba.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ni).negate(),this.translate(Ni.x,Ni.y,Ni.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const n=new Fe(t.vertices.length*3,3),i=new Fe(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const r=new Fe(t.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Fe(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}if(t.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1}if(t.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1}if(t.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new Sv().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new xe(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new xe(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const n=new Float32Array(e.colors.length*3);this.setAttribute("color",new xe(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const n=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new xe(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const n=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new xe(n,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const n in e.morphTargets){const i=[],r=e.morphTargets[n];for(let s=0,o=r.length;s<o;s++){const a=r[s],l=new Fe(a.data.length*3,3);l.name=a.name,i.push(l.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(e.skinIndices.length>0){const n=new Fe(e.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const n=new Fe(e.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Qn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Lt.setFromBufferAttribute(r),this.morphTargetsRelative?(it.addVectors(this.boundingBox.min,Lt.min),this.boundingBox.expandByPoint(it),it.addVectors(this.boundingBox.max,Lt.max),this.boundingBox.expandByPoint(it)):(this.boundingBox.expandByPoint(Lt.min),this.boundingBox.expandByPoint(Lt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new ei);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new P,1/0);return}if(e){const n=this.boundingSphere.center;if(Lt.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const o=t[r];Cr.setFromBufferAttribute(o),this.morphTargetsRelative?(it.addVectors(Lt.min,Cr.min),Lt.expandByPoint(it),it.addVectors(Lt.max,Cr.max),Lt.expandByPoint(it)):(Lt.expandByPoint(Cr.min),Lt.expandByPoint(Cr.max))}Lt.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)it.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(it));if(t)for(let r=0,s=t.length;r<s;r++){const o=t[r],a=this.morphTargetsRelative;for(let l=0,c=o.count;l<c;l++)it.fromBufferAttribute(o,l),a&&(Ni.fromBufferAttribute(e,l),it.add(Ni)),i=Math.max(i,n.distanceToSquared(it))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new xe(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let u=0,d=n.count;u<d;u++)n.setXYZ(u,0,0,0);const i=new P,r=new P,s=new P,o=new P,a=new P,l=new P,c=new P,h=new P;if(e)for(let u=0,d=e.count;u<d;u+=3){const f=e.getX(u+0),p=e.getX(u+1),v=e.getX(u+2);i.fromBufferAttribute(t,f),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,v),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),o.fromBufferAttribute(n,f),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,v),o.add(c),a.add(c),l.add(c),n.setXYZ(f,o.x,o.y,o.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(v,l.x,l.y,l.z)}else for(let u=0,d=t.count;u<d;u+=3)i.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),s.fromBufferAttribute(t,u+2),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),n.setXYZ(u+0,c.x,c.y,c.z),n.setXYZ(u+1,c.x,c.y,c.z),n.setXYZ(u+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const s=n[i].array,o=e.attributes[i],a=o.array,l=o.itemSize*t,c=Math.min(a.length,s.length-l);for(let h=0,u=l;h<c;h++,u++)s[u]=a[h]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)it.fromBufferAttribute(e,t),it.normalize(),e.setXYZ(t,it.x,it.y,it.z)},toNonIndexed:function(){function e(o,a){const l=o.array,c=o.itemSize,h=o.normalized,u=new l.constructor(a.length*c);let d=0,f=0;for(let p=0,v=a.length;p<v;p++){d=a[p]*c;for(let y=0;y<c;y++)u[f++]=l[d++]}return new xe(u,c,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new Ue,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],l=e(a,n);t.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const a=[],l=r[o];for(let c=0,h=l.length;c<h;c++){const u=l[c],d=e(u,n);a.push(d)}t.morphAttributes[o]=a}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const l=s[o];t.addGroup(l.start,l.count,l.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(e[l]=a[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const l=n[a],c=l.toJSON(e.data);l.name!==""&&(c.name=l.name),e.data.attributes[a]=c}const i={};let r=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],c=[];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=d.toJSON(e.data);d.name!==""&&(f.name=d.name),c.push(f)}c.length>0&&(i[a]=c,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return new Ue().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(t))}const r=e.morphAttributes;for(const l in r){const c=[],h=r[l];for(let u=0,d=h.length;u<d;u++)c.push(h[u].clone(t));this.morphAttributes[l]=c}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let l=0,c=s.length;l<c;l++){const h=s[l];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const yu=new Ee,oi=new xs,wa=new ei,Fn=new P,Bn=new P,Un=new P,Ma=new P,Sa=new P,Ea=new P,Us=new P,zs=new P,Hs=new P,qi=new J,Xi=new J,Yi=new J,qr=new P,Gs=new P;function lt(e=new Ue,t=new pi){ve.call(this),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}lt.prototype=Object.assign(Object.create(ve.prototype),{constructor:lt,isMesh:!0,copy:function(e){return ve.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),wa.copy(n.boundingSphere),wa.applyMatrix4(r),e.ray.intersectsSphere(wa)===!1)||(yu.copy(r).invert(),oi.copy(e.ray).applyMatrix4(yu),n.boundingBox!==null&&oi.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,l=n.morphAttributes.position,c=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,d=n.groups,f=n.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,v=d.length;p<v;p++){const y=d[p],g=i[y.materialIndex],m=Math.max(y.start,f.start),E=Math.min(y.start+y.count,f.start+f.count);for(let S=m,A=E;S<A;S+=3){const b=o.getX(S),R=o.getX(S+1),G=o.getX(S+2);s=ks(this,g,e,oi,a,l,c,h,u,b,R,G),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=y.materialIndex,t.push(s))}}else{const p=Math.max(0,f.start),v=Math.min(o.count,f.start+f.count);for(let y=p,g=v;y<g;y+=3){const m=o.getX(y),E=o.getX(y+1),S=o.getX(y+2);s=ks(this,i,e,oi,a,l,c,h,u,m,E,S),s&&(s.faceIndex=Math.floor(y/3),t.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,v=d.length;p<v;p++){const y=d[p],g=i[y.materialIndex],m=Math.max(y.start,f.start),E=Math.min(y.start+y.count,f.start+f.count);for(let S=m,A=E;S<A;S+=3){const b=S,R=S+1,G=S+2;s=ks(this,g,e,oi,a,l,c,h,u,b,R,G),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=y.materialIndex,t.push(s))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let y=p,g=v;y<g;y+=3){const m=y,E=y+1,S=y+2;s=ks(this,i,e,oi,a,l,c,h,u,m,E,S),s&&(s.faceIndex=Math.floor(y/3),t.push(s))}}}else if(n.isGeometry){const o=Array.isArray(i),a=n.vertices,l=n.faces;let c;const h=n.faceVertexUvs[0];h.length>0&&(c=h);for(let u=0,d=l.length;u<d;u++){const f=l[u],p=o?i[f.materialIndex]:i;if(p===void 0)continue;const v=a[f.a],y=a[f.b],g=a[f.c];if(s=Mf(this,p,e,oi,v,y,g,qr),s){if(c&&c[u]){const m=c[u];qi.copy(m[0]),Xi.copy(m[1]),Yi.copy(m[2]),s.uv=dt.getUV(qr,v,y,g,qi,Xi,Yi,new J)}s.face=f,s.faceIndex=u,t.push(s)}}}}});function Mf(e,t,n,i,r,s,o,a){let l;if(t.side===at?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,t.side!==Vo,a),l===null)return null;Gs.copy(a),Gs.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(Gs);return c<n.near||c>n.far?null:{distance:c,point:Gs.clone(),object:e}}function ks(e,t,n,i,r,s,o,a,l,c,h,u){Fn.fromBufferAttribute(r,c),Bn.fromBufferAttribute(r,h),Un.fromBufferAttribute(r,u);const d=e.morphTargetInfluences;if(t.morphTargets&&s&&d){Us.set(0,0,0),zs.set(0,0,0),Hs.set(0,0,0);for(let p=0,v=s.length;p<v;p++){const y=d[p],g=s[p];y!==0&&(Ma.fromBufferAttribute(g,c),Sa.fromBufferAttribute(g,h),Ea.fromBufferAttribute(g,u),o?(Us.addScaledVector(Ma,y),zs.addScaledVector(Sa,y),Hs.addScaledVector(Ea,y)):(Us.addScaledVector(Ma.sub(Fn),y),zs.addScaledVector(Sa.sub(Bn),y),Hs.addScaledVector(Ea.sub(Un),y)))}Fn.add(Us),Bn.add(zs),Un.add(Hs)}e.isSkinnedMesh&&(e.boneTransform(c,Fn),e.boneTransform(h,Bn),e.boneTransform(u,Un));const f=Mf(e,t,n,i,Fn,Bn,Un,qr);if(f){a&&(qi.fromBufferAttribute(a,c),Xi.fromBufferAttribute(a,h),Yi.fromBufferAttribute(a,u),f.uv=dt.getUV(qr,Fn,Bn,Un,qi,Xi,Yi,new J)),l&&(qi.fromBufferAttribute(l,c),Xi.fromBufferAttribute(l,h),Yi.fromBufferAttribute(l,u),f.uv2=dt.getUV(qr,Fn,Bn,Un,qi,Xi,Yi,new J));const p=new Ja(c,h,u);dt.getNormal(Fn,Bn,Un,p.normal),f.face=p}return f}class Sf extends Ue{constructor(t=1,n=1,i=1,r=1,s=1,o=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,n,t,o,s,0),p("z","y","x",1,-1,i,n,-t,o,s,1),p("x","z","y",1,1,t,i,n,r,o,2),p("x","z","y",1,-1,t,i,-n,r,o,3),p("x","y","z",1,-1,t,n,i,r,s,4),p("x","y","z",-1,-1,t,n,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Fe(c,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(u,2));function p(v,y,g,m,E,S,A,b,R,G,W){const se=S/R,z=A/G,X=S/2,V=A/2,B=b/2,D=R+1,H=G+1;let K=0,$=0;const oe=new P;for(let ue=0;ue<H;ue++){const ae=ue*z-V;for(let pe=0;pe<D;pe++){const _e=pe*se-X;oe[v]=_e*m,oe[y]=ae*E,oe[g]=B,c.push(oe.x,oe.y,oe.z),oe[v]=0,oe[y]=0,oe[g]=b>0?1:-1,h.push(oe.x,oe.y,oe.z),u.push(pe/R),u.push(1-ue/G),K+=1}}for(let ue=0;ue<G;ue++)for(let ae=0;ae<R;ae++){const pe=d+ae+D*ue,_e=d+ae+D*(ue+1),Ge=d+(ae+1)+D*(ue+1),ne=d+(ae+1)+D*ue;l.push(pe,_e,ne),l.push(_e,Ge,ne),$+=6}a.addGroup(f,$,W),f+=$,d+=K}}}function sr(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function ut(e){const t={};for(let n=0;n<e.length;n++){const i=sr(e[n]);for(const r in i)t[r]=i[r]}return t}const Av={clone:sr,merge:ut};var Lv=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Cv=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function bt(e){ye.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Lv,this.fragmentShader=Cv,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}bt.prototype=Object.create(ye.prototype);bt.prototype.constructor=bt;bt.prototype.isShaderMaterial=!0;bt.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=sr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this};bt.prototype.toJSON=function(e){const t=ye.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[i]={type:"m4",value:s.toArray()}:t.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t};function Jn(){ve.call(this),this.type="Camera",this.matrixWorldInverse=new Ee,this.projectionMatrix=new Ee,this.projectionMatrixInverse=new Ee}Jn.prototype=Object.assign(Object.create(ve.prototype),{constructor:Jn,isCamera:!0,copy:function(e,t){return ve.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new P),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){ve.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){ve.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function rt(e=50,t=1,n=.1,i=2e3){Jn.call(this),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}rt.prototype=Object.assign(Object.create(Jn.prototype),{constructor:rt,isPerspectiveCamera:!0,copy:function(e,t){return Jn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=we.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(we.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return we.RAD2DEG*2*Math.atan(Math.tan(we.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(we.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,l=s.fullHeight;r+=s.offsetX*i/a,t-=s.offsetY*n/l,i*=s.width/a,n*=s.height/l}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=ve.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Oi=90,Fi=1;function or(e,t,n){if(ve.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new rt(Oi,Fi,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new P(1,0,0)),this.add(i);const r=new rt(Oi,Fi,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new P(-1,0,0)),this.add(r);const s=new rt(Oi,Fi,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new P(0,1,0)),this.add(s);const o=new rt(Oi,Fi,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new P(0,-1,0)),this.add(o);const a=new rt(Oi,Fi,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new P(0,0,1)),this.add(a);const l=new rt(Oi,Fi,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new P(0,0,-1)),this.add(l),this.update=function(c,h){this.parent===null&&this.updateMatrixWorld();const u=c.xr.enabled,d=c.getRenderTarget();c.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,c.setRenderTarget(n,0),c.render(h,i),c.setRenderTarget(n,1),c.render(h,r),c.setRenderTarget(n,2),c.render(h,s),c.setRenderTarget(n,3),c.render(h,o),c.setRenderTarget(n,4),c.render(h,a),n.texture.generateMipmaps=f,c.setRenderTarget(n,5),c.render(h,l),c.setRenderTarget(d),c.xr.enabled=u}}or.prototype=Object.create(ve.prototype);or.prototype.constructor=or;function Kn(e,t,n,i,r,s,o,a,l,c){e=e!==void 0?e:[],t=t!==void 0?t:$l,o=o!==void 0?o:di,Ve.call(this,e,t,n,i,r,s,o,a,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}Kn.prototype=Object.create(Ve.prototype);Kn.prototype.constructor=Kn;Kn.prototype.isCubeTexture=!0;Object.defineProperty(Kn.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function mi(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),$t.call(this,e,e,t),t=t||{},this.texture=new Kn(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}mi.prototype=Object.create($t.prototype);mi.prototype.constructor=mi;mi.prototype.isWebGLCubeRenderTarget=!0;mi.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=Kt,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new Sf(5,5,5),r=new bt({name:"CubemapFromEquirect",uniforms:sr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:at,blending:kr});r.uniforms.tEquirect.value=t;const s=new lt(i,r),o=t.minFilter;return t.minFilter===jo&&(t.minFilter=pt),new or(1,10,this).update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this};mi.prototype.clear=function(e,t,n,i){const r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,i);e.setRenderTarget(r)};function ar(e,t,n,i,r,s,o,a,l,c,h,u){Ve.call(this,null,s,o,a,l,c,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=l!==void 0?l:vt,this.minFilter=c!==void 0?c:vt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}ar.prototype=Object.create(Ve.prototype);ar.prototype.constructor=ar;ar.prototype.isDataTexture=!0;const Bi=new ei,Vs=new P;class Xo{constructor(t,n,i,r,s,o){this.planes=[t!==void 0?t:new Sn,n!==void 0?n:new Sn,i!==void 0?i:new Sn,r!==void 0?r:new Sn,s!==void 0?s:new Sn,o!==void 0?o:new Sn]}set(t,n,i,r,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(n),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(t){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const n=this.planes,i=t.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],f=i[9],p=i[10],v=i[11],y=i[12],g=i[13],m=i[14],E=i[15];return n[0].setComponents(a-r,u-l,v-d,E-y).normalize(),n[1].setComponents(a+r,u+l,v+d,E+y).normalize(),n[2].setComponents(a+s,u+c,v+f,E+g).normalize(),n[3].setComponents(a-s,u-c,v-f,E-g).normalize(),n[4].setComponents(a-o,u-h,v-p,E-m).normalize(),n[5].setComponents(a+o,u+h,v+p,E+m).normalize(),this}intersectsObject(t){const n=t.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),Bi.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Bi)}intersectsSprite(t){return Bi.center.set(0,0,0),Bi.radius=.7071067811865476,Bi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Bi)}intersectsSphere(t){const n=this.planes,i=t.center,r=-t.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(t){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Vs.x=r.normal.x>0?t.max.x:t.min.x,Vs.y=r.normal.y>0?t.max.y:t.min.y,Vs.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Vs)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(t)<0)return!1;return!0}}function Ef(){let e=null,t=!1,n=null,i=null;function r(s,o){n(s,o),i=e.requestAnimationFrame(r)}return{start:function(){t!==!0&&n!==null&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(s){n=s},setContext:function(s){e=s}}}function Pv(e,t){const n=t.isWebGL2,i=new WeakMap;function r(c,h){const u=c.array,d=c.usage,f=e.createBuffer();e.bindBuffer(h,f),e.bufferData(h,u,d),c.onUploadCallback();let p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?c.isFloat16BufferAttribute?n?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:u instanceof Uint8Array&&(p=5121),{buffer:f,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function s(c,h,u){const d=h.array,f=h.updateRange;e.bindBuffer(u,c),f.count===-1?e.bufferSubData(u,0,d):(n?e.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):e.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h&&(e.deleteBuffer(h.buffer),i.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const d=i.get(c);(!d||d.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u===void 0?i.set(c,r(c,h)):u.version<c.version&&(s(u.buffer,c,h),u.version=c.version)}return{get:o,remove:a,update:l}}class Rv extends Ue{constructor(t=1,n=1,i=1,r=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:n,widthSegments:i,heightSegments:r};const s=t/2,o=n/2,a=Math.floor(i),l=Math.floor(r),c=a+1,h=l+1,u=t/a,d=n/l,f=[],p=[],v=[],y=[];for(let g=0;g<h;g++){const m=g*d-o;for(let E=0;E<c;E++){const S=E*u-s;p.push(S,-m,0),v.push(0,0,1),y.push(E/a),y.push(1-g/l)}}for(let g=0;g<l;g++)for(let m=0;m<a;m++){const E=m+c*g,S=m+c*(g+1),A=m+1+c*(g+1),b=m+1+c*g;f.push(E,S,b),f.push(S,A,b)}this.setIndex(f),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(v,3)),this.setAttribute("uv",new Fe(y,2))}}var Iv=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Dv=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Nv=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,Ov=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Fv=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Bv="vec3 transformed = vec3( position );",Uv=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,zv=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Hv=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Gv=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,kv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Vv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Wv=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,jv=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,qv=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Xv=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Yv=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Zv=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Jv=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Kv=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,$v=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Qv=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,ey=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ty=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ny="gl_FragColor = linearToOutputTexel( gl_FragColor );",iy=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,ry=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,sy=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,oy=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,ay=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ly=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,cy=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,uy=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,hy=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fy=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,dy=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,py=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,my=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,gy=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,vy=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,yy=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,xy=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,_y=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,by=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,wy=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,My=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,Sy=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Ey=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Ty=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,Ay=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Ly=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Cy=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Py=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Ry=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Iy=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,Dy=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ny=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Oy=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Fy=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,By=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Uy=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,zy=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Hy=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Gy=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,ky=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,Vy=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,Wy=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,jy=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,qy=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Xy=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Yy=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Zy=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Jy=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Ky=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,$y=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Qy=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,ex=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,tx=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,nx=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,ix=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,rx=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,sx=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,ox=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ax=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,lx=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,cx=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ux=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,hx=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,fx=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,dx=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,px=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,mx=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,gx=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,vx=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,yx=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,xx=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,_x=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,bx=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,wx=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Mx=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Sx=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ex=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Tx=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Ax=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Lx=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Cx=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Px=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Rx=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ix=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Dx=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Nx=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Ox=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fx=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bx=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ux=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,zx=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hx=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Gx=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kx=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vx=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wx=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jx=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,qx=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Xx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Yx=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Zx=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Jx=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Kx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,$x=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const Re={alphamap_fragment:Iv,alphamap_pars_fragment:Dv,alphatest_fragment:Nv,aomap_fragment:Ov,aomap_pars_fragment:Fv,begin_vertex:Bv,beginnormal_vertex:Uv,bsdfs:zv,bumpmap_pars_fragment:Hv,clipping_planes_fragment:Gv,clipping_planes_pars_fragment:kv,clipping_planes_pars_vertex:Vv,clipping_planes_vertex:Wv,color_fragment:jv,color_pars_fragment:qv,color_pars_vertex:Xv,color_vertex:Yv,common:Zv,cube_uv_reflection_fragment:Jv,defaultnormal_vertex:Kv,displacementmap_pars_vertex:$v,displacementmap_vertex:Qv,emissivemap_fragment:ey,emissivemap_pars_fragment:ty,encodings_fragment:ny,encodings_pars_fragment:iy,envmap_fragment:ry,envmap_common_pars_fragment:sy,envmap_pars_fragment:oy,envmap_pars_vertex:ay,envmap_physical_pars_fragment:yy,envmap_vertex:ly,fog_vertex:cy,fog_pars_vertex:uy,fog_fragment:hy,fog_pars_fragment:fy,gradientmap_pars_fragment:dy,lightmap_fragment:py,lightmap_pars_fragment:my,lights_lambert_vertex:gy,lights_pars_begin:vy,lights_toon_fragment:xy,lights_toon_pars_fragment:_y,lights_phong_fragment:by,lights_phong_pars_fragment:wy,lights_physical_fragment:My,lights_physical_pars_fragment:Sy,lights_fragment_begin:Ey,lights_fragment_maps:Ty,lights_fragment_end:Ay,logdepthbuf_fragment:Ly,logdepthbuf_pars_fragment:Cy,logdepthbuf_pars_vertex:Py,logdepthbuf_vertex:Ry,map_fragment:Iy,map_pars_fragment:Dy,map_particle_fragment:Ny,map_particle_pars_fragment:Oy,metalnessmap_fragment:Fy,metalnessmap_pars_fragment:By,morphnormal_vertex:Uy,morphtarget_pars_vertex:zy,morphtarget_vertex:Hy,normal_fragment_begin:Gy,normal_fragment_maps:ky,normalmap_pars_fragment:Vy,clearcoat_normal_fragment_begin:Wy,clearcoat_normal_fragment_maps:jy,clearcoat_pars_fragment:qy,packing:Xy,premultiplied_alpha_fragment:Yy,project_vertex:Zy,dithering_fragment:Jy,dithering_pars_fragment:Ky,roughnessmap_fragment:$y,roughnessmap_pars_fragment:Qy,shadowmap_pars_fragment:ex,shadowmap_pars_vertex:tx,shadowmap_vertex:nx,shadowmask_pars_fragment:ix,skinbase_vertex:rx,skinning_pars_vertex:sx,skinning_vertex:ox,skinnormal_vertex:ax,specularmap_fragment:lx,specularmap_pars_fragment:cx,tonemapping_fragment:ux,tonemapping_pars_fragment:hx,transmissionmap_fragment:fx,transmissionmap_pars_fragment:dx,uv_pars_fragment:px,uv_pars_vertex:mx,uv_vertex:gx,uv2_pars_fragment:vx,uv2_pars_vertex:yx,uv2_vertex:xx,worldpos_vertex:_x,background_frag:bx,background_vert:wx,cube_frag:Mx,cube_vert:Sx,depth_frag:Ex,depth_vert:Tx,distanceRGBA_frag:Ax,distanceRGBA_vert:Lx,equirect_frag:Cx,equirect_vert:Px,linedashed_frag:Rx,linedashed_vert:Ix,meshbasic_frag:Dx,meshbasic_vert:Nx,meshlambert_frag:Ox,meshlambert_vert:Fx,meshmatcap_frag:Bx,meshmatcap_vert:Ux,meshtoon_frag:zx,meshtoon_vert:Hx,meshphong_frag:Gx,meshphong_vert:kx,meshphysical_frag:Vx,meshphysical_vert:Wx,normal_frag:jx,normal_vert:qx,points_frag:Xx,points_vert:Yx,shadow_frag:Zx,shadow_vert:Jx,sprite_frag:Kx,sprite_vert:$x},le={common:{diffuse:{value:new fe(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Et},uv2Transform:{value:new Et},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new J(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fe(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Et}},sprite:{diffuse:{value:new fe(15658734)},opacity:{value:1},center:{value:new J(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Et}}},on={basic:{uniforms:ut([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.fog]),vertexShader:Re.meshbasic_vert,fragmentShader:Re.meshbasic_frag},lambert:{uniforms:ut([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.fog,le.lights,{emissive:{value:new fe(0)}}]),vertexShader:Re.meshlambert_vert,fragmentShader:Re.meshlambert_frag},phong:{uniforms:ut([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.fog,le.lights,{emissive:{value:new fe(0)},specular:{value:new fe(1118481)},shininess:{value:30}}]),vertexShader:Re.meshphong_vert,fragmentShader:Re.meshphong_frag},standard:{uniforms:ut([le.common,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.roughnessmap,le.metalnessmap,le.fog,le.lights,{emissive:{value:new fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Re.meshphysical_vert,fragmentShader:Re.meshphysical_frag},toon:{uniforms:ut([le.common,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.gradientmap,le.fog,le.lights,{emissive:{value:new fe(0)}}]),vertexShader:Re.meshtoon_vert,fragmentShader:Re.meshtoon_frag},matcap:{uniforms:ut([le.common,le.bumpmap,le.normalmap,le.displacementmap,le.fog,{matcap:{value:null}}]),vertexShader:Re.meshmatcap_vert,fragmentShader:Re.meshmatcap_frag},points:{uniforms:ut([le.points,le.fog]),vertexShader:Re.points_vert,fragmentShader:Re.points_frag},dashed:{uniforms:ut([le.common,le.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Re.linedashed_vert,fragmentShader:Re.linedashed_frag},depth:{uniforms:ut([le.common,le.displacementmap]),vertexShader:Re.depth_vert,fragmentShader:Re.depth_frag},normal:{uniforms:ut([le.common,le.bumpmap,le.normalmap,le.displacementmap,{opacity:{value:1}}]),vertexShader:Re.normal_vert,fragmentShader:Re.normal_frag},sprite:{uniforms:ut([le.sprite,le.fog]),vertexShader:Re.sprite_vert,fragmentShader:Re.sprite_frag},background:{uniforms:{uvTransform:{value:new Et},t2D:{value:null}},vertexShader:Re.background_vert,fragmentShader:Re.background_frag},cube:{uniforms:ut([le.envmap,{opacity:{value:1}}]),vertexShader:Re.cube_vert,fragmentShader:Re.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Re.equirect_vert,fragmentShader:Re.equirect_frag},distanceRGBA:{uniforms:ut([le.common,le.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Re.distanceRGBA_vert,fragmentShader:Re.distanceRGBA_frag},shadow:{uniforms:ut([le.lights,le.fog,{color:{value:new fe(0)},opacity:{value:1}}]),vertexShader:Re.shadow_vert,fragmentShader:Re.shadow_frag}};on.physical={uniforms:ut([on.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new J(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new fe(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Re.meshphysical_vert,fragmentShader:Re.meshphysical_frag};function Qx(e,t,n,i,r){const s=new fe(0);let o=0,a,l,c=null,h=0,u=null;function d(p,v,y,g){let m=v.isScene===!0?v.background:null;m&&m.isTexture&&(m=t.get(m));const E=e.xr,S=E.getSession&&E.getSession();S&&S.environmentBlendMode==="additive"&&(m=null),m===null?f(s,o):m&&m.isColor&&(f(m,1),g=!0),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===ec)?(l===void 0&&(l=new lt(new Sf(1,1,1),new bt({name:"BackgroundCubeMaterial",uniforms:sr(on.cube.uniforms),vertexShader:on.cube.vertexShader,fragmentShader:on.cube.fragmentShader,side:at,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(A,b,R){this.matrixWorld.copyPosition(R.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),m.isWebGLCubeRenderTarget&&(m=m.texture),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,(c!==m||h!==m.version||u!==e.toneMapping)&&(l.material.needsUpdate=!0,c=m,h=m.version,u=e.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(a===void 0&&(a=new lt(new Rv(2,2),new bt({name:"BackgroundMaterial",uniforms:sr(on.background.uniforms),vertexShader:on.background.vertexShader,fragmentShader:on.background.fragmentShader,side:ko,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||h!==m.version||u!==e.toneMapping)&&(a.material.needsUpdate=!0,c=m,h=m.version,u=e.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function f(p,v){n.buffers.color.setClear(p.r,p.g,p.b,v,r)}return{getClearColor:function(){return s},setClearColor:function(p,v=1){s.set(p),o=v,f(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,f(s,o)},render:d}}function e_(e,t,n,i){const r=e.getParameter(34921),s=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=v(null);let c=l;function h(V,B,D,H,K){let $=!1;if(o){const oe=p(H,D,B);c!==oe&&(c=oe,d(c.object)),$=y(H,K),$&&g(H,K)}else{const oe=B.wireframe===!0;(c.geometry!==H.id||c.program!==D.id||c.wireframe!==oe)&&(c.geometry=H.id,c.program=D.id,c.wireframe=oe,$=!0)}V.isInstancedMesh===!0&&($=!0),K!==null&&n.update(K,34963),$&&(R(V,B,D,H),K!==null&&e.bindBuffer(34963,n.get(K).buffer))}function u(){return i.isWebGL2?e.createVertexArray():s.createVertexArrayOES()}function d(V){return i.isWebGL2?e.bindVertexArray(V):s.bindVertexArrayOES(V)}function f(V){return i.isWebGL2?e.deleteVertexArray(V):s.deleteVertexArrayOES(V)}function p(V,B,D){const H=D.wireframe===!0;let K=a[V.id];K===void 0&&(K={},a[V.id]=K);let $=K[B.id];$===void 0&&($={},K[B.id]=$);let oe=$[H];return oe===void 0&&(oe=v(u()),$[H]=oe),oe}function v(V){const B=[],D=[],H=[];for(let K=0;K<r;K++)B[K]=0,D[K]=0,H[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:D,attributeDivisors:H,object:V,attributes:{},index:null}}function y(V,B){const D=c.attributes,H=V.attributes;let K=0;for(const $ in H){const oe=D[$],ue=H[$];if(oe===void 0||oe.attribute!==ue||oe.data!==ue.data)return!0;K++}return c.attributesNum!==K||c.index!==B}function g(V,B){const D={},H=V.attributes;let K=0;for(const $ in H){const oe=H[$],ue={};ue.attribute=oe,oe.data&&(ue.data=oe.data),D[$]=ue,K++}c.attributes=D,c.attributesNum=K,c.index=B}function m(){const V=c.newAttributes;for(let B=0,D=V.length;B<D;B++)V[B]=0}function E(V){S(V,0)}function S(V,B){const D=c.newAttributes,H=c.enabledAttributes,K=c.attributeDivisors;D[V]=1,H[V]===0&&(e.enableVertexAttribArray(V),H[V]=1),K[V]!==B&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](V,B),K[V]=B)}function A(){const V=c.newAttributes,B=c.enabledAttributes;for(let D=0,H=B.length;D<H;D++)B[D]!==V[D]&&(e.disableVertexAttribArray(D),B[D]=0)}function b(V,B,D,H,K,$){i.isWebGL2===!0&&(D===5124||D===5125)?e.vertexAttribIPointer(V,B,D,K,$):e.vertexAttribPointer(V,B,D,H,K,$)}function R(V,B,D,H){if(i.isWebGL2===!1&&(V.isInstancedMesh||H.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;m();const K=H.attributes,$=D.getAttributes(),oe=B.defaultAttributeValues;for(const ue in $){const ae=$[ue];if(ae>=0){const pe=K[ue];if(pe!==void 0){const _e=pe.normalized,Ge=pe.itemSize,ne=n.get(pe);if(ne===void 0)continue;const Be=ne.buffer,de=ne.type,Te=ne.bytesPerElement;if(pe.isInterleavedBufferAttribute){const ge=pe.data,Ie=ge.stride,be=pe.offset;ge&&ge.isInstancedInterleavedBuffer?(S(ae,ge.meshPerAttribute),H._maxInstanceCount===void 0&&(H._maxInstanceCount=ge.meshPerAttribute*ge.count)):E(ae),e.bindBuffer(34962,Be),b(ae,Ge,de,_e,Ie*Te,be*Te)}else pe.isInstancedBufferAttribute?(S(ae,pe.meshPerAttribute),H._maxInstanceCount===void 0&&(H._maxInstanceCount=pe.meshPerAttribute*pe.count)):E(ae),e.bindBuffer(34962,Be),b(ae,Ge,de,_e,0,0)}else if(ue==="instanceMatrix"){const _e=n.get(V.instanceMatrix);if(_e===void 0)continue;const Ge=_e.buffer,ne=_e.type;S(ae+0,1),S(ae+1,1),S(ae+2,1),S(ae+3,1),e.bindBuffer(34962,Ge),e.vertexAttribPointer(ae+0,4,ne,!1,64,0),e.vertexAttribPointer(ae+1,4,ne,!1,64,16),e.vertexAttribPointer(ae+2,4,ne,!1,64,32),e.vertexAttribPointer(ae+3,4,ne,!1,64,48)}else if(ue==="instanceColor"){const _e=n.get(V.instanceColor);if(_e===void 0)continue;const Ge=_e.buffer,ne=_e.type;S(ae,1),e.bindBuffer(34962,Ge),e.vertexAttribPointer(ae,3,ne,!1,12,0)}else if(oe!==void 0){const _e=oe[ue];if(_e!==void 0)switch(_e.length){case 2:e.vertexAttrib2fv(ae,_e);break;case 3:e.vertexAttrib3fv(ae,_e);break;case 4:e.vertexAttrib4fv(ae,_e);break;default:e.vertexAttrib1fv(ae,_e)}}}}A()}function G(){z();for(const V in a){const B=a[V];for(const D in B){const H=B[D];for(const K in H)f(H[K].object),delete H[K];delete B[D]}delete a[V]}}function W(V){if(a[V.id]===void 0)return;const B=a[V.id];for(const D in B){const H=B[D];for(const K in H)f(H[K].object),delete H[K];delete B[D]}delete a[V.id]}function se(V){for(const B in a){const D=a[B];if(D[V.id]===void 0)continue;const H=D[V.id];for(const K in H)f(H[K].object),delete H[K];delete D[V.id]}}function z(){X(),c!==l&&(c=l,d(c.object))}function X(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:z,resetDefaultState:X,dispose:G,releaseStatesOfGeometry:W,releaseStatesOfProgram:se,initAttributes:m,enableAttribute:E,disableUnusedAttributes:A}}function t_(e,t,n,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,h){e.drawArrays(s,c,h),n.update(h,s,1)}function l(c,h,u){if(u===0)return;let d,f;if(r)d=e,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](s,c,h,u),n.update(h,s,u)}this.setMode=o,this.render=a,this.renderInstances=l}function n_(e,t,n){let i;function r(){if(i!==void 0)return i;const b=t.get("EXT_texture_filter_anisotropic");return b!==null?i=e.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(b){if(b==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&e instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=n.logarithmicDepthBuffer===!0,h=e.getParameter(34930),u=e.getParameter(35660),d=e.getParameter(3379),f=e.getParameter(34076),p=e.getParameter(34921),v=e.getParameter(36347),y=e.getParameter(36348),g=e.getParameter(36349),m=u>0,E=o||!!t.get("OES_texture_float"),S=m&&E,A=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:v,maxVaryings:y,maxFragmentUniforms:g,vertexTextures:m,floatFragmentTextures:E,floatVertexTextures:S,maxSamples:A}}function i_(e){const t=this;let n=null,i=0,r=!1,s=!1;const o=new Sn,a=new Et,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d,f){const p=u.length!==0||d||i!==0||r;return r=d,n=h(u,f,0),i=u.length,p},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(u,d,f){const p=u.clippingPlanes,v=u.clipIntersection,y=u.clipShadows,g=e.get(u);if(!r||p===null||p.length===0||s&&!y)s?h(null):c();else{const m=s?0:i,E=m*4;let S=g.clippingState||null;l.value=S,S=h(p,d,E,f);for(let A=0;A!==E;++A)S[A]=n[A];g.clippingState=S,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=m}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(u,d,f,p){const v=u!==null?u.length:0;let y=null;if(v!==0){if(y=l.value,p!==!0||y===null){const g=f+v*4,m=d.matrixWorldInverse;a.getNormalMatrix(m),(y===null||y.length<g)&&(y=new Float32Array(g));for(let E=0,S=f;E!==v;++E,S+=4)o.copy(u[E]).applyMatrix4(m,a),o.normal.toArray(y,S),y[S+3]=o.constant}l.value=y,l.needsUpdate=!0}return t.numPlanes=v,t.numIntersection=0,y}}function r_(e){let t=new WeakMap;function n(o,a){return a===Xc?o.mapping=$l:a===Yc&&(o.mapping=Ql),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Xc||a===Yc)if(t.has(o)){const l=t.get(o).texture;return n(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=e.getRenderList(),h=e.getRenderTarget(),u=new mi(l.height/2);return u.fromEquirectangularTexture(e,o),t.set(o,u),e.setRenderTarget(h),e.setRenderList(c),o.addEventListener("dispose",r),n(u.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:i,dispose:s}}function s_(e){const t={};return{has:function(n){if(t[n]!==void 0)return t[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]}}}function o_(e,t,n,i){const r=new WeakMap,s=new WeakMap;function o(u){const d=u.target,f=r.get(d);f.index!==null&&t.remove(f.index);for(const v in f.attributes)t.remove(f.attributes[v]);d.removeEventListener("dispose",o),r.delete(d);const p=s.get(f);p&&(t.remove(p),s.delete(f)),i.releaseStatesOfGeometry(f),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,n.memory.geometries--}function a(u,d){let f=r.get(d);return f||(d.addEventListener("dispose",o),d.isBufferGeometry?f=d:d.isGeometry&&(d._bufferGeometry===void 0&&(d._bufferGeometry=new Ue().setFromObject(u)),f=d._bufferGeometry),r.set(d,f),n.memory.geometries++,f)}function l(u){const d=u.attributes;for(const p in d)t.update(d[p],34962);const f=u.morphAttributes;for(const p in f){const v=f[p];for(let y=0,g=v.length;y<g;y++)t.update(v[y],34962)}}function c(u){const d=[],f=u.index,p=u.attributes.position;let v=0;if(f!==null){const m=f.array;v=f.version;for(let E=0,S=m.length;E<S;E+=3){const A=m[E+0],b=m[E+1],R=m[E+2];d.push(A,b,b,R,R,A)}}else{const m=p.array;v=p.version;for(let E=0,S=m.length/3-1;E<S;E+=3){const A=E+0,b=E+1,R=E+2;d.push(A,b,b,R,R,A)}}const y=new(wf(d)>65535?ss:rs)(d,1);y.version=v;const g=s.get(u);g&&t.remove(g),s.set(u,y)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function a_(e,t,n,i){const r=i.isWebGL2;let s;function o(d){s=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function h(d,f){e.drawElements(s,f,a,d*l),n.update(f,s,1)}function u(d,f,p){if(p===0)return;let v,y;if(r)v=e,y="drawElementsInstanced";else if(v=t.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[y](s,f,a,d*l,p),n.update(f,s,p)}this.setMode=o,this.setIndex=c,this.render=h,this.renderInstances=u}function l_(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(n.calls++,o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function c_(e,t){return e[0]-t[0]}function u_(e,t){return Math.abs(t[1])-Math.abs(e[1])}function h_(e){const t={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,l){const c=s.morphTargetInfluences,h=c===void 0?0:c.length;let u=t[o.id];if(u===void 0){u=[];for(let y=0;y<h;y++)u[y]=[y,0];t[o.id]=u}for(let y=0;y<h;y++){const g=u[y];g[0]=y,g[1]=c[y]}u.sort(u_);for(let y=0;y<8;y++)y<h&&u[y][1]?(i[y][0]=u[y][0],i[y][1]=u[y][1]):(i[y][0]=Number.MAX_SAFE_INTEGER,i[y][1]=0);i.sort(c_);const d=a.morphTargets&&o.morphAttributes.position,f=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let y=0;y<8;y++){const g=i[y],m=g[0],E=g[1];m!==Number.MAX_SAFE_INTEGER&&E?(d&&o.getAttribute("morphTarget"+y)!==d[m]&&o.setAttribute("morphTarget"+y,d[m]),f&&o.getAttribute("morphNormal"+y)!==f[m]&&o.setAttribute("morphNormal"+y,f[m]),n[y]=E,p+=E):(d&&o.hasAttribute("morphTarget"+y)===!0&&o.deleteAttribute("morphTarget"+y),f&&o.hasAttribute("morphNormal"+y)===!0&&o.deleteAttribute("morphNormal"+y),n[y]=0)}const v=o.morphTargetsRelative?1:1-p;l.getUniforms().setValue(e,"morphTargetBaseInfluence",v),l.getUniforms().setValue(e,"morphTargetInfluences",n)}return{update:r}}function f_(e,t,n,i){let r=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,u=t.get(l,h);return r.get(u)!==c&&(h.isGeometry&&u.updateFromObject(l),t.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),u}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:s,dispose:o}}function os(e=null,t=1,n=1,i=1){Ve.call(this,null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=vt,this.minFilter=vt,this.wrapR=Ct,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}os.prototype=Object.create(Ve.prototype);os.prototype.constructor=os;os.prototype.isDataTexture2DArray=!0;function as(e=null,t=1,n=1,i=1){Ve.call(this,null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=vt,this.minFilter=vt,this.wrapR=Ct,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}as.prototype=Object.create(Ve.prototype);as.prototype.constructor=as;as.prototype.isDataTexture3D=!0;const Tf=new Ve,d_=new os,p_=new as,Af=new Kn,xu=[],_u=[],bu=new Float32Array(16),wu=new Float32Array(9),Mu=new Float32Array(4);function br(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let s=xu[r];if(s===void 0&&(s=new Float32Array(r),xu[r]=s),t!==0){i.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=n,e[o].toArray(s,a)}return s}function Bt(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Pt(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function Lf(e,t){let n=_u[t];n===void 0&&(n=new Int32Array(t),_u[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function m_(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function g_(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Bt(n,t))return;e.uniform2fv(this.addr,t),Pt(n,t)}}function v_(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Bt(n,t))return;e.uniform3fv(this.addr,t),Pt(n,t)}}function y_(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Bt(n,t))return;e.uniform4fv(this.addr,t),Pt(n,t)}}function x_(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Bt(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Pt(n,t)}else{if(Bt(n,i))return;Mu.set(i),e.uniformMatrix2fv(this.addr,!1,Mu),Pt(n,i)}}function __(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Bt(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Pt(n,t)}else{if(Bt(n,i))return;wu.set(i),e.uniformMatrix3fv(this.addr,!1,wu),Pt(n,i)}}function b_(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Bt(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Pt(n,t)}else{if(Bt(n,i))return;bu.set(i),e.uniformMatrix4fv(this.addr,!1,bu),Pt(n,i)}}function w_(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||Tf,r)}function M_(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||d_,r)}function S_(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||p_,r)}function E_(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||Af,r)}function T_(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function A_(e,t){const n=this.cache;Bt(n,t)||(e.uniform2iv(this.addr,t),Pt(n,t))}function L_(e,t){const n=this.cache;Bt(n,t)||(e.uniform3iv(this.addr,t),Pt(n,t))}function C_(e,t){const n=this.cache;Bt(n,t)||(e.uniform4iv(this.addr,t),Pt(n,t))}function P_(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function R_(e){switch(e){case 5126:return m_;case 35664:return g_;case 35665:return v_;case 35666:return y_;case 35674:return x_;case 35675:return __;case 35676:return b_;case 5124:case 35670:return T_;case 35667:case 35671:return A_;case 35668:case 35672:return L_;case 35669:case 35673:return C_;case 5125:return P_;case 35678:case 36198:case 36298:case 36306:case 35682:return w_;case 35679:case 36299:case 36307:return S_;case 35680:case 36300:case 36308:case 36293:return E_;case 36289:case 36303:case 36311:case 36292:return M_}}function I_(e,t){e.uniform1fv(this.addr,t)}function D_(e,t){e.uniform1iv(this.addr,t)}function N_(e,t){e.uniform2iv(this.addr,t)}function O_(e,t){e.uniform3iv(this.addr,t)}function F_(e,t){e.uniform4iv(this.addr,t)}function B_(e,t){const n=br(t,this.size,2);e.uniform2fv(this.addr,n)}function U_(e,t){const n=br(t,this.size,3);e.uniform3fv(this.addr,n)}function z_(e,t){const n=br(t,this.size,4);e.uniform4fv(this.addr,n)}function H_(e,t){const n=br(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function G_(e,t){const n=br(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function k_(e,t){const n=br(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function V_(e,t,n){const i=t.length,r=Lf(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(t[s]||Tf,r[s])}function W_(e,t,n){const i=t.length,r=Lf(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(t[s]||Af,r[s])}function j_(e){switch(e){case 5126:return I_;case 35664:return B_;case 35665:return U_;case 35666:return z_;case 35674:return H_;case 35675:return G_;case 35676:return k_;case 5124:case 35670:return D_;case 35667:case 35671:return N_;case 35668:case 35672:return O_;case 35669:case 35673:return F_;case 35678:case 36198:case 36298:case 36306:case 35682:return V_;case 35680:case 36300:case 36308:case 36293:return W_}}function q_(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=R_(t.type)}function Cf(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=j_(t.type)}Cf.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Pt(t,e)};function Pf(e){this.id=e,this.seq=[],this.map={}}Pf.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(e,t[o.id],n)}};const Ta=/(\w+)(\])?(\[|\.)?/g;function Su(e,t){e.seq.push(t),e.map[t.id]=t}function X_(e,t,n){const i=e.name,r=i.length;for(Ta.lastIndex=0;;){const s=Ta.exec(i),o=Ta.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Su(n,c===void 0?new q_(a,e,t):new Cf(a,e,t));break}else{let u=n.map[a];u===void 0&&(u=new Pf(a),Su(n,u)),n=u}}}function Xn(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),s=e.getUniformLocation(t,r.name);X_(r,s,this)}}Xn.prototype.setValue=function(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)};Xn.prototype.setOptional=function(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)};Xn.upload=function(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const o=t[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(e,a.value,i)}};Xn.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const s=e[i];s.id in t&&n.push(s)}return n};function Eu(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let Y_=0;function Z_(e){const t=e.split(`
`);for(let n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function Rf(e){switch(e){case ys:return["Linear","( value )"];case xf:return["sRGB","( value )"];case rv:return["RGBE","( value )"];case ov:return["RGBM","( value, 7.0 )"];case av:return["RGBM","( value, 16.0 )"];case lv:return["RGBD","( value, 256.0 )"];case iv:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case sv:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Tu(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const s=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+Z_(s)}function Pr(e,t){const n=Rf(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function J_(e,t){const n=Rf(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function K_(e,t){let n;switch(t){case ng:n="Linear";break;case ig:n="Reinhard";break;case rg:n="OptimizedCineon";break;case sg:n="ACESFilmic";break;case og:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function $_(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ur).join(`
`)}function Q_(e){const t=[];for(const n in e){const i=e[n];i!==!1&&t.push("#define "+n+" "+i)}return t.join(`
`)}function e0(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const o=e.getActiveAttrib(t,r).name;n[o]=e.getAttribLocation(t,o)}return n}function Ur(e){return e!==""}function Au(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Lu(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const t0=/^[ \t]*#include +<([\w\d./]+)>/gm;function il(e){return e.replace(t0,n0)}function n0(e,t){const n=Re[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return il(n)}const i0=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,r0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Cu(e){return e.replace(r0,If).replace(i0,s0)}function s0(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),If(e,t,n,i)}function If(e,t,n,i){let r="";for(let s=parseInt(t);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Pu(e){let t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function o0(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===df?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Nm?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Br&&(t="SHADOWMAP_TYPE_VSM"),t}function a0(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case $l:case Ql:t="ENVMAP_TYPE_CUBE";break;case ec:case tc:t="ENVMAP_TYPE_CUBE_UV";break}return t}function l0(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case Ql:case tc:t="ENVMAP_MODE_REFRACTION";break}return t}function c0(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Wo:t="ENVMAP_BLENDING_MULTIPLY";break;case eg:t="ENVMAP_BLENDING_MIX";break;case tg:t="ENVMAP_BLENDING_ADD";break}return t}function u0(e,t,n,i){const r=e.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const l=o0(n),c=a0(n),h=l0(n),u=c0(n),d=e.gammaFactor>0?e.gammaFactor:1,f=n.isWebGL2?"":$_(n),p=Q_(s),v=r.createProgram();let y,g,m=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(y=[p].filter(Ur).join(`
`),y.length>0&&(y+=`
`),g=[f,p].filter(Ur).join(`
`),g.length>0&&(g+=`
`)):(y=[Pu(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ur).join(`
`),g=[f,Pu(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Wr?"#define TONE_MAPPING":"",n.toneMapping!==Wr?Re.tonemapping_pars_fragment:"",n.toneMapping!==Wr?K_("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Re.encodings_pars_fragment,n.map?Pr("mapTexelToLinear",n.mapEncoding):"",n.matcap?Pr("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Pr("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Pr("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Pr("lightMapTexelToLinear",n.lightMapEncoding):"",J_("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Ur).join(`
`)),o=il(o),o=Au(o,n),o=Lu(o,n),a=il(a),a=Au(a,n),a=Lu(a,n),o=Cu(o),a=Cu(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(m=`#version 300 es
`,y=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",n.glslVersion===au?"":"out highp vec4 pc_fragColor;",n.glslVersion===au?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const E=m+y+o,S=m+g+a,A=Eu(r,35633,E),b=Eu(r,35632,S);if(r.attachShader(v,A),r.attachShader(v,b),n.index0AttributeName!==void 0?r.bindAttribLocation(v,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v),e.debug.checkShaderErrors){const W=r.getProgramInfoLog(v).trim(),se=r.getShaderInfoLog(A).trim(),z=r.getShaderInfoLog(b).trim();let X=!0,V=!0;if(r.getProgramParameter(v,35714)===!1){X=!1;const B=Tu(r,A,"vertex"),D=Tu(r,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(v,35715),"gl.getProgramInfoLog",W,B,D)}else W!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",W):(se===""||z==="")&&(V=!1);V&&(this.diagnostics={runnable:X,programLog:W,vertexShader:{log:se,prefix:y},fragmentShader:{log:z,prefix:g}})}r.deleteShader(A),r.deleteShader(b);let R;this.getUniforms=function(){return R===void 0&&(R=new Xn(r,v)),R};let G;return this.getAttributes=function(){return G===void 0&&(G=e0(r,v)),G},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.name=n.shaderName,this.id=Y_++,this.cacheKey=t,this.usedTimes=1,this.program=v,this.vertexShader=A,this.fragmentShader=b,this}function h0(e,t,n,i,r,s){const o=[],a=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function v(b){const G=b.skeleton.bones;if(c)return 1024;{const se=Math.floor((h-20)/4),z=Math.min(se,G.length);return z<G.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+G.length+" bones. This GPU supports "+z+"."),0):z}}function y(b){let R;return b&&b.isTexture?R=b.encoding:b&&b.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),R=b.texture.encoding):R=ys,R}function g(b,R,G,W,se){const z=W.fog,X=b.isMeshStandardMaterial?W.environment:null,V=t.get(b.envMap||X),B=f[b.type],D=se.isSkinnedMesh?v(se):0;b.precision!==null&&(d=i.getMaxPrecision(b.precision),d!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",d,"instead."));let H,K;if(B){const ue=on[B];H=ue.vertexShader,K=ue.fragmentShader}else H=b.vertexShader,K=b.fragmentShader;const $=e.getRenderTarget();return{isWebGL2:a,shaderID:B,shaderName:b.type,vertexShader:H,fragmentShader:K,defines:b.defines,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:d,instancing:se.isInstancedMesh===!0,instancingColor:se.isInstancedMesh===!0&&se.instanceColor!==null,supportsVertexTextures:u,outputEncoding:$!==null?y($.texture):e.outputEncoding,map:!!b.map,mapEncoding:y(b.map),matcap:!!b.matcap,matcapEncoding:y(b.matcap),envMap:!!V,envMapMode:V&&V.mapping,envMapEncoding:y(V),envMapCubeUV:!!V&&(V.mapping===ec||V.mapping===tc),lightMap:!!b.lightMap,lightMapEncoding:y(b.lightMap),aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:y(b.emissiveMap),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===hv,tangentSpaceNormalMap:b.normalMapType===xr,clearcoatMap:!!b.clearcoatMap,clearcoatRoughnessMap:!!b.clearcoatRoughnessMap,clearcoatNormalMap:!!b.clearcoatNormalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,gradientMap:!!b.gradientMap,sheen:!!b.sheen,transmissionMap:!!b.transmissionMap,combine:b.combine,vertexTangents:b.normalMap&&b.vertexTangents,vertexColors:b.vertexColors,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.displacementMap||!!b.transmissionMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.transmissionMap)&&!!b.displacementMap,fog:!!z,useFog:b.fog,fogExp2:z&&z.isFogExp2,flatShading:b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:l,skinning:b.skinning&&D>0,maxBones:D,useVertexTexture:c,morphTargets:b.morphTargets,morphNormals:b.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:b.dithering,shadowMapEnabled:e.shadowMap.enabled&&G.length>0,shadowMapType:e.shadowMap.type,toneMapping:b.toneMapped?e.toneMapping:Wr,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,alphaTest:b.alphaTest,doubleSided:b.side===Vo,flipSided:b.side===at,depthPacking:b.depthPacking!==void 0?b.depthPacking:!1,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function m(b){const R=[];if(b.shaderID?R.push(b.shaderID):(R.push(b.fragmentShader),R.push(b.vertexShader)),b.defines!==void 0)for(const G in b.defines)R.push(G),R.push(b.defines[G]);if(b.isRawShaderMaterial===!1){for(let G=0;G<p.length;G++)R.push(b[p[G]]);R.push(e.outputEncoding),R.push(e.gammaFactor)}return R.push(b.customProgramCacheKey),R.join()}function E(b){const R=f[b.type];let G;if(R){const W=on[R];G=Av.clone(W.uniforms)}else G=b.uniforms;return G}function S(b,R){let G;for(let W=0,se=o.length;W<se;W++){const z=o[W];if(z.cacheKey===R){G=z,++G.usedTimes;break}}return G===void 0&&(G=new u0(e,R,b,r),o.push(G)),G}function A(b){if(--b.usedTimes===0){const R=o.indexOf(b);o[R]=o[o.length-1],o.pop(),b.destroy()}}return{getParameters:g,getProgramCacheKey:m,getUniforms:E,acquireProgram:S,releaseProgram:A,programs:o}}function f0(){let e=new WeakMap;function t(s){let o=e.get(s);return o===void 0&&(o={},e.set(s,o)),o}function n(s){e.delete(s)}function i(s,o,a){e.get(s)[o]=a}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function d0(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function p0(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ru(e){const t=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(d,f,p,v,y,g){let m=t[n];const E=e.get(p);return m===void 0?(m={id:d.id,object:d,geometry:f,material:p,program:E.program||s,groupOrder:v,renderOrder:d.renderOrder,z:y,group:g},t[n]=m):(m.id=d.id,m.object=d,m.geometry=f,m.material=p,m.program=E.program||s,m.groupOrder=v,m.renderOrder=d.renderOrder,m.z=y,m.group=g),n++,m}function l(d,f,p,v,y,g){const m=a(d,f,p,v,y,g);(p.transparent===!0?r:i).push(m)}function c(d,f,p,v,y,g){const m=a(d,f,p,v,y,g);(p.transparent===!0?r:i).unshift(m)}function h(d,f){i.length>1&&i.sort(d||d0),r.length>1&&r.sort(f||p0)}function u(){for(let d=n,f=t.length;d<f;d++){const p=t[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:r,init:o,push:l,unshift:c,finish:u,sort:h}}function m0(e){let t=new WeakMap;function n(r,s){const o=t.get(r);let a;return o===void 0?(a=new Ru(e),t.set(r,new WeakMap),t.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new Ru(e),o.set(s,a))),a}function i(){t=new WeakMap}return{get:n,dispose:i}}function g0(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new P,color:new fe};break;case"SpotLight":n={position:new P,direction:new P,color:new fe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new P,color:new fe,distance:0,decay:0};break;case"HemisphereLight":n={direction:new P,skyColor:new fe,groundColor:new fe};break;case"RectAreaLight":n={color:new fe,position:new P,halfWidth:new P,halfHeight:new P};break}return e[t.id]=n,n}}}function v0(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new J};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new J};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new J,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let y0=0;function x0(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function _0(e,t){const n=new g0,i=v0(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)r.probe.push(new P);const s=new P,o=new Ee,a=new Ee;function l(h){let u=0,d=0,f=0;for(let R=0;R<9;R++)r.probe[R].set(0,0,0);let p=0,v=0,y=0,g=0,m=0,E=0,S=0,A=0;h.sort(x0);for(let R=0,G=h.length;R<G;R++){const W=h[R],se=W.color,z=W.intensity,X=W.distance,V=W.shadow&&W.shadow.map?W.shadow.map.texture:null;if(W.isAmbientLight)u+=se.r*z,d+=se.g*z,f+=se.b*z;else if(W.isLightProbe)for(let B=0;B<9;B++)r.probe[B].addScaledVector(W.sh.coefficients[B],z);else if(W.isDirectionalLight){const B=n.get(W);if(B.color.copy(W.color).multiplyScalar(W.intensity),W.castShadow){const D=W.shadow,H=i.get(W);H.shadowBias=D.bias,H.shadowNormalBias=D.normalBias,H.shadowRadius=D.radius,H.shadowMapSize=D.mapSize,r.directionalShadow[p]=H,r.directionalShadowMap[p]=V,r.directionalShadowMatrix[p]=W.shadow.matrix,E++}r.directional[p]=B,p++}else if(W.isSpotLight){const B=n.get(W);if(B.position.setFromMatrixPosition(W.matrixWorld),B.color.copy(se).multiplyScalar(z),B.distance=X,B.coneCos=Math.cos(W.angle),B.penumbraCos=Math.cos(W.angle*(1-W.penumbra)),B.decay=W.decay,W.castShadow){const D=W.shadow,H=i.get(W);H.shadowBias=D.bias,H.shadowNormalBias=D.normalBias,H.shadowRadius=D.radius,H.shadowMapSize=D.mapSize,r.spotShadow[y]=H,r.spotShadowMap[y]=V,r.spotShadowMatrix[y]=W.shadow.matrix,A++}r.spot[y]=B,y++}else if(W.isRectAreaLight){const B=n.get(W);B.color.copy(se).multiplyScalar(z),B.halfWidth.set(W.width*.5,0,0),B.halfHeight.set(0,W.height*.5,0),r.rectArea[g]=B,g++}else if(W.isPointLight){const B=n.get(W);if(B.color.copy(W.color).multiplyScalar(W.intensity),B.distance=W.distance,B.decay=W.decay,W.castShadow){const D=W.shadow,H=i.get(W);H.shadowBias=D.bias,H.shadowNormalBias=D.normalBias,H.shadowRadius=D.radius,H.shadowMapSize=D.mapSize,H.shadowCameraNear=D.camera.near,H.shadowCameraFar=D.camera.far,r.pointShadow[v]=H,r.pointShadowMap[v]=V,r.pointShadowMatrix[v]=W.shadow.matrix,S++}r.point[v]=B,v++}else if(W.isHemisphereLight){const B=n.get(W);B.skyColor.copy(W.color).multiplyScalar(z),B.groundColor.copy(W.groundColor).multiplyScalar(z),r.hemi[m]=B,m++}}g>0&&(t.isWebGL2||e.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=le.LTC_FLOAT_1,r.rectAreaLTC2=le.LTC_FLOAT_2):e.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=le.LTC_HALF_1,r.rectAreaLTC2=le.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=u,r.ambient[1]=d,r.ambient[2]=f;const b=r.hash;(b.directionalLength!==p||b.pointLength!==v||b.spotLength!==y||b.rectAreaLength!==g||b.hemiLength!==m||b.numDirectionalShadows!==E||b.numPointShadows!==S||b.numSpotShadows!==A)&&(r.directional.length=p,r.spot.length=y,r.rectArea.length=g,r.point.length=v,r.hemi.length=m,r.directionalShadow.length=E,r.directionalShadowMap.length=E,r.pointShadow.length=S,r.pointShadowMap.length=S,r.spotShadow.length=A,r.spotShadowMap.length=A,r.directionalShadowMatrix.length=E,r.pointShadowMatrix.length=S,r.spotShadowMatrix.length=A,b.directionalLength=p,b.pointLength=v,b.spotLength=y,b.rectAreaLength=g,b.hemiLength=m,b.numDirectionalShadows=E,b.numPointShadows=S,b.numSpotShadows=A,r.version=y0++)}function c(h,u){let d=0,f=0,p=0,v=0,y=0;const g=u.matrixWorldInverse;for(let m=0,E=h.length;m<E;m++){const S=h[m];if(S.isDirectionalLight){const A=r.directional[d];A.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(g),d++}else if(S.isSpotLight){const A=r.spot[p];A.position.setFromMatrixPosition(S.matrixWorld),A.position.applyMatrix4(g),A.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(g),p++}else if(S.isRectAreaLight){const A=r.rectArea[v];A.position.setFromMatrixPosition(S.matrixWorld),A.position.applyMatrix4(g),a.identity(),o.copy(S.matrixWorld),o.premultiply(g),a.extractRotation(o),A.halfWidth.set(S.width*.5,0,0),A.halfHeight.set(0,S.height*.5,0),A.halfWidth.applyMatrix4(a),A.halfHeight.applyMatrix4(a),v++}else if(S.isPointLight){const A=r.point[f];A.position.setFromMatrixPosition(S.matrixWorld),A.position.applyMatrix4(g),f++}else if(S.isHemisphereLight){const A=r.hemi[y];A.direction.setFromMatrixPosition(S.matrixWorld),A.direction.transformDirection(g),A.direction.normalize(),y++}}}return{setup:l,setupView:c,state:r}}function Iu(e,t){const n=new _0(e,t),i=[],r=[];function s(){i.length=0,r.length=0}function o(u){i.push(u)}function a(u){r.push(u)}function l(){n.setup(i)}function c(u){n.setupView(i,u)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function b0(e,t){let n=new WeakMap;function i(s,o=0){let a;return n.has(s)===!1?(a=new Iu(e,t),n.set(s,[]),n.get(s).push(a)):o>=n.get(s).length?(a=new Iu(e,t),n.get(s).push(a)):a=n.get(s)[o],a}function r(){n=new WeakMap}return{get:i,dispose:r}}function gi(e){ye.call(this),this.type="MeshDepthMaterial",this.depthPacking=cv,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}gi.prototype=Object.create(ye.prototype);gi.prototype.constructor=gi;gi.prototype.isMeshDepthMaterial=!0;gi.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function vi(e){ye.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new P,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}vi.prototype=Object.create(ye.prototype);vi.prototype.constructor=vi;vi.prototype.isMeshDistanceMaterial=!0;vi.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var w0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,M0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Df(e,t,n){let i=new Xo;const r=new J,s=new J,o=new ke,a=[],l=[],c={},h={0:at,1:ko,2:Vo},u=new bt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new J},radius:{value:4}},vertexShader:M0,fragmentShader:w0}),d=u.clone();d.defines.HORIZONTAL_PASS=1;const f=new Ue;f.setAttribute("position",new xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new lt(f,u),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=df,this.render=function(A,b,R){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||A.length===0)return;const G=e.getRenderTarget(),W=e.getActiveCubeFace(),se=e.getActiveMipmapLevel(),z=e.state;z.setBlending(kr),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let X=0,V=A.length;X<V;X++){const B=A[X],D=B.shadow;if(D===void 0){console.warn("THREE.WebGLShadowMap:",B,"has no shadow.");continue}if(D.autoUpdate===!1&&D.needsUpdate===!1)continue;r.copy(D.mapSize);const H=D.getFrameExtents();if(r.multiply(H),s.copy(D.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/H.x),r.x=s.x*H.x,D.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/H.y),r.y=s.y*H.y,D.mapSize.y=s.y)),D.map===null&&!D.isPointLightShadow&&this.type===Br){const $={minFilter:pt,magFilter:pt,format:Kt};D.map=new $t(r.x,r.y,$),D.map.texture.name=B.name+".shadowMap",D.mapPass=new $t(r.x,r.y,$),D.camera.updateProjectionMatrix()}if(D.map===null){const $={minFilter:vt,magFilter:vt,format:Kt};D.map=new $t(r.x,r.y,$),D.map.texture.name=B.name+".shadowMap",D.camera.updateProjectionMatrix()}e.setRenderTarget(D.map),e.clear();const K=D.getViewportCount();for(let $=0;$<K;$++){const oe=D.getViewport($);o.set(s.x*oe.x,s.y*oe.y,s.x*oe.z,s.y*oe.w),z.viewport(o),D.updateMatrices(B,$),i=D.getFrustum(),S(b,R,D.camera,B,this.type)}!D.isPointLightShadow&&this.type===Br&&y(D,R),D.needsUpdate=!1}v.needsUpdate=!1,e.setRenderTarget(G,W,se)};function y(A,b){const R=t.update(p);u.uniforms.shadow_pass.value=A.map.texture,u.uniforms.resolution.value=A.mapSize,u.uniforms.radius.value=A.radius,e.setRenderTarget(A.mapPass),e.clear(),e.renderBufferDirect(b,null,R,u,p,null),d.uniforms.shadow_pass.value=A.mapPass.texture,d.uniforms.resolution.value=A.mapSize,d.uniforms.radius.value=A.radius,e.setRenderTarget(A.map),e.clear(),e.renderBufferDirect(b,null,R,d,p,null)}function g(A,b,R){const G=A<<0|b<<1|R<<2;let W=a[G];return W===void 0&&(W=new gi({depthPacking:uv,morphTargets:A,skinning:b}),a[G]=W),W}function m(A,b,R){const G=A<<0|b<<1|R<<2;let W=l[G];return W===void 0&&(W=new vi({morphTargets:A,skinning:b}),l[G]=W),W}function E(A,b,R,G,W,se,z){let X=null,V=g,B=A.customDepthMaterial;if(G.isPointLight===!0&&(V=m,B=A.customDistanceMaterial),B===void 0){let D=!1;R.morphTargets===!0&&(D=b.morphAttributes&&b.morphAttributes.position&&b.morphAttributes.position.length>0);let H=!1;A.isSkinnedMesh===!0&&(R.skinning===!0?H=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",A));const K=A.isInstancedMesh===!0;X=V(D,H,K)}else X=B;if(e.localClippingEnabled&&R.clipShadows===!0&&R.clippingPlanes.length!==0){const D=X.uuid,H=R.uuid;let K=c[D];K===void 0&&(K={},c[D]=K);let $=K[H];$===void 0&&($=X.clone(),K[H]=$),X=$}return X.visible=R.visible,X.wireframe=R.wireframe,z===Br?X.side=R.shadowSide!==null?R.shadowSide:R.side:X.side=R.shadowSide!==null?R.shadowSide:h[R.side],X.clipShadows=R.clipShadows,X.clippingPlanes=R.clippingPlanes,X.clipIntersection=R.clipIntersection,X.wireframeLinewidth=R.wireframeLinewidth,X.linewidth=R.linewidth,G.isPointLight===!0&&X.isMeshDistanceMaterial===!0&&(X.referencePosition.setFromMatrixPosition(G.matrixWorld),X.nearDistance=W,X.farDistance=se),X}function S(A,b,R,G,W){if(A.visible===!1)return;if(A.layers.test(b.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&W===Br)&&(!A.frustumCulled||i.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,A.matrixWorld);const X=t.update(A),V=A.material;if(Array.isArray(V)){const B=X.groups;for(let D=0,H=B.length;D<H;D++){const K=B[D],$=V[K.materialIndex];if($&&$.visible){const oe=E(A,X,$,G,R.near,R.far,W);e.renderBufferDirect(R,null,X,oe,A,K)}}}else if(V.visible){const B=E(A,X,V,G,R.near,R.far,W);e.renderBufferDirect(R,null,X,B,A,null)}}const z=A.children;for(let X=0,V=z.length;X<V;X++)S(z[X],b,R,G,W)}}function S0(e,t,n){const i=n.isWebGL2;function r(){let M=!1;const k=new ke;let j=null;const ee=new ke(0,0,0,0);return{setMask:function(Y){j!==Y&&!M&&(e.colorMask(Y,Y,Y,Y),j=Y)},setLocked:function(Y){M=Y},setClear:function(Y,C,Q,re,ie){ie===!0&&(Y*=re,C*=re,Q*=re),k.set(Y,C,Q,re),ee.equals(k)===!1&&(e.clearColor(Y,C,Q,re),ee.copy(k))},reset:function(){M=!1,j=null,ee.set(-1,0,0,0)}}}function s(){let M=!1,k=null,j=null,ee=null;return{setTest:function(Y){Y?ue(2929):ae(2929)},setMask:function(Y){k!==Y&&!M&&(e.depthMask(Y),k=Y)},setFunc:function(Y){if(j!==Y){if(Y)switch(Y){case Xm:e.depthFunc(512);break;case Ym:e.depthFunc(519);break;case Zm:e.depthFunc(513);break;case Xa:e.depthFunc(515);break;case Jm:e.depthFunc(514);break;case Km:e.depthFunc(518);break;case $m:e.depthFunc(516);break;case Qm:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);j=Y}},setLocked:function(Y){M=Y},setClear:function(Y){ee!==Y&&(e.clearDepth(Y),ee=Y)},reset:function(){M=!1,k=null,j=null,ee=null}}}function o(){let M=!1,k=null,j=null,ee=null,Y=null,C=null,Q=null,re=null,ie=null;return{setTest:function(he){M||(he?ue(2960):ae(2960))},setMask:function(he){k!==he&&!M&&(e.stencilMask(he),k=he)},setFunc:function(he,Pe,$e){(j!==he||ee!==Pe||Y!==$e)&&(e.stencilFunc(he,Pe,$e),j=he,ee=Pe,Y=$e)},setOp:function(he,Pe,$e){(C!==he||Q!==Pe||re!==$e)&&(e.stencilOp(he,Pe,$e),C=he,Q=Pe,re=$e)},setLocked:function(he){M=he},setClear:function(he){ie!==he&&(e.clearStencil(he),ie=he)},reset:function(){M=!1,k=null,j=null,ee=null,Y=null,C=null,Q=null,re=null,ie=null}}}const a=new r,l=new s,c=new o;let h={},u=null,d=null,f=null,p=null,v=null,y=null,g=null,m=null,E=null,S=!1,A=null,b=null,R=null,G=null,W=null;const se=e.getParameter(35661);let z=!1,X=0;const V=e.getParameter(7938);V.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(V)[1]),z=X>=1):V.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(V)[1]),z=X>=2);let B=null,D={};const H=new ke,K=new ke;function $(M,k,j){const ee=new Uint8Array(4),Y=e.createTexture();e.bindTexture(M,Y),e.texParameteri(M,10241,9728),e.texParameteri(M,10240,9728);for(let C=0;C<j;C++)e.texImage2D(k+C,0,6408,1,1,0,6408,5121,ee);return Y}const oe={};oe[3553]=$(3553,3553,1),oe[34067]=$(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ue(2929),l.setFunc(Xa),de(!1),Te(Gc),ue(2884),ne(kr);function ue(M){h[M]!==!0&&(e.enable(M),h[M]=!0)}function ae(M){h[M]!==!1&&(e.disable(M),h[M]=!1)}function pe(M){return u!==M?(e.useProgram(M),u=M,!0):!1}const _e={[ki]:32774,[Fm]:32778,[Bm]:32779};if(i)_e[jc]=32775,_e[qc]=32776;else{const M=t.get("EXT_blend_minmax");M!==null&&(_e[jc]=M.MIN_EXT,_e[qc]=M.MAX_EXT)}const Ge={[Um]:0,[zm]:1,[Hm]:768,[mf]:770,[qm]:776,[Wm]:774,[km]:772,[Gm]:769,[gf]:771,[jm]:775,[Vm]:773};function ne(M,k,j,ee,Y,C,Q,re){if(M===kr){d&&(ae(3042),d=!1);return}if(d||(ue(3042),d=!0),M!==Om){if(M!==f||re!==S){if((p!==ki||g!==ki)&&(e.blendEquation(32774),p=ki,g=ki),re)switch(M){case Vr:e.blendFuncSeparate(1,771,1,771);break;case kc:e.blendFunc(1,1);break;case Vc:e.blendFuncSeparate(0,0,769,771);break;case Wc:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",M);break}else switch(M){case Vr:e.blendFuncSeparate(770,771,1,771);break;case kc:e.blendFunc(770,1);break;case Vc:e.blendFunc(0,769);break;case Wc:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",M);break}v=null,y=null,m=null,E=null,f=M,S=re}return}Y=Y||k,C=C||j,Q=Q||ee,(k!==p||Y!==g)&&(e.blendEquationSeparate(_e[k],_e[Y]),p=k,g=Y),(j!==v||ee!==y||C!==m||Q!==E)&&(e.blendFuncSeparate(Ge[j],Ge[ee],Ge[C],Ge[Q]),v=j,y=ee,m=C,E=Q),f=M,S=null}function Be(M,k){M.side===Vo?ae(2884):ue(2884);let j=M.side===at;k&&(j=!j),de(j),M.blending===Vr&&M.transparent===!1?ne(kr):ne(M.blending,M.blendEquation,M.blendSrc,M.blendDst,M.blendEquationAlpha,M.blendSrcAlpha,M.blendDstAlpha,M.premultipliedAlpha),l.setFunc(M.depthFunc),l.setTest(M.depthTest),l.setMask(M.depthWrite),a.setMask(M.colorWrite);const ee=M.stencilWrite;c.setTest(ee),ee&&(c.setMask(M.stencilWriteMask),c.setFunc(M.stencilFunc,M.stencilRef,M.stencilFuncMask),c.setOp(M.stencilFail,M.stencilZFail,M.stencilZPass)),Ie(M.polygonOffset,M.polygonOffsetFactor,M.polygonOffsetUnits)}function de(M){A!==M&&(M?e.frontFace(2304):e.frontFace(2305),A=M)}function Te(M){M!==Im?(ue(2884),M!==b&&(M===Gc?e.cullFace(1029):M===Dm?e.cullFace(1028):e.cullFace(1032))):ae(2884),b=M}function ge(M){M!==R&&(z&&e.lineWidth(M),R=M)}function Ie(M,k,j){M?(ue(32823),(G!==k||W!==j)&&(e.polygonOffset(k,j),G=k,W=j)):ae(32823)}function be(M){M?ue(3089):ae(3089)}function w(M){M===void 0&&(M=33984+se-1),B!==M&&(e.activeTexture(M),B=M)}function L(M,k){B===null&&w();let j=D[B];j===void 0&&(j={type:void 0,texture:void 0},D[B]=j),(j.type!==M||j.texture!==k)&&(e.bindTexture(M,k||oe[M]),j.type=M,j.texture=k)}function I(){const M=D[B];M!==void 0&&M.type!==void 0&&(e.bindTexture(M.type,null),M.type=void 0,M.texture=void 0)}function U(){try{e.compressedTexImage2D.apply(e,arguments)}catch(M){console.error("THREE.WebGLState:",M)}}function O(){try{e.texImage2D.apply(e,arguments)}catch(M){console.error("THREE.WebGLState:",M)}}function _(){try{e.texImage3D.apply(e,arguments)}catch(M){console.error("THREE.WebGLState:",M)}}function x(M){H.equals(M)===!1&&(e.scissor(M.x,M.y,M.z,M.w),H.copy(M))}function F(M){K.equals(M)===!1&&(e.viewport(M.x,M.y,M.z,M.w),K.copy(M))}function N(){h={},B=null,D={},u=null,d=null,f=null,p=null,v=null,y=null,g=null,m=null,E=null,S=!1,A=null,b=null,R=null,G=null,W=null,a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ue,disable:ae,useProgram:pe,setBlending:ne,setMaterial:Be,setFlipSided:de,setCullFace:Te,setLineWidth:ge,setPolygonOffset:Ie,setScissorTest:be,activeTexture:w,bindTexture:L,unbindTexture:I,compressedTexImage2D:U,texImage2D:O,texImage3D:_,scissor:x,viewport:F,reset:N}}function E0(e,t,n,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let f,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(_,x){return p?new OffscreenCanvas(_,x):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(_,x,F,N){let M=1;if((_.width>N||_.height>N)&&(M=N/Math.max(_.width,_.height)),M<1||x===!0)if(typeof HTMLImageElement<"u"&&_ instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&_ instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&_ instanceof ImageBitmap){const k=x?we.floorPowerOfTwo:Math.floor,j=k(M*_.width),ee=k(M*_.height);f===void 0&&(f=v(j,ee));const Y=F?v(j,ee):f;return Y.width=j,Y.height=ee,Y.getContext("2d").drawImage(_,0,0,j,ee),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+_.width+"x"+_.height+") to ("+j+"x"+ee+")."),Y}else return"data"in _&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+_.width+"x"+_.height+")."),_;return _}function g(_){return we.isPowerOfTwo(_.width)&&we.isPowerOfTwo(_.height)}function m(_){return a?!1:_.wrapS!==Ct||_.wrapT!==Ct||_.minFilter!==vt&&_.minFilter!==pt}function E(_,x){return _.generateMipmaps&&x&&_.minFilter!==vt&&_.minFilter!==pt}function S(_,x,F,N){e.generateMipmap(_);const M=i.get(x);M.__maxMipLevel=Math.log(Math.max(F,N))*Math.LOG2E}function A(_,x,F){if(a===!1)return x;if(_!==null){if(e[_]!==void 0)return e[_];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+_+"'")}let N=x;return x===6403&&(F===5126&&(N=33326),F===5131&&(N=33325),F===5121&&(N=33321)),x===6407&&(F===5126&&(N=34837),F===5131&&(N=34843),F===5121&&(N=32849)),x===6408&&(F===5126&&(N=34836),F===5131&&(N=34842),F===5121&&(N=32856)),(N===33325||N===33326||N===34842||N===34836)&&t.get("EXT_color_buffer_float"),N}function b(_){return _===vt||_===Zc||_===Jc?9728:9729}function R(_){const x=_.target;x.removeEventListener("dispose",R),W(x),x.isVideoTexture&&d.delete(x),o.memory.textures--}function G(_){const x=_.target;x.removeEventListener("dispose",G),se(x),o.memory.textures--}function W(_){const x=i.get(_);x.__webglInit!==void 0&&(e.deleteTexture(x.__webglTexture),i.remove(_))}function se(_){const x=i.get(_),F=i.get(_.texture);if(_){if(F.__webglTexture!==void 0&&e.deleteTexture(F.__webglTexture),_.depthTexture&&_.depthTexture.dispose(),_.isWebGLCubeRenderTarget)for(let N=0;N<6;N++)e.deleteFramebuffer(x.__webglFramebuffer[N]),x.__webglDepthbuffer&&e.deleteRenderbuffer(x.__webglDepthbuffer[N]);else e.deleteFramebuffer(x.__webglFramebuffer),x.__webglDepthbuffer&&e.deleteRenderbuffer(x.__webglDepthbuffer),x.__webglMultisampledFramebuffer&&e.deleteFramebuffer(x.__webglMultisampledFramebuffer),x.__webglColorRenderbuffer&&e.deleteRenderbuffer(x.__webglColorRenderbuffer),x.__webglDepthRenderbuffer&&e.deleteRenderbuffer(x.__webglDepthRenderbuffer);i.remove(_.texture),i.remove(_)}}let z=0;function X(){z=0}function V(){const _=z;return _>=l&&console.warn("THREE.WebGLTextures: Trying to use "+_+" texture units while this GPU supports only "+l),z+=1,_}function B(_,x){const F=i.get(_);if(_.isVideoTexture&&w(_),_.version>0&&F.__version!==_.version){const N=_.image;if(N===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(N.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{pe(F,_,x);return}}n.activeTexture(33984+x),n.bindTexture(3553,F.__webglTexture)}function D(_,x){const F=i.get(_);if(_.version>0&&F.__version!==_.version){pe(F,_,x);return}n.activeTexture(33984+x),n.bindTexture(35866,F.__webglTexture)}function H(_,x){const F=i.get(_);if(_.version>0&&F.__version!==_.version){pe(F,_,x);return}n.activeTexture(33984+x),n.bindTexture(32879,F.__webglTexture)}function K(_,x){const F=i.get(_);if(_.version>0&&F.__version!==_.version){_e(F,_,x);return}n.activeTexture(33984+x),n.bindTexture(34067,F.__webglTexture)}const $={[Ya]:10497,[Ct]:33071,[Za]:33648},oe={[vt]:9728,[Zc]:9984,[Jc]:9986,[pt]:9729,[ag]:9985,[jo]:9987};function ue(_,x,F){F?(e.texParameteri(_,10242,$[x.wrapS]),e.texParameteri(_,10243,$[x.wrapT]),(_===32879||_===35866)&&e.texParameteri(_,32882,$[x.wrapR]),e.texParameteri(_,10240,oe[x.magFilter]),e.texParameteri(_,10241,oe[x.minFilter])):(e.texParameteri(_,10242,33071),e.texParameteri(_,10243,33071),(_===32879||_===35866)&&e.texParameteri(_,32882,33071),(x.wrapS!==Ct||x.wrapT!==Ct)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(_,10240,b(x.magFilter)),e.texParameteri(_,10241,b(x.minFilter)),x.minFilter!==vt&&x.minFilter!==pt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const N=t.get("EXT_texture_filter_anisotropic");if(N){if(x.type===Vn&&t.get("OES_texture_float_linear")===null||x.type===_o&&(a||t.get("OES_texture_half_float_linear"))===null)return;(x.anisotropy>1||i.get(x).__currentAnisotropy)&&(e.texParameterf(_,N.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(x.anisotropy,r.getMaxAnisotropy())),i.get(x).__currentAnisotropy=x.anisotropy)}}function ae(_,x){_.__webglInit===void 0&&(_.__webglInit=!0,x.addEventListener("dispose",R),_.__webglTexture=e.createTexture(),o.memory.textures++)}function pe(_,x,F){let N=3553;x.isDataTexture2DArray&&(N=35866),x.isDataTexture3D&&(N=32879),ae(_,x),n.activeTexture(33984+F),n.bindTexture(N,_.__webglTexture),e.pixelStorei(37440,x.flipY),e.pixelStorei(37441,x.premultiplyAlpha),e.pixelStorei(3317,x.unpackAlignment);const M=m(x)&&g(x.image)===!1,k=y(x.image,M,!1,h),j=g(k)||a,ee=s.convert(x.format);let Y=s.convert(x.type),C=A(x.internalFormat,ee,Y);ue(N,x,j);let Q;const re=x.mipmaps;if(x.isDepthTexture)C=6402,a?x.type===Vn?C=36012:x.type===ho?C=33190:x.type===jr?C=35056:C=33189:x.type===Vn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),x.format===er&&C===6402&&x.type!==xo&&x.type!==ho&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),x.type=xo,Y=s.convert(x.type)),x.format===ns&&C===6402&&(C=34041,x.type!==jr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),x.type=jr,Y=s.convert(x.type))),n.texImage2D(3553,0,C,k.width,k.height,0,ee,Y,null);else if(x.isDataTexture)if(re.length>0&&j){for(let ie=0,he=re.length;ie<he;ie++)Q=re[ie],n.texImage2D(3553,ie,C,Q.width,Q.height,0,ee,Y,Q.data);x.generateMipmaps=!1,_.__maxMipLevel=re.length-1}else n.texImage2D(3553,0,C,k.width,k.height,0,ee,Y,k.data),_.__maxMipLevel=0;else if(x.isCompressedTexture){for(let ie=0,he=re.length;ie<he;ie++)Q=re[ie],x.format!==Kt&&x.format!==di?ee!==null?n.compressedTexImage2D(3553,ie,C,Q.width,Q.height,0,Q.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,ie,C,Q.width,Q.height,0,ee,Y,Q.data);_.__maxMipLevel=re.length-1}else if(x.isDataTexture2DArray)n.texImage3D(35866,0,C,k.width,k.height,k.depth,0,ee,Y,k.data),_.__maxMipLevel=0;else if(x.isDataTexture3D)n.texImage3D(32879,0,C,k.width,k.height,k.depth,0,ee,Y,k.data),_.__maxMipLevel=0;else if(re.length>0&&j){for(let ie=0,he=re.length;ie<he;ie++)Q=re[ie],n.texImage2D(3553,ie,C,ee,Y,Q);x.generateMipmaps=!1,_.__maxMipLevel=re.length-1}else n.texImage2D(3553,0,C,ee,Y,k),_.__maxMipLevel=0;E(x,j)&&S(N,x,k.width,k.height),_.__version=x.version,x.onUpdate&&x.onUpdate(x)}function _e(_,x,F){if(x.image.length!==6)return;ae(_,x),n.activeTexture(33984+F),n.bindTexture(34067,_.__webglTexture),e.pixelStorei(37440,x.flipY);const N=x&&(x.isCompressedTexture||x.image[0].isCompressedTexture),M=x.image[0]&&x.image[0].isDataTexture,k=[];for(let ie=0;ie<6;ie++)!N&&!M?k[ie]=y(x.image[ie],!1,!0,c):k[ie]=M?x.image[ie].image:x.image[ie];const j=k[0],ee=g(j)||a,Y=s.convert(x.format),C=s.convert(x.type),Q=A(x.internalFormat,Y,C);ue(34067,x,ee);let re;if(N){for(let ie=0;ie<6;ie++){re=k[ie].mipmaps;for(let he=0;he<re.length;he++){const Pe=re[he];x.format!==Kt&&x.format!==di?Y!==null?n.compressedTexImage2D(34069+ie,he,Q,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+ie,he,Q,Pe.width,Pe.height,0,Y,C,Pe.data)}}_.__maxMipLevel=re.length-1}else{re=x.mipmaps;for(let ie=0;ie<6;ie++)if(M){n.texImage2D(34069+ie,0,Q,k[ie].width,k[ie].height,0,Y,C,k[ie].data);for(let he=0;he<re.length;he++){const $e=re[he].image[ie].image;n.texImage2D(34069+ie,he+1,Q,$e.width,$e.height,0,Y,C,$e.data)}}else{n.texImage2D(34069+ie,0,Q,Y,C,k[ie]);for(let he=0;he<re.length;he++){const Pe=re[he];n.texImage2D(34069+ie,he+1,Q,Y,C,Pe.image[ie])}}_.__maxMipLevel=re.length}E(x,ee)&&S(34067,x,j.width,j.height),_.__version=x.version,x.onUpdate&&x.onUpdate(x)}function Ge(_,x,F,N){const M=s.convert(x.texture.format),k=s.convert(x.texture.type),j=A(x.texture.internalFormat,M,k);n.texImage2D(N,0,j,x.width,x.height,0,M,k,null),e.bindFramebuffer(36160,_),e.framebufferTexture2D(36160,F,N,i.get(x.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function ne(_,x,F){if(e.bindRenderbuffer(36161,_),x.depthBuffer&&!x.stencilBuffer){let N=33189;if(F){const M=x.depthTexture;M&&M.isDepthTexture&&(M.type===Vn?N=36012:M.type===ho&&(N=33190));const k=be(x);e.renderbufferStorageMultisample(36161,k,N,x.width,x.height)}else e.renderbufferStorage(36161,N,x.width,x.height);e.framebufferRenderbuffer(36160,36096,36161,_)}else if(x.depthBuffer&&x.stencilBuffer){if(F){const N=be(x);e.renderbufferStorageMultisample(36161,N,35056,x.width,x.height)}else e.renderbufferStorage(36161,34041,x.width,x.height);e.framebufferRenderbuffer(36160,33306,36161,_)}else{const N=s.convert(x.texture.format),M=s.convert(x.texture.type),k=A(x.texture.internalFormat,N,M);if(F){const j=be(x);e.renderbufferStorageMultisample(36161,j,k,x.width,x.height)}else e.renderbufferStorage(36161,k,x.width,x.height)}e.bindRenderbuffer(36161,null)}function Be(_,x){if(x&&x.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,_),!(x.depthTexture&&x.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(x.depthTexture).__webglTexture||x.depthTexture.image.width!==x.width||x.depthTexture.image.height!==x.height)&&(x.depthTexture.image.width=x.width,x.depthTexture.image.height=x.height,x.depthTexture.needsUpdate=!0),B(x.depthTexture,0);const N=i.get(x.depthTexture).__webglTexture;if(x.depthTexture.format===er)e.framebufferTexture2D(36160,36096,3553,N,0);else if(x.depthTexture.format===ns)e.framebufferTexture2D(36160,33306,3553,N,0);else throw new Error("Unknown depthTexture format")}function de(_){const x=i.get(_),F=_.isWebGLCubeRenderTarget===!0;if(_.depthTexture){if(F)throw new Error("target.depthTexture not supported in Cube render targets");Be(x.__webglFramebuffer,_)}else if(F){x.__webglDepthbuffer=[];for(let N=0;N<6;N++)e.bindFramebuffer(36160,x.__webglFramebuffer[N]),x.__webglDepthbuffer[N]=e.createRenderbuffer(),ne(x.__webglDepthbuffer[N],_,!1)}else e.bindFramebuffer(36160,x.__webglFramebuffer),x.__webglDepthbuffer=e.createRenderbuffer(),ne(x.__webglDepthbuffer,_,!1);e.bindFramebuffer(36160,null)}function Te(_){const x=i.get(_),F=i.get(_.texture);_.addEventListener("dispose",G),F.__webglTexture=e.createTexture(),o.memory.textures++;const N=_.isWebGLCubeRenderTarget===!0,M=_.isWebGLMultisampleRenderTarget===!0,k=g(_)||a;if(a&&_.texture.format===di&&(_.texture.type===Vn||_.texture.type===_o)&&(_.texture.format=Kt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),N){x.__webglFramebuffer=[];for(let j=0;j<6;j++)x.__webglFramebuffer[j]=e.createFramebuffer()}else if(x.__webglFramebuffer=e.createFramebuffer(),M)if(a){x.__webglMultisampledFramebuffer=e.createFramebuffer(),x.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,x.__webglColorRenderbuffer);const j=s.convert(_.texture.format),ee=s.convert(_.texture.type),Y=A(_.texture.internalFormat,j,ee),C=be(_);e.renderbufferStorageMultisample(36161,C,Y,_.width,_.height),e.bindFramebuffer(36160,x.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,x.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),_.depthBuffer&&(x.__webglDepthRenderbuffer=e.createRenderbuffer(),ne(x.__webglDepthRenderbuffer,_,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(N){n.bindTexture(34067,F.__webglTexture),ue(34067,_.texture,k);for(let j=0;j<6;j++)Ge(x.__webglFramebuffer[j],_,36064,34069+j);E(_.texture,k)&&S(34067,_.texture,_.width,_.height),n.bindTexture(34067,null)}else n.bindTexture(3553,F.__webglTexture),ue(3553,_.texture,k),Ge(x.__webglFramebuffer,_,36064,3553),E(_.texture,k)&&S(3553,_.texture,_.width,_.height),n.bindTexture(3553,null);_.depthBuffer&&de(_)}function ge(_){const x=_.texture,F=g(_)||a;if(E(x,F)){const N=_.isWebGLCubeRenderTarget?34067:3553,M=i.get(x).__webglTexture;n.bindTexture(N,M),S(N,x,_.width,_.height),n.bindTexture(N,null)}}function Ie(_){if(_.isWebGLMultisampleRenderTarget)if(a){const x=i.get(_);e.bindFramebuffer(36008,x.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,x.__webglFramebuffer);const F=_.width,N=_.height;let M=16384;_.depthBuffer&&(M|=256),_.stencilBuffer&&(M|=1024),e.blitFramebuffer(0,0,F,N,0,0,F,N,M,9728),e.bindFramebuffer(36160,x.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function be(_){return a&&_.isWebGLMultisampleRenderTarget?Math.min(u,_.samples):0}function w(_){const x=o.render.frame;d.get(_)!==x&&(d.set(_,x),_.update())}let L=!1,I=!1;function U(_,x){_&&_.isWebGLRenderTarget&&(L===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),L=!0),_=_.texture),B(_,x)}function O(_,x){_&&_.isWebGLCubeRenderTarget&&(I===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),I=!0),_=_.texture),K(_,x)}this.allocateTextureUnit=V,this.resetTextureUnits=X,this.setTexture2D=B,this.setTexture2DArray=D,this.setTexture3D=H,this.setTextureCube=K,this.setupRenderTarget=Te,this.updateRenderTargetMipmap=ge,this.updateMultisampleRenderTarget=Ie,this.safeSetTexture2D=U,this.safeSetTextureCube=O}function T0(e,t,n){const i=n.isWebGL2;function r(s){let o;if(s===nc)return 5121;if(s===hg)return 32819;if(s===fg)return 32820;if(s===dg)return 33635;if(s===lg)return 5120;if(s===cg)return 5122;if(s===xo)return 5123;if(s===ug)return 5124;if(s===ho)return 5125;if(s===Vn)return 5126;if(s===_o)return i?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===pg)return 6406;if(s===di)return 6407;if(s===Kt)return 6408;if(s===mg)return 6409;if(s===gg)return 6410;if(s===er)return 6402;if(s===ns)return 34041;if(s===vg)return 6403;if(s===yg)return 36244;if(s===xg)return 33319;if(s===_g)return 33320;if(s===bg)return 36248;if(s===wg)return 36249;if(s===Kc||s===$c||s===Qc||s===eu)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Kc)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===$c)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Qc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===eu)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===tu||s===nu||s===iu||s===ru)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===tu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===nu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===iu)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===ru)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Mg)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===su||s===ou)&&(o=t.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===su)return o.COMPRESSED_RGB8_ETC2;if(s===ou)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===Sg||s===Eg||s===Tg||s===Ag||s===Lg||s===Cg||s===Pg||s===Rg||s===Ig||s===Dg||s===Ng||s===Og||s===Fg||s===Bg||s===zg||s===Hg||s===Gg||s===kg||s===Vg||s===Wg||s===jg||s===qg||s===Xg||s===Yg||s===Zg||s===Jg||s===Kg||s===$g)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===Ug)return o=t.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===jr)return i?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function rl(e=[]){rt.call(this),this.cameras=e}rl.prototype=Object.assign(Object.create(rt.prototype),{constructor:rl,isArrayCamera:!0});function Zi(){ve.call(this),this.type="Group"}Zi.prototype=Object.assign(Object.create(ve.prototype),{constructor:Zi,isGroup:!0});function Xr(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Xr.prototype,{constructor:Xr,getHandSpace:function(){if(this._hand===null&&(this._hand=new Zi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const t=new Zi;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new Zi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new Zi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(e,t,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(l&&e.hand){s=!0;for(let c=0;c<=window.XRHand.LITTLE_PHALANX_TIP;c++)if(e.hand[c]){const h=t.getJointPose(e.hand[c],n),u=l.joints[c];h!==null&&(u.matrix.fromArray(h.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.jointRadius=h.radius),u.visible=h!==null;const d=l.joints[window.XRHand.INDEX_PHALANX_TIP],f=l.joints[window.XRHand.THUMB_PHALANX_TIP],p=d.position.distanceTo(f.position),v=.02,y=.005;l.inputState.pinching&&p>v+y?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&p<=v-y&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),this}});function Nf(e,t){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,h=new rt;h.layers.enable(1),h.viewport=new ke;const u=new rt;u.layers.enable(2),u.viewport=new ke;const d=[h,u],f=new rl;f.layers.enable(1),f.layers.enable(2);let p=null,v=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let X=l[z];return X===void 0&&(X=new Xr,l[z]=X),X.getTargetRaySpace()},this.getControllerGrip=function(z){let X=l[z];return X===void 0&&(X=new Xr,l[z]=X),X.getGripSpace()},this.getHand=function(z){let X=l[z];return X===void 0&&(X=new Xr,l[z]=X),X.getHandSpace()};function y(z){const X=c.get(z.inputSource);X&&X.dispatchEvent({type:z.type,data:z.inputSource})}function g(){c.forEach(function(z,X){z.disconnect(X)}),c.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),se.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function m(z){s=z,se.setContext(i),se.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(z){r=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){o=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=function(z){if(i=z,i!==null){i.addEventListener("select",y),i.addEventListener("selectstart",y),i.addEventListener("selectend",y),i.addEventListener("squeeze",y),i.addEventListener("squeezestart",y),i.addEventListener("squeezeend",y),i.addEventListener("end",g);const X=t.getContextAttributes();X.xrCompatible!==!0&&t.makeXRCompatible();const V={antialias:X.antialias,alpha:X.alpha,depth:X.depth,stencil:X.stencil,framebufferScaleFactor:r},B=new XRWebGLLayer(i,t,V);i.updateRenderState({baseLayer:B}),i.requestReferenceSpace(o).then(m),i.addEventListener("inputsourceschange",E)}};function E(z){const X=i.inputSources;for(let V=0;V<l.length;V++)c.set(X[V],l[V]);for(let V=0;V<z.removed.length;V++){const B=z.removed[V],D=c.get(B);D&&(D.dispatchEvent({type:"disconnected",data:B}),c.delete(B))}for(let V=0;V<z.added.length;V++){const B=z.added[V],D=c.get(B);D&&D.dispatchEvent({type:"connected",data:B})}}const S=new P,A=new P;function b(z,X,V){S.setFromMatrixPosition(X.matrixWorld),A.setFromMatrixPosition(V.matrixWorld);const B=S.distanceTo(A),D=X.projectionMatrix.elements,H=V.projectionMatrix.elements,K=D[14]/(D[10]-1),$=D[14]/(D[10]+1),oe=(D[9]+1)/D[5],ue=(D[9]-1)/D[5],ae=(D[8]-1)/D[0],pe=(H[8]+1)/H[0],_e=K*ae,Ge=K*pe,ne=B/(-ae+pe),Be=ne*-ae;X.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(Be),z.translateZ(ne),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.copy(z.matrixWorld).invert();const de=K+ne,Te=$+ne,ge=_e-Be,Ie=Ge+(B-Be),be=oe*$/Te*de,w=ue*$/Te*de;z.projectionMatrix.makePerspective(ge,Ie,be,w,de,Te)}function R(z,X){X===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(X.matrixWorld,z.matrix),z.matrixWorldInverse.copy(z.matrixWorld).invert()}this.getCamera=function(z){f.near=u.near=h.near=z.near,f.far=u.far=h.far=z.far,(p!==f.near||v!==f.far)&&(i.updateRenderState({depthNear:f.near,depthFar:f.far}),p=f.near,v=f.far);const X=z.parent,V=f.cameras;R(f,X);for(let D=0;D<V.length;D++)R(V[D],X);z.matrixWorld.copy(f.matrixWorld);const B=z.children;for(let D=0,H=B.length;D<H;D++)B[D].updateMatrixWorld(!0);return V.length===2?b(f,h,u):f.projectionMatrix.copy(h.projectionMatrix),f};let G=null;function W(z,X){if(a=X.getViewerPose(s),a!==null){const B=a.views,D=i.renderState.baseLayer;e.setFramebuffer(D.framebuffer);let H=!1;B.length!==f.cameras.length&&(f.cameras.length=0,H=!0);for(let K=0;K<B.length;K++){const $=B[K],oe=D.getViewport($),ue=d[K];ue.matrix.fromArray($.transform.matrix),ue.projectionMatrix.fromArray($.projectionMatrix),ue.viewport.set(oe.x,oe.y,oe.width,oe.height),K===0&&f.matrix.copy(ue.matrix),H===!0&&f.cameras.push(ue)}}const V=i.inputSources;for(let B=0;B<l.length;B++){const D=l[B],H=V[B];D.update(H,X,s)}G&&G(z,X)}const se=new Ef;se.setAnimationLoop(W),this.setAnimationLoop=function(z){G=z},this.dispose=function(){}}Object.assign(Nf.prototype,en.prototype);function A0(e){function t(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,E,S){m.isMeshBasicMaterial?i(g,m):m.isMeshLambertMaterial?(i(g,m),l(g,m)):m.isMeshToonMaterial?(i(g,m),h(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),m.isMeshPhysicalMaterial?d(g,m):u(g,m)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?(i(g,m),p(g,m)):m.isMeshDistanceMaterial?(i(g,m),v(g,m)):m.isMeshNormalMaterial?(i(g,m),y(g,m)):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&s(g,m)):m.isPointsMaterial?o(g,m,E,S):m.isSpriteMaterial?a(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.specularMap&&(g.specularMap.value=m.specularMap);const E=e.get(m).envMap;if(E){g.envMap.value=E,g.flipEnvMap.value=E.isCubeTexture&&E._needsFlipEnvMap?-1:1,g.reflectivity.value=m.reflectivity,g.refractionRatio.value=m.refractionRatio;const b=e.get(E).__maxMipLevel;b!==void 0&&(g.maxMipLevel.value=b)}m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let S;m.map?S=m.map:m.specularMap?S=m.specularMap:m.displacementMap?S=m.displacementMap:m.normalMap?S=m.normalMap:m.bumpMap?S=m.bumpMap:m.roughnessMap?S=m.roughnessMap:m.metalnessMap?S=m.metalnessMap:m.alphaMap?S=m.alphaMap:m.emissiveMap?S=m.emissiveMap:m.clearcoatMap?S=m.clearcoatMap:m.clearcoatNormalMap?S=m.clearcoatNormalMap:m.clearcoatRoughnessMap&&(S=m.clearcoatRoughnessMap),S!==void 0&&(S.isWebGLRenderTarget&&(S=S.texture),S.matrixAutoUpdate===!0&&S.updateMatrix(),g.uvTransform.value.copy(S.matrix));let A;m.aoMap?A=m.aoMap:m.lightMap&&(A=m.lightMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),g.uv2Transform.value.copy(A.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function s(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function o(g,m,E,S){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*E,g.scale.value=S*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let A;m.map?A=m.map:m.alphaMap&&(A=m.alphaMap),A!==void 0&&(A.matrixAutoUpdate===!0&&A.updateMatrix(),g.uvTransform.value.copy(A.matrix))}function a(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let E;m.map?E=m.map:m.alphaMap&&(E=m.alphaMap),E!==void 0&&(E.matrixAutoUpdate===!0&&E.updateMatrix(),g.uvTransform.value.copy(E.matrix))}function l(g,m){m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap)}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===at&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===at&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===at&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===at&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function u(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===at&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===at&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m){u(g,m),g.reflectivity.value=m.reflectivity,g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.sheen&&g.sheen.value.copy(m.sheen),m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===at&&g.clearcoatNormalScale.value.negate()),g.transmission.value=m.transmission,m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===at&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===at&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function p(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function v(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}function y(g,m){m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===at&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===at&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function L0(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}function bs(e){e=e||{};const t=e.canvas!==void 0?e.canvas:L0(),n=e.context!==void 0?e.context:null,i=e.alpha!==void 0?e.alpha:!1,r=e.depth!==void 0?e.depth:!0,s=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,a=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,l=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,c=e.powerPreference!==void 0?e.powerPreference:"default",h=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1;let u=null,d=null;const f=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=ys,this.physicallyCorrectLights=!1,this.toneMapping=Wr,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let v=!1,y=null,g=0,m=0,E=null,S=null,A=-1,b=null;const R=new ke,G=new ke;let W=null,se=t.width,z=t.height,X=1,V=null,B=null;const D=new ke(0,0,se,z),H=new ke(0,0,se,z);let K=!1;const $=new Xo;let oe=!1,ue=!1;const ae=new Ee,pe=new P,_e={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ge(){return E===null?X:1}let ne=n;function Be(T,Z){for(let q=0;q<T.length;q++){const te=T[q],ce=t.getContext(te,Z);if(ce!==null)return ce}return null}try{const T={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",Pe,!1),t.addEventListener("webglcontextrestored",$e,!1),ne===null){const Z=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&Z.shift(),ne=Be(Z,T),ne===null)throw Be(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}ne.getShaderPrecisionFormat===void 0&&(ne.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}let de,Te,ge,Ie,be,w,L,I,U,O,_,x,F,N,M,k,j,ee,Y,C,Q;function re(){de=new s_(ne),Te=new n_(ne,de,e),Te.isWebGL2===!1&&(de.get("WEBGL_depth_texture"),de.get("OES_texture_float"),de.get("OES_texture_half_float"),de.get("OES_texture_half_float_linear"),de.get("OES_standard_derivatives"),de.get("OES_element_index_uint"),de.get("OES_vertex_array_object"),de.get("ANGLE_instanced_arrays")),de.get("OES_texture_float_linear"),C=new T0(ne,de,Te),ge=new S0(ne,de,Te),ge.scissor(G.copy(H).multiplyScalar(X).floor()),ge.viewport(R.copy(D).multiplyScalar(X).floor()),Ie=new l_,be=new f0,w=new E0(ne,de,ge,be,Te,C,Ie),L=new r_(p),I=new Pv(ne,Te),Q=new e_(ne,de,I,Te),U=new o_(ne,I,Ie,Q),O=new f_(ne,U,I,Ie),j=new h_(ne),M=new i_(be),_=new h0(p,L,de,Te,Q,M),x=new A0(be),F=new m0(be),N=new b0(de,Te),k=new Qx(p,L,ge,O,a),ee=new t_(ne,de,Ie,Te),Y=new a_(ne,de,Ie,Te),Ie.programs=_.programs,p.capabilities=Te,p.extensions=de,p.properties=be,p.renderLists=F,p.state=ge,p.info=Ie}re();const ie=new Nf(p,ne);this.xr=ie;const he=new Df(p,O,Te.maxTextureSize);this.shadowMap=he,this.getContext=function(){return ne},this.getContextAttributes=function(){return ne.getContextAttributes()},this.forceContextLoss=function(){const T=de.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){const T=de.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(T){T!==void 0&&(X=T,this.setSize(se,z,!1))},this.getSize=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),T=new J),T.set(se,z)},this.setSize=function(T,Z,q){if(ie.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}se=T,z=Z,t.width=Math.floor(T*X),t.height=Math.floor(Z*X),q!==!1&&(t.style.width=T+"px",t.style.height=Z+"px"),this.setViewport(0,0,T,Z)},this.getDrawingBufferSize=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),T=new J),T.set(se*X,z*X).floor()},this.setDrawingBufferSize=function(T,Z,q){se=T,z=Z,X=q,t.width=Math.floor(T*q),t.height=Math.floor(Z*q),this.setViewport(0,0,T,Z)},this.getCurrentViewport=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),T=new ke),T.copy(R)},this.getViewport=function(T){return T.copy(D)},this.setViewport=function(T,Z,q,te){T.isVector4?D.set(T.x,T.y,T.z,T.w):D.set(T,Z,q,te),ge.viewport(R.copy(D).multiplyScalar(X).floor())},this.getScissor=function(T){return T.copy(H)},this.setScissor=function(T,Z,q,te){T.isVector4?H.set(T.x,T.y,T.z,T.w):H.set(T,Z,q,te),ge.scissor(G.copy(H).multiplyScalar(X).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(T){ge.setScissorTest(K=T)},this.setOpaqueSort=function(T){V=T},this.setTransparentSort=function(T){B=T},this.getClearColor=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),T=new fe),T.copy(k.getClearColor())},this.setClearColor=function(){k.setClearColor.apply(k,arguments)},this.getClearAlpha=function(){return k.getClearAlpha()},this.setClearAlpha=function(){k.setClearAlpha.apply(k,arguments)},this.clear=function(T,Z,q){let te=0;(T===void 0||T)&&(te|=16384),(Z===void 0||Z)&&(te|=256),(q===void 0||q)&&(te|=1024),ne.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Pe,!1),t.removeEventListener("webglcontextrestored",$e,!1),F.dispose(),N.dispose(),be.dispose(),L.dispose(),O.dispose(),Q.dispose(),ie.dispose(),wr.stop()};function Pe(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function $e(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1,re()}function Ht(T){const Z=T.target;Z.removeEventListener("dispose",Ht),wt(Z)}function wt(T){We(T),be.remove(T)}function We(T){const Z=be.get(T).program;Z!==void 0&&_.releaseProgram(Z)}function Dt(T,Z){T.render(function(q){p.renderBufferImmediate(q,Z)})}this.renderBufferImmediate=function(T,Z){Q.initAttributes();const q=be.get(T);T.hasPositions&&!q.position&&(q.position=ne.createBuffer()),T.hasNormals&&!q.normal&&(q.normal=ne.createBuffer()),T.hasUvs&&!q.uv&&(q.uv=ne.createBuffer()),T.hasColors&&!q.color&&(q.color=ne.createBuffer());const te=Z.getAttributes();T.hasPositions&&(ne.bindBuffer(34962,q.position),ne.bufferData(34962,T.positionArray,35048),Q.enableAttribute(te.position),ne.vertexAttribPointer(te.position,3,5126,!1,0,0)),T.hasNormals&&(ne.bindBuffer(34962,q.normal),ne.bufferData(34962,T.normalArray,35048),Q.enableAttribute(te.normal),ne.vertexAttribPointer(te.normal,3,5126,!1,0,0)),T.hasUvs&&(ne.bindBuffer(34962,q.uv),ne.bufferData(34962,T.uvArray,35048),Q.enableAttribute(te.uv),ne.vertexAttribPointer(te.uv,2,5126,!1,0,0)),T.hasColors&&(ne.bindBuffer(34962,q.color),ne.bufferData(34962,T.colorArray,35048),Q.enableAttribute(te.color),ne.vertexAttribPointer(te.color,3,5126,!1,0,0)),Q.disableUnusedAttributes(),ne.drawArrays(4,0,T.count),T.count=0},this.renderBufferDirect=function(T,Z,q,te,ce,De){Z===null&&(Z=_e);const Ae=ce.isMesh&&ce.matrixWorld.determinant()<0,Ne=hc(T,Z,te,ce);ge.setMaterial(te,Ae);let Le=q.index;const et=q.attributes.position;if(Le===null){if(et===void 0||et.count===0)return}else if(Le.count===0)return;let Qe=1;te.wireframe===!0&&(Le=U.getWireframeAttribute(q),Qe=2),(te.morphTargets||te.morphNormals)&&j.update(ce,q,te,Ne),Q.setup(ce,te,Ne,q,Le);let Me,je=ee;Le!==null&&(Me=I.get(Le),je=Y,je.setIndex(Me));const gn=Le!==null?Le.count:et.count,qe=q.drawRange.start*Qe,ti=q.drawRange.count*Qe,nt=De!==null?De.start*Qe:0,Zo=De!==null?De.count*Qe:1/0,Mt=Math.max(qe,nt),Mr=Math.min(gn,qe+ti,nt+Zo)-1,Si=Math.max(0,Mr-Mt+1);if(Si!==0){if(ce.isMesh)te.wireframe===!0?(ge.setLineWidth(te.wireframeLinewidth*Ge()),je.setMode(1)):je.setMode(4);else if(ce.isLine){let Sr=te.linewidth;Sr===void 0&&(Sr=1),ge.setLineWidth(Sr*Ge()),ce.isLineSegments?je.setMode(1):ce.isLineLoop?je.setMode(2):je.setMode(3)}else ce.isPoints?je.setMode(0):ce.isSprite&&je.setMode(4);if(ce.isInstancedMesh)je.renderInstances(Mt,Si,ce.count);else if(q.isInstancedBufferGeometry){const Sr=Math.min(q.instanceCount,q._maxInstanceCount);je.renderInstances(Mt,Si,Sr)}else je.render(Mt,Si)}},this.compile=function(T,Z){d=N.get(T),d.init(),T.traverseVisible(function(te){te.isLight&&te.layers.test(Z.layers)&&(d.pushLight(te),te.castShadow&&d.pushShadow(te))}),d.setupLights();const q=new WeakMap;T.traverse(function(te){const ce=te.material;if(ce)if(Array.isArray(ce))for(let De=0;De<ce.length;De++){const Ae=ce[De];q.has(Ae)===!1&&(mn(Ae,T,te),q.set(Ae))}else q.has(ce)===!1&&(mn(ce,T,te),q.set(ce))})};let Mi=null;function Jf(T){ie.isPresenting||Mi&&Mi(T)}const wr=new Ef;wr.setAnimationLoop(Jf),typeof window<"u"&&wr.setContext(window),this.setAnimationLoop=function(T){Mi=T,ie.setAnimationLoop(T),T===null?wr.stop():wr.start()},this.render=function(T,Z){let q,te;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),q=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),te=arguments[3]),Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;Q.resetDefaultState(),A=-1,b=null,T.autoUpdate===!0&&T.updateMatrixWorld(),Z.parent===null&&Z.updateMatrixWorld(),ie.enabled===!0&&ie.isPresenting===!0&&(Z=ie.getCamera(Z)),T.isScene===!0&&T.onBeforeRender(p,T,Z,q||E),d=N.get(T,f.length),d.init(),f.push(d),ae.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),$.setFromProjectionMatrix(ae),ue=this.localClippingEnabled,oe=M.init(this.clippingPlanes,ue,Z),u=F.get(T,Z),u.init(),lc(T,Z,0,p.sortObjects),u.finish(),p.sortObjects===!0&&u.sort(V,B),oe===!0&&M.beginShadows();const ce=d.state.shadowsArray;he.render(ce,T,Z),d.setupLights(),d.setupLightsView(Z),oe===!0&&M.endShadows(),this.info.autoReset===!0&&this.info.reset(),q!==void 0&&this.setRenderTarget(q),k.render(u,T,Z,te);const De=u.opaque,Ae=u.transparent;De.length>0&&cc(De,T,Z),Ae.length>0&&cc(Ae,T,Z),T.isScene===!0&&T.onAfterRender(p,T,Z),E!==null&&(w.updateRenderTargetMipmap(E),w.updateMultisampleRenderTarget(E)),ge.buffers.depth.setTest(!0),ge.buffers.depth.setMask(!0),ge.buffers.color.setMask(!0),ge.setPolygonOffset(!1),f.pop(),f.length>0?d=f[f.length-1]:d=null,u=null};function lc(T,Z,q,te){if(T.visible===!1)return;if(T.layers.test(Z.layers)){if(T.isGroup)q=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(Z);else if(T.isLight)d.pushLight(T),T.castShadow&&d.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||$.intersectsSprite(T)){te&&pe.setFromMatrixPosition(T.matrixWorld).applyMatrix4(ae);const Ae=O.update(T),Ne=T.material;Ne.visible&&u.push(T,Ae,Ne,q,pe.z,null)}}else if(T.isImmediateRenderObject)te&&pe.setFromMatrixPosition(T.matrixWorld).applyMatrix4(ae),u.push(T,null,T.material,q,pe.z,null);else if((T.isMesh||T.isLine||T.isPoints)&&(T.isSkinnedMesh&&T.skeleton.frame!==Ie.render.frame&&(T.skeleton.update(),T.skeleton.frame=Ie.render.frame),!T.frustumCulled||$.intersectsObject(T))){te&&pe.setFromMatrixPosition(T.matrixWorld).applyMatrix4(ae);const Ae=O.update(T),Ne=T.material;if(Array.isArray(Ne)){const Le=Ae.groups;for(let et=0,Qe=Le.length;et<Qe;et++){const Me=Le[et],je=Ne[Me.materialIndex];je&&je.visible&&u.push(T,Ae,je,q,pe.z,Me)}}else Ne.visible&&u.push(T,Ae,Ne,q,pe.z,null)}}const De=T.children;for(let Ae=0,Ne=De.length;Ae<Ne;Ae++)lc(De[Ae],Z,q,te)}function cc(T,Z,q){const te=Z.isScene===!0?Z.overrideMaterial:null;for(let ce=0,De=T.length;ce<De;ce++){const Ae=T[ce],Ne=Ae.object,Le=Ae.geometry,et=te===null?Ae.material:te,Qe=Ae.group;if(q.isArrayCamera){const Me=q.cameras;for(let je=0,gn=Me.length;je<gn;je++){const qe=Me[je];Ne.layers.test(qe.layers)&&(ge.viewport(R.copy(qe.viewport)),d.setupLightsView(qe),uc(Ne,Z,qe,Le,et,Qe))}}else uc(Ne,Z,q,Le,et,Qe)}}function uc(T,Z,q,te,ce,De){if(T.onBeforeRender(p,Z,q,te,ce,De),T.modelViewMatrix.multiplyMatrices(q.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),T.isImmediateRenderObject){const Ae=hc(q,Z,ce,T);ge.setMaterial(ce),Q.reset(),Dt(T,Ae)}else p.renderBufferDirect(q,Z,te,ce,T,De);T.onAfterRender(p,Z,q,te,ce,De)}function mn(T,Z,q){Z.isScene!==!0&&(Z=_e);const te=be.get(T),ce=d.state.lights,De=d.state.shadowsArray,Ae=ce.state.version,Ne=_.getParameters(T,ce.state,De,Z,q),Le=_.getProgramCacheKey(Ne);let et=te.program,Qe=!0;if(et===void 0)T.addEventListener("dispose",Ht);else if(et.cacheKey!==Le)We(T);else if(te.lightsStateVersion!==Ae)Qe=!1;else if(Ne.shaderID!==void 0){const qe=T.isMeshStandardMaterial?Z.environment:null;te.envMap=L.get(T.envMap||qe);return}else Qe=!1;Qe&&(Ne.uniforms=_.getUniforms(T),T.onBeforeCompile(Ne,p),et=_.acquireProgram(Ne,Le),te.program=et,te.uniforms=Ne.uniforms,te.outputEncoding=Ne.outputEncoding);const Me=te.uniforms;(!T.isShaderMaterial&&!T.isRawShaderMaterial||T.clipping===!0)&&(te.numClippingPlanes=M.numPlanes,te.numIntersection=M.numIntersection,Me.clippingPlanes=M.uniform),te.environment=T.isMeshStandardMaterial?Z.environment:null,te.fog=Z.fog,te.envMap=L.get(T.envMap||te.environment),te.needsLights=$f(T),te.lightsStateVersion=Ae,te.needsLights&&(Me.ambientLightColor.value=ce.state.ambient,Me.lightProbe.value=ce.state.probe,Me.directionalLights.value=ce.state.directional,Me.directionalLightShadows.value=ce.state.directionalShadow,Me.spotLights.value=ce.state.spot,Me.spotLightShadows.value=ce.state.spotShadow,Me.rectAreaLights.value=ce.state.rectArea,Me.ltc_1.value=ce.state.rectAreaLTC1,Me.ltc_2.value=ce.state.rectAreaLTC2,Me.pointLights.value=ce.state.point,Me.pointLightShadows.value=ce.state.pointShadow,Me.hemisphereLights.value=ce.state.hemi,Me.directionalShadowMap.value=ce.state.directionalShadowMap,Me.directionalShadowMatrix.value=ce.state.directionalShadowMatrix,Me.spotShadowMap.value=ce.state.spotShadowMap,Me.spotShadowMatrix.value=ce.state.spotShadowMatrix,Me.pointShadowMap.value=ce.state.pointShadowMap,Me.pointShadowMatrix.value=ce.state.pointShadowMatrix);const je=te.program.getUniforms(),gn=Xn.seqWithValue(je.seq,Me);te.uniformsList=gn}function hc(T,Z,q,te){Z.isScene!==!0&&(Z=_e),w.resetTextureUnits();const ce=Z.fog,De=q.isMeshStandardMaterial?Z.environment:null,Ae=E===null?p.outputEncoding:E.texture.encoding,Ne=L.get(q.envMap||De),Le=be.get(q),et=d.state.lights;if(oe===!0&&(ue===!0||T!==b)){const nt=T===b&&q.id===A;M.setState(q,T,nt)}q.version===Le.__version?(q.fog&&Le.fog!==ce||Le.environment!==De||Le.needsLights&&Le.lightsStateVersion!==et.state.version||Le.numClippingPlanes!==void 0&&(Le.numClippingPlanes!==M.numPlanes||Le.numIntersection!==M.numIntersection)||Le.outputEncoding!==Ae||Le.envMap!==Ne)&&mn(q,Z,te):(mn(q,Z,te),Le.__version=q.version);let Qe=!1,Me=!1,je=!1;const gn=Le.program,qe=gn.getUniforms(),ti=Le.uniforms;if(ge.useProgram(gn.program)&&(Qe=!0,Me=!0,je=!0),q.id!==A&&(A=q.id,Me=!0),Qe||b!==T){if(qe.setValue(ne,"projectionMatrix",T.projectionMatrix),Te.logarithmicDepthBuffer&&qe.setValue(ne,"logDepthBufFC",2/(Math.log(T.far+1)/Math.LN2)),b!==T&&(b=T,Me=!0,je=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const nt=qe.map.cameraPosition;nt!==void 0&&nt.setValue(ne,pe.setFromMatrixPosition(T.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&qe.setValue(ne,"isOrthographic",T.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||q.skinning)&&qe.setValue(ne,"viewMatrix",T.matrixWorldInverse)}if(q.skinning){qe.setOptional(ne,te,"bindMatrix"),qe.setOptional(ne,te,"bindMatrixInverse");const nt=te.skeleton;if(nt){const Zo=nt.bones;if(Te.floatVertexTextures){if(nt.boneTexture===null){let Mt=Math.sqrt(Zo.length*4);Mt=we.ceilPowerOfTwo(Mt),Mt=Math.max(Mt,4);const Mr=new Float32Array(Mt*Mt*4);Mr.set(nt.boneMatrices);const Si=new ar(Mr,Mt,Mt,Kt,Vn);nt.boneMatrices=Mr,nt.boneTexture=Si,nt.boneTextureSize=Mt}qe.setValue(ne,"boneTexture",nt.boneTexture,w),qe.setValue(ne,"boneTextureSize",nt.boneTextureSize)}else qe.setOptional(ne,nt,"boneMatrices")}}return(Me||Le.receiveShadow!==te.receiveShadow)&&(Le.receiveShadow=te.receiveShadow,qe.setValue(ne,"receiveShadow",te.receiveShadow)),Me&&(qe.setValue(ne,"toneMappingExposure",p.toneMappingExposure),Le.needsLights&&Kf(ti,je),ce&&q.fog&&x.refreshFogUniforms(ti,ce),x.refreshMaterialUniforms(ti,q,X,z),Xn.upload(ne,Le.uniformsList,ti,w)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(Xn.upload(ne,Le.uniformsList,ti,w),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&qe.setValue(ne,"center",te.center),qe.setValue(ne,"modelViewMatrix",te.modelViewMatrix),qe.setValue(ne,"normalMatrix",te.normalMatrix),qe.setValue(ne,"modelMatrix",te.matrixWorld),gn}function Kf(T,Z){T.ambientLightColor.needsUpdate=Z,T.lightProbe.needsUpdate=Z,T.directionalLights.needsUpdate=Z,T.directionalLightShadows.needsUpdate=Z,T.pointLights.needsUpdate=Z,T.pointLightShadows.needsUpdate=Z,T.spotLights.needsUpdate=Z,T.spotLightShadows.needsUpdate=Z,T.rectAreaLights.needsUpdate=Z,T.hemisphereLights.needsUpdate=Z}function $f(T){return T.isMeshLambertMaterial||T.isMeshToonMaterial||T.isMeshPhongMaterial||T.isMeshStandardMaterial||T.isShadowMaterial||T.isShaderMaterial&&T.lights===!0}this.setFramebuffer=function(T){y!==T&&E===null&&ne.bindFramebuffer(36160,T),y=T},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return m},this.getRenderList=function(){return u},this.setRenderList=function(T){u=T},this.getRenderTarget=function(){return E},this.setRenderTarget=function(T,Z=0,q=0){E=T,g=Z,m=q,T&&be.get(T).__webglFramebuffer===void 0&&w.setupRenderTarget(T);let te=y,ce=!1;if(T){const De=be.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(te=De[Z],ce=!0):T.isWebGLMultisampleRenderTarget?te=be.get(T).__webglMultisampledFramebuffer:te=De,R.copy(T.viewport),G.copy(T.scissor),W=T.scissorTest}else R.copy(D).multiplyScalar(X).floor(),G.copy(H).multiplyScalar(X).floor(),W=K;if(S!==te&&(ne.bindFramebuffer(36160,te),S=te),ge.viewport(R),ge.scissor(G),ge.setScissorTest(W),ce){const De=be.get(T.texture);ne.framebufferTexture2D(36160,36064,34069+Z,De.__webglTexture,q)}},this.readRenderTargetPixels=function(T,Z,q,te,ce,De,Ae){if(!(T&&T.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ne=be.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Ae!==void 0&&(Ne=Ne[Ae]),Ne){let Le=!1;Ne!==S&&(ne.bindFramebuffer(36160,Ne),Le=!0);try{const et=T.texture,Qe=et.format,Me=et.type;if(Qe!==Kt&&C.convert(Qe)!==ne.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Me!==nc&&C.convert(Me)!==ne.getParameter(35738)&&!(Me===Vn&&(Te.isWebGL2||de.get("OES_texture_float")||de.get("WEBGL_color_buffer_float")))&&!(Me===_o&&(Te.isWebGL2?de.get("EXT_color_buffer_float"):de.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne.checkFramebufferStatus(36160)===36053?Z>=0&&Z<=T.width-te&&q>=0&&q<=T.height-ce&&ne.readPixels(Z,q,te,ce,C.convert(Qe),C.convert(Me),De):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Le&&ne.bindFramebuffer(36160,S)}}},this.copyFramebufferToTexture=function(T,Z,q=0){const te=Math.pow(2,-q),ce=Math.floor(Z.image.width*te),De=Math.floor(Z.image.height*te),Ae=C.convert(Z.format);w.setTexture2D(Z,0),ne.copyTexImage2D(3553,q,Ae,T.x,T.y,ce,De,0),ge.unbindTexture()},this.copyTextureToTexture=function(T,Z,q,te=0){const ce=Z.image.width,De=Z.image.height,Ae=C.convert(q.format),Ne=C.convert(q.type);w.setTexture2D(q,0),ne.pixelStorei(37440,q.flipY),ne.pixelStorei(37441,q.premultiplyAlpha),ne.pixelStorei(3317,q.unpackAlignment),Z.isDataTexture?ne.texSubImage2D(3553,te,T.x,T.y,ce,De,Ae,Ne,Z.image.data):Z.isCompressedTexture?ne.compressedTexSubImage2D(3553,te,T.x,T.y,Z.mipmaps[0].width,Z.mipmaps[0].height,Ae,Z.mipmaps[0].data):ne.texSubImage2D(3553,te,T.x,T.y,Ae,Ne,Z.image),te===0&&q.generateMipmaps&&ne.generateMipmap(3553),ge.unbindTexture()},this.initTexture=function(T){w.setTexture2D(T,0),ge.unbindTexture()},this.resetState=function(){ge.reset(),Q.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Du(e){bs.call(this,e)}Du.prototype=Object.assign(Object.create(bs.prototype),{constructor:Du,isWebGL1Renderer:!0});class rc{constructor(t,n){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new fe(t),this.density=n!==void 0?n:25e-5}clone(){return new rc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Of extends ve{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,n){return super.copy(t,n),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const n=super.toJSON(t);return this.background!==null&&(n.object.background=this.background.toJSON(t)),this.environment!==null&&(n.object.environment=this.environment.toJSON(t)),this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}function Nt(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=qo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=we.generateUUID()}Object.defineProperty(Nt.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Nt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=we.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new Nt(t,this.stride);return n.setUsage(this.usage),n},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=we.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const ai=new P;function yi(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}Object.defineProperties(yi.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}});Object.assign(yi.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)ai.x=this.getX(t),ai.y=this.getY(t),ai.z=this.getZ(t),ai.applyMatrix4(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this},clone:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new xe(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new yi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function xi(e){ye.call(this),this.type="SpriteMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}xi.prototype=Object.create(ye.prototype);xi.prototype.constructor=xi;xi.prototype.isSpriteMaterial=!0;xi.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let Ui;const Rr=new P,zi=new P,Hi=new P,Gi=new J,Ir=new J,Ff=new Ee,Ws=new P,Dr=new P,js=new P,Nu=new J,Aa=new J,Ou=new J;function Fu(e){if(ve.call(this),this.type="Sprite",Ui===void 0){Ui=new Ue;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Nt(t,5);Ui.setIndex([0,1,2,0,2,3]),Ui.setAttribute("position",new yi(n,3,0,!1)),Ui.setAttribute("uv",new yi(n,2,3,!1))}this.geometry=Ui,this.material=e!==void 0?e:new xi,this.center=new J(.5,.5)}Fu.prototype=Object.assign(Object.create(ve.prototype),{constructor:Fu,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),zi.setFromMatrixScale(this.matrixWorld),Ff.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Hi.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&zi.multiplyScalar(-Hi.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;qs(Ws.set(-.5,-.5,0),Hi,s,zi,i,r),qs(Dr.set(.5,-.5,0),Hi,s,zi,i,r),qs(js.set(.5,.5,0),Hi,s,zi,i,r),Nu.set(0,0),Aa.set(1,0),Ou.set(1,1);let o=e.ray.intersectTriangle(Ws,Dr,js,!1,Rr);if(o===null&&(qs(Dr.set(-.5,.5,0),Hi,s,zi,i,r),Aa.set(0,1),o=e.ray.intersectTriangle(Ws,js,Dr,!1,Rr),o===null))return;const a=e.ray.origin.distanceTo(Rr);a<e.near||a>e.far||t.push({distance:a,point:Rr.clone(),uv:dt.getUV(Rr,Ws,Dr,js,Nu,Aa,Ou,new J),face:null,object:this})},copy:function(e){return ve.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}});function qs(e,t,n,i,r,s){Gi.subVectors(e,n).addScalar(.5).multiply(i),r!==void 0?(Ir.x=s*Gi.x-r*Gi.y,Ir.y=r*Gi.x+s*Gi.y):Ir.copy(Gi),e.copy(t),e.x+=Ir.x,e.y+=Ir.y,e.applyMatrix4(Ff)}const Xs=new P,Bu=new P;function sl(){ve.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}sl.prototype=Object.assign(Object.create(ve.prototype),{constructor:sl,isLOD:!0,copy:function(e){ve.prototype.copy.call(this,e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){if(this.levels.length>0){Xs.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Xs);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){Xs.setFromMatrixPosition(e.matrixWorld),Bu.setFromMatrixPosition(this.matrixWorld);const n=Xs.distanceTo(Bu)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}},toJSON:function(e){const t=ve.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];t.object.levels.push({object:s.object.uuid,distance:s.distance})}return t}});const Uu=new P,zu=new ke,Hu=new ke,C0=new P,Gu=new Ee;function ol(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),lt.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ee,this.bindMatrixInverse=new Ee}ol.prototype=Object.assign(Object.create(lt.prototype),{constructor:ol,isSkinnedMesh:!0,copy:function(e){return lt.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new ke,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){lt.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(e,t){const n=this.skeleton,i=this.geometry;zu.fromBufferAttribute(i.attributes.skinIndex,e),Hu.fromBufferAttribute(i.attributes.skinWeight,e),Uu.fromBufferAttribute(i.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const s=Hu.getComponent(r);if(s!==0){const o=zu.getComponent(r);Gu.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(C0.copy(Uu).applyMatrix4(Gu),s)}}return t.applyMatrix4(this.bindMatrixInverse)}});function al(){ve.call(this),this.type="Bone"}al.prototype=Object.assign(Object.create(ve.prototype),{constructor:al,isBone:!0});const ku=new Ee,P0=new Ee;function ll(e=[],t=[]){this.uuid=we.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(ll.prototype,{init:function(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ee)}},calculateInverses:function(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ee;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const o=e[r]?e[r].matrixWorld:P0;ku.multiplyMatrices(o,t[r]),ku.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new ll(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let s=t[r];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new al),this.bones.push(s),this.boneInverses.push(new Ee().fromArray(e.boneInverses[n]))}return this.init(),this},toJSON:function(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const s=t[i];e.bones.push(s.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}});const Vu=new Ee,Wu=new Ee,Ys=[],Nr=new lt;function ju(e,t,n){lt.call(this,e,t),this.instanceMatrix=new xe(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}ju.prototype=Object.assign(Object.create(lt.prototype),{constructor:ju,isInstancedMesh:!0,copy:function(e){return lt.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,e*3)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){const n=this.matrixWorld,i=this.count;if(Nr.geometry=this.geometry,Nr.material=this.material,Nr.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Vu),Wu.multiplyMatrices(n,Vu),Nr.matrixWorld=Wu,Nr.raycast(e,Ys);for(let s=0,o=Ys.length;s<o;s++){const a=Ys[s];a.instanceId=r,a.object=this,t.push(a)}Ys.length=0}},setColorAt:function(e,t){this.instanceColor===null&&(this.instanceColor=new xe(new Float32Array(this.count*3),3)),t.toArray(this.instanceColor.array,e*3)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Ut(e){ye.call(this),this.type="LineBasicMaterial",this.color=new fe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}Ut.prototype=Object.create(ye.prototype);Ut.prototype.constructor=Ut;Ut.prototype.isLineBasicMaterial=!0;Ut.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const qu=new P,Xu=new P,Yu=new Ee,Zs=new xs,Js=new ei;function lr(e=new Ue,t=new Ut){ve.call(this),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}lr.prototype=Object.assign(Object.create(ve.prototype),{constructor:lr,isLine:!0,copy:function(e){return ve.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)qu.fromBufferAttribute(t,i-1),Xu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=qu.distanceTo(Xu);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;n[0]=0;for(let i=1,r=t.length;i<r;i++)n[i]=n[i-1],n[i]+=t[i-1].distanceTo(t[i])}return this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Js.copy(n.boundingSphere),Js.applyMatrix4(i),Js.radius+=r,e.ray.intersectsSphere(Js)===!1)return;Yu.copy(i).invert(),Zs.copy(e.ray).applyMatrix4(Yu);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new P,l=new P,c=new P,h=new P,u=this.isLineSegments?2:1;if(n.isBufferGeometry){const d=n.index,p=n.attributes.position;if(d!==null){const v=d.array;for(let y=0,g=v.length-1;y<g;y+=u){const m=v[y],E=v[y+1];if(a.fromBufferAttribute(p,m),l.fromBufferAttribute(p,E),Zs.distanceSqToSegment(a,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(h);A<e.near||A>e.far||t.push({distance:A,point:c.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(let v=0,y=p.count-1;v<y;v+=u){if(a.fromBufferAttribute(p,v),l.fromBufferAttribute(p,v+1),Zs.distanceSqToSegment(a,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const m=e.ray.origin.distanceTo(h);m<e.near||m>e.far||t.push({distance:m,point:c.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const d=n.vertices,f=d.length;for(let p=0;p<f-1;p+=u){if(Zs.distanceSqToSegment(d[p],d[p+1],h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const y=e.ray.origin.distanceTo(h);y<e.near||y>e.far||t.push({distance:y,point:c.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Ks=new P,$s=new P;function So(e,t){lr.call(this,e,t),this.type="LineSegments"}So.prototype=Object.assign(Object.create(lr.prototype),{constructor:So,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Ks.fromBufferAttribute(t,i),$s.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ks.distanceTo($s);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;for(let i=0,r=t.length;i<r;i+=2)Ks.copy(t[i]),$s.copy(t[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ks.distanceTo($s)}return this}});function Zu(e,t){lr.call(this,e,t),this.type="LineLoop"}Zu.prototype=Object.assign(Object.create(lr.prototype),{constructor:Zu,isLineLoop:!0});function _i(e){ye.call(this),this.type="PointsMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}_i.prototype=Object.create(ye.prototype);_i.prototype.constructor=_i;_i.prototype.isPointsMaterial=!0;_i.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const Ju=new Ee,cl=new xs,Qs=new ei,eo=new P;function Ku(e=new Ue,t=new _i){ve.call(this),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}Ku.prototype=Object.assign(Object.create(ve.prototype),{constructor:Ku,isPoints:!0,copy:function(e){return ve.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Qs.copy(n.boundingSphere),Qs.applyMatrix4(i),Qs.radius+=r,e.ray.intersectsSphere(Qs)===!1)return;Ju.copy(i).invert(),cl.copy(e.ray).applyMatrix4(Ju);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,c=n.attributes.position;if(a!==null){const h=a.array;for(let u=0,d=h.length;u<d;u++){const f=h[u];eo.fromBufferAttribute(c,f),La(eo,f,o,i,e,t,this)}}else for(let h=0,u=c.count;h<u;h++)eo.fromBufferAttribute(c,h),La(eo,h,o,i,e,t,this)}else{const a=n.vertices;for(let l=0,c=a.length;l<c;l++)La(a[l],l,o,i,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function La(e,t,n,i,r,s,o){const a=cl.distanceSqToPoint(e);if(a<n){const l=new P;cl.closestPointToPoint(e,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,object:o})}}function $u(e,t,n,i,r,s,o,a,l){Ve.call(this,e,t,n,i,r,s,o,a,l),this.format=o!==void 0?o:di,this.minFilter=s!==void 0?s:pt,this.magFilter=r!==void 0?r:pt,this.generateMipmaps=!1;const c=this;function h(){c.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}$u.prototype=Object.assign(Object.create(Ve.prototype),{constructor:$u,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function ls(e,t,n,i,r,s,o,a,l,c,h,u){Ve.call(this,null,s,o,a,l,c,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}ls.prototype=Object.create(Ve.prototype);ls.prototype.constructor=ls;ls.prototype.isCompressedTexture=!0;function Eo(e,t,n,i,r,s,o,a,l){Ve.call(this,e,t,n,i,r,s,o,a,l),this.needsUpdate=!0}Eo.prototype=Object.create(Ve.prototype);Eo.prototype.constructor=Eo;Eo.prototype.isCanvasTexture=!0;function To(e,t,n,i,r,s,o,a,l,c){if(c=c!==void 0?c:er,c!==er&&c!==ns)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===er&&(n=xo),n===void 0&&c===ns&&(n=jr),Ve.call(this,null,i,r,s,o,a,c,n,l),this.image={width:e,height:t},this.magFilter=o!==void 0?o:vt,this.minFilter=a!==void 0?a:vt,this.flipY=!1,this.generateMipmaps=!1}To.prototype=Object.create(Ve.prototype);To.prototype.constructor=To;To.prototype.isDepthTexture=!0;let R0=0;const rn=new Ee,Ca=new ve,to=new P;function Ot(){Object.defineProperty(this,"id",{value:R0+=2}),this.uuid=we.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Ot.prototype=Object.assign(Object.create(en.prototype),{constructor:Ot,isGeometry:!0,applyMatrix4:function(e){const t=new Et().getNormalMatrix(e);for(let n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(e);for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(t).normalize();for(let s=0,o=r.vertexNormals.length;s<o;s++)r.vertexNormals[s].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return rn.makeRotationX(e),this.applyMatrix4(rn),this},rotateY:function(e){return rn.makeRotationY(e),this.applyMatrix4(rn),this},rotateZ:function(e){return rn.makeRotationZ(e),this.applyMatrix4(rn),this},translate:function(e,t,n){return rn.makeTranslation(e,t,n),this.applyMatrix4(rn),this},scale:function(e,t,n){return rn.makeScale(e,t,n),this.applyMatrix4(rn),this},lookAt:function(e){return Ca.lookAt(e),Ca.updateMatrix(),this.applyMatrix4(Ca.matrix),this},fromBufferGeometry:function(e){const t=this,n=e.index!==null?e.index:void 0,i=e.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,s=i.normal,o=i.color,a=i.uv,l=i.uv2;l!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.count;u++)t.vertices.push(new P().fromBufferAttribute(r,u)),o!==void 0&&t.colors.push(new fe().fromBufferAttribute(o,u));function c(u,d,f,p){const v=o===void 0?[]:[t.colors[u].clone(),t.colors[d].clone(),t.colors[f].clone()],y=s===void 0?[]:[new P().fromBufferAttribute(s,u),new P().fromBufferAttribute(s,d),new P().fromBufferAttribute(s,f)],g=new Ja(u,d,f,y,v,p);t.faces.push(g),a!==void 0&&t.faceVertexUvs[0].push([new J().fromBufferAttribute(a,u),new J().fromBufferAttribute(a,d),new J().fromBufferAttribute(a,f)]),l!==void 0&&t.faceVertexUvs[1].push([new J().fromBufferAttribute(l,u),new J().fromBufferAttribute(l,d),new J().fromBufferAttribute(l,f)])}const h=e.groups;if(h.length>0)for(let u=0;u<h.length;u++){const d=h[u],f=d.start,p=d.count;for(let v=f,y=f+p;v<y;v+=3)n!==void 0?c(n.getX(v),n.getX(v+1),n.getX(v+2),d.materialIndex):c(v,v+1,v+2,d.materialIndex)}else if(n!==void 0)for(let u=0;u<n.count;u+=3)c(n.getX(u),n.getX(u+1),n.getX(u+2));else for(let u=0;u<r.count;u+=3)c(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(to).negate(),this.translate(to.x,to.y,to.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,i=new Ee;return i.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const e=new P,t=new P;for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,o),t.subVectors(s,o),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e=!0){const t=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)t[n]=new P;if(e){const n=new P,i=new P;for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=this.vertices[o.a],l=this.vertices[o.b],c=this.vertices[o.c];n.subVectors(c,l),i.subVectors(a,l),n.cross(i),t[o.a].add(n),t[o.b].add(n),t[o.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)t[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=r.vertexNormals;s.length===3?(s[0].copy(t[r.a]),s[1].copy(t[r.b]),s[2].copy(t[r.c])):(s[0]=t[r.a].clone(),s[1]=t[r.b].clone(),s[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const n=this.faces[e],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,s=i.vertexNormals.length;r<s;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const e=new Ot;e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const r=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(let o=0,a=this.faces.length;o<a;o++){const l=new P,c={a:new P,b:new P,c:new P};r.push(l),s.push(c)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=i.faceNormals[r],l=i.vertexNormals[r];a.copy(o.normal),l.a.copy(o.vertexNormals[0]),l.b.copy(o.vertexNormals[1]),l.c.copy(o.vertexNormals[2])}}for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Qn),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new ei),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n=0){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let i;const r=this.vertices.length,s=this.vertices,o=e.vertices,a=this.faces,l=e.faces,c=this.colors,h=e.colors;t!==void 0&&(i=new Et().getNormalMatrix(t));for(let u=0,d=o.length;u<d;u++){const p=o[u].clone();t!==void 0&&p.applyMatrix4(t),s.push(p)}for(let u=0,d=h.length;u<d;u++)c.push(h[u].clone());for(let u=0,d=l.length;u<d;u++){const f=l[u];let p,v;const y=f.vertexNormals,g=f.vertexColors,m=new Ja(f.a+r,f.b+r,f.c+r);m.normal.copy(f.normal),i!==void 0&&m.normal.applyMatrix3(i).normalize();for(let E=0,S=y.length;E<S;E++)p=y[E].clone(),i!==void 0&&p.applyMatrix3(i).normalize(),m.vertexNormals.push(p);m.color.copy(f.color);for(let E=0,S=g.length;E<S;E++)v=g[E],m.vertexColors.push(v.clone());m.materialIndex=f.materialIndex+n,a.push(m)}for(let u=0,d=e.faceVertexUvs.length;u<d;u++){const f=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let p=0,v=f.length;p<v;p++){const y=f[p],g=[];for(let m=0,E=y.length;m<E;m++)g.push(y[m].clone());this.faceVertexUvs[u].push(g)}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(e=4){const t={},n=[],i=[],r=Math.pow(10,e);for(let a=0,l=this.vertices.length;a<l;a++){const c=this.vertices[a],h=Math.round(c.x*r)+"_"+Math.round(c.y*r)+"_"+Math.round(c.z*r);t[h]===void 0?(t[h]=a,n.push(this.vertices[a]),i[a]=n.length-1):i[a]=i[t[h]]}const s=[];for(let a=0,l=this.faces.length;a<l;a++){const c=this.faces[a];c.a=i[c.a],c.b=i[c.b],c.c=i[c.c];const h=[c.a,c.b,c.c];for(let u=0;u<3;u++)if(h[u]===h[(u+1)%3]){s.push(a);break}}for(let a=s.length-1;a>=0;a--){const l=s[a];this.faces.splice(l,1);for(let c=0,h=this.faceVertexUvs.length;c<h;c++)this.faceVertexUvs[c].splice(l,1)}const o=this.vertices.length-n.length;return this.vertices=n,o},setFromPoints:function(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const i=e[t];this.vertices.push(new P(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let a=0;a<t;a++)e[a]._id=a;function n(a,l){return a.materialIndex-l.materialIndex}e.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,o;i&&i.length===t&&(s=[]),r&&r.length===t&&(o=[]);for(let a=0;a<t;a++){const l=e[a]._id;s&&s.push(i[l]),o&&o.push(r[l])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const f=this.parameters;for(const p in f)f[p]!==void 0&&(e[p]=f[p]);return e}const t=[];for(let f=0;f<this.vertices.length;f++){const p=this.vertices[f];t.push(p.x,p.y,p.z)}const n=[],i=[],r={},s=[],o={},a=[],l={};for(let f=0;f<this.faces.length;f++){const p=this.faces[f],v=!0,y=!1,g=this.faceVertexUvs[0][f]!==void 0,m=p.normal.length()>0,E=p.vertexNormals.length>0,S=p.color.r!==1||p.color.g!==1||p.color.b!==1,A=p.vertexColors.length>0;let b=0;if(b=c(b,0,0),b=c(b,1,v),b=c(b,2,y),b=c(b,3,g),b=c(b,4,m),b=c(b,5,E),b=c(b,6,S),b=c(b,7,A),n.push(b),n.push(p.a,p.b,p.c),n.push(p.materialIndex),g){const R=this.faceVertexUvs[0][f];n.push(d(R[0]),d(R[1]),d(R[2]))}if(m&&n.push(h(p.normal)),E){const R=p.vertexNormals;n.push(h(R[0]),h(R[1]),h(R[2]))}if(S&&n.push(u(p.color)),A){const R=p.vertexColors;n.push(u(R[0]),u(R[1]),u(R[2]))}}function c(f,p,v){return v?f|1<<p:f&~(1<<p)}function h(f){const p=f.x.toString()+f.y.toString()+f.z.toString();return r[p]!==void 0||(r[p]=i.length/3,i.push(f.x,f.y,f.z)),r[p]}function u(f){const p=f.r.toString()+f.g.toString()+f.b.toString();return o[p]!==void 0||(o[p]=s.length,s.push(f.getHex())),o[p]}function d(f){const p=f.x.toString()+f.y.toString();return l[p]!==void 0||(l[p]=a.length/2,a.push(f.x,f.y)),l[p]}return e.data={},e.data.vertices=t,e.data.normals=i,s.length>0&&(e.data.colors=s),a.length>0&&(e.data.uvs=[a]),e.data.faces=n,e},clone:function(){return new Ot().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let u=0,d=t.length;u<d;u++)this.vertices.push(t[u].clone());const n=e.colors;for(let u=0,d=n.length;u<d;u++)this.colors.push(n[u].clone());const i=e.faces;for(let u=0,d=i.length;u<d;u++)this.faces.push(i[u].clone());for(let u=0,d=e.faceVertexUvs.length;u<d;u++){const f=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let p=0,v=f.length;p<v;p++){const y=f[p],g=[];for(let m=0,E=y.length;m<E;m++){const S=y[m];g.push(S.clone())}this.faceVertexUvs[u].push(g)}}const r=e.morphTargets;for(let u=0,d=r.length;u<d;u++){const f={};if(f.name=r[u].name,r[u].vertices!==void 0){f.vertices=[];for(let p=0,v=r[u].vertices.length;p<v;p++)f.vertices.push(r[u].vertices[p].clone())}if(r[u].normals!==void 0){f.normals=[];for(let p=0,v=r[u].normals.length;p<v;p++)f.normals.push(r[u].normals[p].clone())}this.morphTargets.push(f)}const s=e.morphNormals;for(let u=0,d=s.length;u<d;u++){const f={};if(s[u].vertexNormals!==void 0){f.vertexNormals=[];for(let p=0,v=s[u].vertexNormals.length;p<v;p++){const y=s[u].vertexNormals[p],g={};g.a=y.a.clone(),g.b=y.b.clone(),g.c=y.c.clone(),f.vertexNormals.push(g)}}if(s[u].faceNormals!==void 0){f.faceNormals=[];for(let p=0,v=s[u].faceNormals.length;p<v;p++)f.faceNormals.push(s[u].faceNormals[p].clone())}this.morphNormals.push(f)}const o=e.skinWeights;for(let u=0,d=o.length;u<d;u++)this.skinWeights.push(o[u].clone());const a=e.skinIndices;for(let u=0,d=a.length;u<d;u++)this.skinIndices.push(a[u].clone());const l=e.lineDistances;for(let u=0,d=l.length;u<d;u++)this.lineDistances.push(l[u]);const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});new P;new P;new P;new dt;const I0={triangulate:function(e,t,n){n=n||2;const i=t&&t.length,r=i?t[0]*n:e.length;let s=Bf(e,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,h,u,d,f;if(i&&(s=B0(e,t,s,n)),e.length>80*n){a=c=e[0],l=h=e[1];for(let p=n;p<r;p+=n)u=e[p],d=e[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?1/f:0}return cs(s,o,n,a,l,f),o}};function Bf(e,t,n,i,r){let s,o;if(r===Y0(e,t,n,i)>0)for(s=t;s<n;s+=i)o=Qu(s,e[s],e[s+1],o);else for(s=n-i;s>=t;s-=i)o=Qu(s,e[s],e[s+1],o);return o&&Yo(o,o.next)&&(hs(o),o=o.next),o}function $n(e,t){if(!e)return e;t||(t=e);let n=e,i;do if(i=!1,!n.steiner&&(Yo(n,n.next)||Ke(n.prev,n,n.next)===0)){if(hs(n),n=t=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==t);return t}function cs(e,t,n,i,r,s,o){if(!e)return;!o&&s&&k0(e,i,r,s);let a=e,l,c;for(;e.prev!==e.next;){if(l=e.prev,c=e.next,s?N0(e,i,r,s):D0(e)){t.push(l.i/n),t.push(e.i/n),t.push(c.i/n),hs(e),e=c.next,a=c.next;continue}if(e=c,e===a){o?o===1?(e=O0($n(e),t,n),cs(e,t,n,i,r,s,2)):o===2&&F0(e,t,n,i,r,s):cs($n(e),t,n,i,r,s,1);break}}}function D0(e){const t=e.prev,n=e,i=e.next;if(Ke(t,n,i)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(Ji(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Ke(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function N0(e,t,n,i){const r=e.prev,s=e,o=e.next;if(Ke(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=ul(a,l,t,n,i),d=ul(c,h,t,n,i);let f=e.prevZ,p=e.nextZ;for(;f&&f.z>=u&&p&&p.z<=d;){if(f!==e.prev&&f!==e.next&&Ji(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&Ke(f.prev,f,f.next)>=0||(f=f.prevZ,p!==e.prev&&p!==e.next&&Ji(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Ke(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;f&&f.z>=u;){if(f!==e.prev&&f!==e.next&&Ji(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&Ke(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;p&&p.z<=d;){if(p!==e.prev&&p!==e.next&&Ji(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Ke(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function O0(e,t,n){let i=e;do{const r=i.prev,s=i.next.next;!Yo(r,s)&&Uf(r,i,i.next,s)&&us(r,s)&&us(s,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(s.i/n),hs(i),hs(i.next),i=e=s),i=i.next}while(i!==e);return $n(i)}function F0(e,t,n,i,r,s){let o=e;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&j0(o,a)){let l=zf(o,a);o=$n(o,o.next),l=$n(l,l.next),cs(o,t,n,i,r,s),cs(l,t,n,i,r,s);return}a=a.next}o=o.next}while(o!==e)}function B0(e,t,n,i){const r=[];let s,o,a,l,c;for(s=0,o=t.length;s<o;s++)a=t[s]*i,l=s<o-1?t[s+1]*i:e.length,c=Bf(e,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(W0(c));for(r.sort(U0),s=0;s<r.length;s++)z0(r[s],n),n=$n(n,n.next);return n}function U0(e,t){return e.x-t.x}function z0(e,t){if(t=H0(e,t),t){const n=zf(t,e);$n(t,t.next),$n(n,n.next)}}function H0(e,t){let n=t;const i=e.x,r=e.y;let s=-1/0,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const d=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(d<=i&&d>s){if(s=d,d===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(i===s)return o;const a=o,l=o.x,c=o.y;let h=1/0,u;n=o;do i>=n.x&&n.x>=l&&i!==n.x&&Ji(r<c?i:s,r,l,c,r<c?s:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),us(n,e)&&(u<h||u===h&&(n.x>o.x||n.x===o.x&&G0(o,n)))&&(o=n,h=u)),n=n.next;while(n!==a);return o}function G0(e,t){return Ke(e.prev,e,t.prev)<0&&Ke(t.next,e,e.next)<0}function k0(e,t,n,i){let r=e;do r.z===null&&(r.z=ul(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,V0(r)}function V0(e){let t,n,i,r,s,o,a,l,c=1;do{for(n=e,e=null,s=null,o=0;n;){for(o++,i=n,a=0,t=0;t<c&&(a++,i=i.nextZ,!!i);t++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(o>1);return e}function ul(e,t,n,i,r){return e=32767*(e-n)*r,t=32767*(t-i)*r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function W0(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function Ji(e,t,n,i,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(i-a)-(n-o)*(t-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function j0(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!q0(e,t)&&(us(e,t)&&us(t,e)&&X0(e,t)&&(Ke(e.prev,e,t.prev)||Ke(e,t.prev,t))||Yo(e,t)&&Ke(e.prev,e,e.next)>0&&Ke(t.prev,t,t.next)>0)}function Ke(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Yo(e,t){return e.x===t.x&&e.y===t.y}function Uf(e,t,n,i){const r=io(Ke(e,t,n)),s=io(Ke(e,t,i)),o=io(Ke(n,i,e)),a=io(Ke(n,i,t));return!!(r!==s&&o!==a||r===0&&no(e,n,t)||s===0&&no(e,i,t)||o===0&&no(n,e,i)||a===0&&no(n,t,i))}function no(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function io(e){return e>0?1:e<0?-1:0}function q0(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Uf(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function us(e,t){return Ke(e.prev,e,e.next)<0?Ke(e,t,e.next)>=0&&Ke(e,e.prev,t)>=0:Ke(e,t,e.prev)<0||Ke(e,e.next,t)<0}function X0(e,t){let n=e,i=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}function zf(e,t){const n=new hl(e.i,e.x,e.y),i=new hl(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Qu(e,t,n,i){const r=new hl(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function hs(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function hl(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Y0(e,t,n,i){let r=0;for(let s=t,o=n-i;s<n;s+=i)r+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return r}const Yn={area:function(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5},isClockWise:function(e){return Yn.area(e)<0},triangulateShape:function(e,t){const n=[],i=[],r=[];eh(e),th(n,e);let s=e.length;t.forEach(eh);for(let a=0;a<t.length;a++)i.push(s),s+=t[a].length,th(n,t[a]);const o=I0.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function eh(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function th(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Hf extends Ue{constructor(t,n){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:n},t=Array.isArray(t)?t:[t];const i=this,r=[],s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new Fe(r,3)),this.setAttribute("uv",new Fe(s,2)),this.computeVertexNormals();function o(a){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,h=n.steps!==void 0?n.steps:1;let u=n.depth!==void 0?n.depth:100,d=n.bevelEnabled!==void 0?n.bevelEnabled:!0,f=n.bevelThickness!==void 0?n.bevelThickness:6,p=n.bevelSize!==void 0?n.bevelSize:f-2,v=n.bevelOffset!==void 0?n.bevelOffset:0,y=n.bevelSegments!==void 0?n.bevelSegments:3;const g=n.extrudePath,m=n.UVGenerator!==void 0?n.UVGenerator:Z0;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=n.amount);let E,S=!1,A,b,R,G;g&&(E=g.getSpacedPoints(h),S=!0,d=!1,A=g.computeFrenetFrames(h,!1),b=new P,R=new P,G=new P),d||(y=0,f=0,p=0,v=0);const W=a.extractPoints(c);let se=W.shape;const z=W.holes;if(!Yn.isClockWise(se)){se=se.reverse();for(let w=0,L=z.length;w<L;w++){const I=z[w];Yn.isClockWise(I)&&(z[w]=I.reverse())}}const V=Yn.triangulateShape(se,z),B=se;for(let w=0,L=z.length;w<L;w++){const I=z[w];se=se.concat(I)}function D(w,L,I){return L||console.error("THREE.ExtrudeGeometry: vec does not exist"),L.clone().multiplyScalar(I).add(w)}const H=se.length,K=V.length;function $(w,L,I){let U,O,_;const x=w.x-L.x,F=w.y-L.y,N=I.x-w.x,M=I.y-w.y,k=x*x+F*F,j=x*M-F*N;if(Math.abs(j)>Number.EPSILON){const ee=Math.sqrt(k),Y=Math.sqrt(N*N+M*M),C=L.x-F/ee,Q=L.y+x/ee,re=I.x-M/Y,ie=I.y+N/Y,he=((re-C)*M-(ie-Q)*N)/(x*M-F*N);U=C+x*he-w.x,O=Q+F*he-w.y;const Pe=U*U+O*O;if(Pe<=2)return new J(U,O);_=Math.sqrt(Pe/2)}else{let ee=!1;x>Number.EPSILON?N>Number.EPSILON&&(ee=!0):x<-Number.EPSILON?N<-Number.EPSILON&&(ee=!0):Math.sign(F)===Math.sign(M)&&(ee=!0),ee?(U=-F,O=x,_=Math.sqrt(k)):(U=x,O=F,_=Math.sqrt(k/2))}return new J(U/_,O/_)}const oe=[];for(let w=0,L=B.length,I=L-1,U=w+1;w<L;w++,I++,U++)I===L&&(I=0),U===L&&(U=0),oe[w]=$(B[w],B[I],B[U]);const ue=[];let ae,pe=oe.concat();for(let w=0,L=z.length;w<L;w++){const I=z[w];ae=[];for(let U=0,O=I.length,_=O-1,x=U+1;U<O;U++,_++,x++)_===O&&(_=0),x===O&&(x=0),ae[U]=$(I[U],I[_],I[x]);ue.push(ae),pe=pe.concat(ae)}for(let w=0;w<y;w++){const L=w/y,I=f*Math.cos(L*Math.PI/2),U=p*Math.sin(L*Math.PI/2)+v;for(let O=0,_=B.length;O<_;O++){const x=D(B[O],oe[O],U);de(x.x,x.y,-I)}for(let O=0,_=z.length;O<_;O++){const x=z[O];ae=ue[O];for(let F=0,N=x.length;F<N;F++){const M=D(x[F],ae[F],U);de(M.x,M.y,-I)}}}const _e=p+v;for(let w=0;w<H;w++){const L=d?D(se[w],pe[w],_e):se[w];S?(R.copy(A.normals[0]).multiplyScalar(L.x),b.copy(A.binormals[0]).multiplyScalar(L.y),G.copy(E[0]).add(R).add(b),de(G.x,G.y,G.z)):de(L.x,L.y,0)}for(let w=1;w<=h;w++)for(let L=0;L<H;L++){const I=d?D(se[L],pe[L],_e):se[L];S?(R.copy(A.normals[w]).multiplyScalar(I.x),b.copy(A.binormals[w]).multiplyScalar(I.y),G.copy(E[w]).add(R).add(b),de(G.x,G.y,G.z)):de(I.x,I.y,u/h*w)}for(let w=y-1;w>=0;w--){const L=w/y,I=f*Math.cos(L*Math.PI/2),U=p*Math.sin(L*Math.PI/2)+v;for(let O=0,_=B.length;O<_;O++){const x=D(B[O],oe[O],U);de(x.x,x.y,u+I)}for(let O=0,_=z.length;O<_;O++){const x=z[O];ae=ue[O];for(let F=0,N=x.length;F<N;F++){const M=D(x[F],ae[F],U);S?de(M.x,M.y+E[h-1].y,E[h-1].x+I):de(M.x,M.y,u+I)}}}Ge(),ne();function Ge(){const w=r.length/3;if(d){let L=0,I=H*L;for(let U=0;U<K;U++){const O=V[U];Te(O[2]+I,O[1]+I,O[0]+I)}L=h+y*2,I=H*L;for(let U=0;U<K;U++){const O=V[U];Te(O[0]+I,O[1]+I,O[2]+I)}}else{for(let L=0;L<K;L++){const I=V[L];Te(I[2],I[1],I[0])}for(let L=0;L<K;L++){const I=V[L];Te(I[0]+H*h,I[1]+H*h,I[2]+H*h)}}i.addGroup(w,r.length/3-w,0)}function ne(){const w=r.length/3;let L=0;Be(B,L),L+=B.length;for(let I=0,U=z.length;I<U;I++){const O=z[I];Be(O,L),L+=O.length}i.addGroup(w,r.length/3-w,1)}function Be(w,L){let I=w.length;for(;--I>=0;){const U=I;let O=I-1;O<0&&(O=w.length-1);for(let _=0,x=h+y*2;_<x;_++){const F=H*_,N=H*(_+1),M=L+U+F,k=L+O+F,j=L+O+N,ee=L+U+N;ge(M,k,j,ee)}}}function de(w,L,I){l.push(w),l.push(L),l.push(I)}function Te(w,L,I){Ie(w),Ie(L),Ie(I);const U=r.length/3,O=m.generateTopUV(i,r,U-3,U-2,U-1);be(O[0]),be(O[1]),be(O[2])}function ge(w,L,I,U){Ie(w),Ie(L),Ie(U),Ie(L),Ie(I),Ie(U);const O=r.length/3,_=m.generateSideWallUV(i,r,O-6,O-3,O-2,O-1);be(_[0]),be(_[1]),be(_[3]),be(_[1]),be(_[2]),be(_[3])}function Ie(w){r.push(l[w*3+0]),r.push(l[w*3+1]),r.push(l[w*3+2])}function be(w){s.push(w.x),s.push(w.y)}}}toJSON(){const t=Ue.prototype.toJSON.call(this),n=this.parameters.shapes,i=this.parameters.options;return J0(n,i,t)}}const Z0={generateTopUV:function(e,t,n,i,r){const s=t[n*3],o=t[n*3+1],a=t[i*3],l=t[i*3+1],c=t[r*3],h=t[r*3+1];return[new J(s,o),new J(a,l),new J(c,h)]},generateSideWallUV:function(e,t,n,i,r,s){const o=t[n*3],a=t[n*3+1],l=t[n*3+2],c=t[i*3],h=t[i*3+1],u=t[i*3+2],d=t[r*3],f=t[r*3+1],p=t[r*3+2],v=t[s*3],y=t[s*3+1],g=t[s*3+2];return Math.abs(a-h)<.01?[new J(o,1-l),new J(c,1-u),new J(d,1-p),new J(v,1-g)]:[new J(a,1-l),new J(h,1-u),new J(f,1-p),new J(y,1-g)]}};function J0(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const s=e[i];n.shapes.push(s.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}class K0 extends Ot{constructor(t,n){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:n},this.fromBufferGeometry(new Hf(t,n)),this.mergeVertices()}toJSON(){const t=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return $0(n,i,t)}}function $0(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const s=e[i];n.shapes.push(s.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}function Ao(e,t,n){Ue.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,l=new P,c=new P,h=new P,u=new P,d=new P;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const f=t+1;for(let p=0;p<=n;p++){const v=p/n;for(let y=0;y<=t;y++){const g=y/t;e(g,v,c),r.push(c.x,c.y,c.z),g-a>=0?(e(g-a,v,h),u.subVectors(c,h)):(e(g+a,v,h),u.subVectors(h,c)),v-a>=0?(e(g,v-a,h),d.subVectors(c,h)):(e(g,v+a,h),d.subVectors(h,c)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(g,v)}}for(let p=0;p<n;p++)for(let v=0;v<t;v++){const y=p*f+v,g=p*f+v+1,m=(p+1)*f+v+1,E=(p+1)*f+v;i.push(y,g,E),i.push(g,m,E)}this.setIndex(i),this.setAttribute("position",new Fe(r,3)),this.setAttribute("normal",new Fe(s,3)),this.setAttribute("uv",new Fe(o,2))}Ao.prototype=Object.create(Ue.prototype);Ao.prototype.constructor=Ao;function fl(e,t,n){Ot.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Ao(e,t,n)),this.mergeVertices()}fl.prototype=Object.create(Ot.prototype);fl.prototype.constructor=fl;class Q0 extends Ue{constructor(t,n=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:n};const i=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let h=0;h<t.length;h++)c(t[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new Fe(r,3)),this.setAttribute("normal",new Fe(s,3)),this.setAttribute("uv",new Fe(o,2));function c(h){const u=r.length/3,d=h.extractPoints(n);let f=d.shape;const p=d.holes;Yn.isClockWise(f)===!1&&(f=f.reverse());for(let y=0,g=p.length;y<g;y++){const m=p[y];Yn.isClockWise(m)===!0&&(p[y]=m.reverse())}const v=Yn.triangulateShape(f,p);for(let y=0,g=p.length;y<g;y++){const m=p[y];f=f.concat(m)}for(let y=0,g=f.length;y<g;y++){const m=f[y];r.push(m.x,m.y,0),s.push(0,0,1),o.push(m.x,m.y)}for(let y=0,g=v.length;y<g;y++){const m=v[y],E=m[0]+u,S=m[1]+u,A=m[2]+u;i.push(E,S,A),l+=3}}}toJSON(){const t=Ue.prototype.toJSON.call(this),n=this.parameters.shapes;return eb(n,t)}}function eb(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}class tb extends Ot{constructor(t,n){super(),this.type="ShapeGeometry",typeof n=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),n=n.curveSegments),this.parameters={shapes:t,curveSegments:n},this.fromBufferGeometry(new Q0(t,n)),this.mergeVertices()}toJSON(){const t=Ot.prototype.toJSON.call(this),n=this.parameters.shapes;return nb(n,t)}}function nb(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}function cr(e){ye.call(this),this.type="ShadowMaterial",this.color=new fe(0),this.transparent=!0,this.setValues(e)}cr.prototype=Object.create(ye.prototype);cr.prototype.constructor=cr;cr.prototype.isShadowMaterial=!0;cr.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this};function fs(e){bt.call(this,e),this.type="RawShaderMaterial"}fs.prototype=Object.create(bt.prototype);fs.prototype.constructor=fs;fs.prototype.isRawShaderMaterial=!0;function Tn(e){ye.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xr,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}Tn.prototype=Object.create(ye.prototype);Tn.prototype.constructor=Tn;Tn.prototype.isMeshStandardMaterial=!0;Tn.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function bi(e){Tn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new J(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=we.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}bi.prototype=Object.create(Tn.prototype);bi.prototype.constructor=bi;bi.prototype.isMeshPhysicalMaterial=!0;bi.prototype.copy=function(e){return Tn.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new fe).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this};function wi(e){ye.call(this),this.type="MeshPhongMaterial",this.color=new fe(16777215),this.specular=new fe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xr,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Wo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}wi.prototype=Object.create(ye.prototype);wi.prototype.constructor=wi;wi.prototype.isMeshPhongMaterial=!0;wi.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function ur(e){ye.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new fe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xr,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}ur.prototype=Object.create(ye.prototype);ur.prototype.constructor=ur;ur.prototype.isMeshToonMaterial=!0;ur.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function hr(e){ye.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xr,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}hr.prototype=Object.create(ye.prototype);hr.prototype.constructor=hr;hr.prototype.isMeshNormalMaterial=!0;hr.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function fr(e){ye.call(this),this.type="MeshLambertMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Wo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}fr.prototype=Object.create(ye.prototype);fr.prototype.constructor=fr;fr.prototype.isMeshLambertMaterial=!0;fr.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function dr(e){ye.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new fe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xr,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}dr.prototype=Object.create(ye.prototype);dr.prototype.constructor=dr;dr.prototype.isMeshMatcapMaterial=!0;dr.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function pr(e){Ut.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}pr.prototype=Object.create(Ut.prototype);pr.prototype.constructor=pr;pr.prototype.isLineDashedMaterial=!0;pr.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var ib=Object.freeze({__proto__:null,ShadowMaterial:cr,SpriteMaterial:xi,RawShaderMaterial:fs,ShaderMaterial:bt,PointsMaterial:_i,MeshPhysicalMaterial:bi,MeshStandardMaterial:Tn,MeshPhongMaterial:wi,MeshToonMaterial:ur,MeshNormalMaterial:hr,MeshLambertMaterial:fr,MeshDepthMaterial:gi,MeshDistanceMaterial:vi,MeshBasicMaterial:pi,MeshMatcapMaterial:dr,LineDashedMaterial:pr,LineBasicMaterial:Ut,Material:ye});const Ze={arraySlice:function(e,t,n){return Ze.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(r,s){return e[r]-e[s]}const n=e.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(t),i},sortedArray:function(e,t,n){const i=e.length,r=new e.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*t;for(let l=0;l!==t;++l)r[o++]=e[a+l]}return r},flattenJSON:function(e,t,n,i){let r=1,s=e[0];for(;s!==void 0&&s[i]===void 0;)s=e[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(t.push(s.time),n.push.apply(n,o)),s=e[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(t.push(s.time),o.toArray(n,n.length)),s=e[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(t.push(s.time),n.push(o)),s=e[r++];while(s!==void 0)},subclip:function(e,t,n,i,r=30){const s=e.clone();s.name=t;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*r;if(!(p<n||p>=i)){u.push(c.times[f]);for(let v=0;v<h;++v)d.push(c.values[f*h+v])}}u.length!==0&&(c.times=Ze.convertArray(u,c.times.constructor),c.values=Ze.convertArray(d,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(e,t=0,n=e,i=30){i<=0&&(i=30);const r=n.tracks.length,s=t/i;for(let o=0;o<r;++o){const a=n.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=e.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(s<=a.times[0]){const g=h,m=u-h;v=Ze.arraySlice(a.values,g,m)}else if(s>=a.times[p]){const g=p*u+h,m=g+u-h;v=Ze.arraySlice(a.values,g,m)}else{const g=a.createInterpolant(),m=h,E=u-h;g.evaluate(s),v=Ze.arraySlice(g.resultBuffer,m,E)}l==="quaternion"&&new xt().fromArray(v).normalize().conjugate().toArray(v);const y=c.times.length;for(let g=0;g<y;++g){const m=g*f+d;if(l==="quaternion")xt.multiplyQuaternionsFlat(c.values,m,v,0,c.values,m);else{const E=f-d*2;for(let S=0;S<E;++S)c.values[m+S]-=v[S]}}}return e.blendMode=yf,e}};function Ft(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(Ft.prototype,{evaluate:function(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}s=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;e<t[o]?s=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let s=0;s!==i;++s)t[s]=n[r+s];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(Ft.prototype,{beforeStart_:Ft.prototype.copySampleValue_,afterEnd_:Ft.prototype.copySampleValue_});function dl(e,t,n,i){Ft.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}dl.prototype=Object.assign(Object.create(Ft.prototype),{constructor:dl,DefaultSettings_:{endingStart:Wi,endingEnd:Wi},intervalChanged_:function(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case ji:r=e,o=2*t-n;break;case wo:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case ji:s=e,a=2*n-t;break;case wo:s=1,a=n+i[1]-i[0];break;default:s=e-1,a=t}const l=(n-t)*.5,c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(a-n),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,f=(n-t)/(i-t),p=f*f,v=p*f,y=-u*v+2*u*p-u*f,g=(1+u)*v+(-1.5-2*u)*p+(-.5+u)*f+1,m=(-1-d)*v+(1.5+d)*p+.5*f,E=d*v-d*p;for(let S=0;S!==o;++S)r[S]=y*s[c+S]+g*s[l+S]+m*s[a+S]+E*s[h+S];return r}});function Lo(e,t,n,i){Ft.call(this,e,t,n,i)}Lo.prototype=Object.assign(Object.create(Ft.prototype),{constructor:Lo,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=(n-t)/(i-t),h=1-c;for(let u=0;u!==o;++u)r[u]=s[l+u]*h+s[a+u]*c;return r}});function pl(e,t,n,i){Ft.call(this,e,t,n,i)}pl.prototype=Object.assign(Object.create(Ft.prototype),{constructor:pl,interpolate_:function(e){return this.copySampleValue_(e-1)}});function mt(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ze.convertArray(t,this.TimeBufferType),this.values=Ze.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(mt,{toJSON:function(e){const t=e.constructor;let n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:Ze.convertArray(e.times,Array),values:Ze.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}});Object.assign(mt.prototype,{constructor:mt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:fo,InterpolantFactoryMethodDiscrete:function(e){return new pl(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Lo(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new dl(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case bo:t=this.InterpolantFactoryMethodDiscrete;break;case fo:t=this.InterpolantFactoryMethodLinear;break;case ra:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return bo;case this.InterpolantFactoryMethodLinear:return fo;case this.InterpolantFactoryMethodSmooth:return ra}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this},scale:function(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<e;)++r;for(;s!==-1&&n[s]>t;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=Ze.arraySlice(n,r,s),this.values=Ze.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),e=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),e=!1;break}s=a}if(i!==void 0&&Ze.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),e=!1;break}}return e},optimize:function(){const e=Ze.arraySlice(this.times),t=Ze.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ra,r=e.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const l=e[o],c=e[o+1];if(l!==c&&(o!==1||l!==l[0]))if(i)a=!0;else{const h=o*n,u=h-n,d=h+n;for(let f=0;f!==n;++f){const p=t[h+f];if(p!==t[u+f]||p!==t[d+f]){a=!0;break}}}if(a){if(o!==s){e[s]=e[o];const h=o*n,u=s*n;for(let d=0;d!==n;++d)t[u+d]=t[h+d]}++s}}if(r>0){e[s]=e[r];for(let o=r*n,a=s*n,l=0;l!==n;++l)t[a+l]=t[o+l];++s}return s!==e.length?(this.times=Ze.arraySlice(e,0,s),this.values=Ze.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this},clone:function(){const e=Ze.arraySlice(this.times,0),t=Ze.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}});function ml(e,t,n){mt.call(this,e,t,n)}ml.prototype=Object.assign(Object.create(mt.prototype),{constructor:ml,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:bo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function gl(e,t,n,i){mt.call(this,e,t,n,i)}gl.prototype=Object.assign(Object.create(mt.prototype),{constructor:gl,ValueTypeName:"color"});function ds(e,t,n,i){mt.call(this,e,t,n,i)}ds.prototype=Object.assign(Object.create(mt.prototype),{constructor:ds,ValueTypeName:"number"});function vl(e,t,n,i){Ft.call(this,e,t,n,i)}vl.prototype=Object.assign(Object.create(Ft.prototype),{constructor:vl,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-t)/(i-t);let l=e*o;for(let c=l+o;l!==c;l+=4)xt.slerpFlat(r,0,s,l-o,s,l,a);return r}});function Co(e,t,n,i){mt.call(this,e,t,n,i)}Co.prototype=Object.assign(Object.create(mt.prototype),{constructor:Co,ValueTypeName:"quaternion",DefaultInterpolation:fo,InterpolantFactoryMethodLinear:function(e){return new vl(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function yl(e,t,n,i){mt.call(this,e,t,n,i)}yl.prototype=Object.assign(Object.create(mt.prototype),{constructor:yl,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:bo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ps(e,t,n,i){mt.call(this,e,t,n,i)}ps.prototype=Object.assign(Object.create(mt.prototype),{constructor:ps,ValueTypeName:"vector"});function Xt(e,t=-1,n,i=ic){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=we.generateUUID(),this.duration<0&&this.resetDuration()}function rb(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ds;case"vector":case"vector2":case"vector3":case"vector4":return ps;case"color":return gl;case"quaternion":return Co;case"bool":case"boolean":return ml;case"string":return yl}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function sb(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=rb(e.type);if(e.times===void 0){const n=[],i=[];Ze.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Xt,{parse:function(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let s=0,o=n.length;s!==o;++s)t.push(sb(n[s]).scale(i));const r=new Xt(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r},toJSON:function(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=n.length;r!==s;++r)t.push(mt.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(e,t,n,i){const r=t.length,s=[];for(let o=0;o<r;o++){let a=[],l=[];a.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const c=Ze.getKeyframeOrder(a);a=Ze.sortedArray(a,1,c),l=Ze.sortedArray(l,1,c),!i&&a[0]===0&&(a.push(r),l.push(l[0])),s.push(new ds(".morphTargetInfluences["+t[o].name+"]",a,l).scale(1/n))}return new Xt(e,-1,s)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.name.match(r);if(c&&c.length>1){const h=c[1];let u=i[h];u||(i[h]=u=[]),u.push(l)}}const s=[];for(const o in i)s.push(Xt.CreateFromMorphTargetSequence(o,i[o],t,n));return s},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,d,f,p){if(d.length!==0){const v=[],y=[];Ze.flattenJSON(d,v,y,f),v.length!==0&&p.push(new h(u,v,y))}},i=[],r=e.name||"default",s=e.fps||30,o=e.blendMode;let a=e.length||-1;const l=e.hierarchy||[];for(let h=0;h<l.length;h++){const u=l[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const d={};let f;for(f=0;f<u.length;f++)if(u[f].morphTargets)for(let p=0;p<u[f].morphTargets.length;p++)d[u[f].morphTargets[p]]=-1;for(const p in d){const v=[],y=[];for(let g=0;g!==u[f].morphTargets.length;++g){const m=u[f];v.push(m.time),y.push(m.morphTarget===p?1:0)}i.push(new ds(".morphTargetInfluence["+p+"]",v,y))}a=d.length*(s||1)}else{const d=".bones["+t[h].name+"]";n(ps,d+".position",u,"pos",i),n(Co,d+".quaternion",u,"rot",i),n(ps,d+".scale",u,"scl",i)}}return i.length===0?null:new Xt(r,a,i,o)}});Object.assign(Xt.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new Xt(this.name,this.duration,e,this.blendMode)},toJSON:function(){return Xt.toJSON(this)}});const mr={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function ob(e,t,n){const i=this;let r=!1,s=0,o=0,a;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(c){o++,r===!1&&i.onStart!==void 0&&i.onStart(c,s,o),r=!0},this.itemEnd=function(c){s++,i.onProgress!==void 0&&i.onProgress(c,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return a?a(c):c},this.setURLModifier=function(c){return a=c,this},this.addHandler=function(c,h){return l.push(c,h),this},this.removeHandler=function(c){const h=l.indexOf(c);return h!==-1&&l.splice(h,2),this},this.getHandler=function(c){for(let h=0,u=l.length;h<u;h+=2){const d=l[h],f=l[h+1];if(d.global&&(d.lastIndex=0),d.test(c))return f}return null}}const ab=new ob;function He(e){this.manager=e!==void 0?e:ab,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(He.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const Wt={};function Qt(e){He.call(this,e)}Qt.prototype=Object.assign(Object.create(He.prototype),{constructor:Qt,load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=mr.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;if(Wt[e]!==void 0){Wt[e].push({onLoad:t,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=e.match(o);let l;if(a){const c=a[1],h=!!a[2];let u=a[3];u=decodeURIComponent(u),h&&(u=atob(u));try{let d;const f=(this.responseType||"").toLowerCase();switch(f){case"arraybuffer":case"blob":const p=new Uint8Array(u.length);for(let y=0;y<u.length;y++)p[y]=u.charCodeAt(y);f==="blob"?d=new Blob([p.buffer],{type:c}):d=p.buffer;break;case"document":d=new DOMParser().parseFromString(u,c);break;case"json":d=JSON.parse(u);break;default:d=u;break}setTimeout(function(){t&&t(d),r.manager.itemEnd(e)},0)}catch(d){setTimeout(function(){i&&i(d),r.manager.itemError(e),r.manager.itemEnd(e)},0)}}else{Wt[e]=[],Wt[e].push({onLoad:t,onProgress:n,onError:i}),l=new XMLHttpRequest,l.open("GET",e,!0),l.addEventListener("load",function(c){const h=this.response,u=Wt[e];if(delete Wt[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),mr.add(e,h);for(let d=0,f=u.length;d<f;d++){const p=u[d];p.onLoad&&p.onLoad(h)}r.manager.itemEnd(e)}else{for(let d=0,f=u.length;d<f;d++){const p=u[d];p.onError&&p.onError(c)}r.manager.itemError(e),r.manager.itemEnd(e)}},!1),l.addEventListener("progress",function(c){const h=Wt[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onProgress&&f.onProgress(c)}},!1),l.addEventListener("error",function(c){const h=Wt[e];delete Wt[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),l.addEventListener("abort",function(c){const h=Wt[e];delete Wt[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return r.manager.itemStart(e),l},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}});function nh(e){He.call(this,e)}nh.prototype=Object.assign(Object.create(He.prototype),{constructor:nh,load:function(e,t,n,i){const r=this,s=new Qt(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const i=Xt.parse(e[n]);t.push(i)}return t}});function ih(e){He.call(this,e)}ih.prototype=Object.assign(Object.create(He.prototype),{constructor:ih,load:function(e,t,n,i){const r=this,s=[],o=new ls,a=new Qt(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let l=0;function c(h){a.load(e[h],function(u){const d=r.parse(u,!0);s[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},l+=1,l===6&&(d.mipmapCount===1&&(o.minFilter=pt),o.image=s,o.format=d.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let h=0,u=e.length;h<u;++h)c(h);else a.load(e,function(h){const u=r.parse(h,!0);if(u.isCubemap){const d=u.mipmaps.length/u.mipmapCount;for(let f=0;f<d;f++){s[f]={mipmaps:[]};for(let p=0;p<u.mipmapCount;p++)s[f].mipmaps.push(u.mipmaps[f*u.mipmapCount+p]),s[f].format=u.format,s[f].width=u.width,s[f].height=u.height}o.image=s}else o.image.width=u.width,o.image.height=u.height,o.mipmaps=u.mipmaps;u.mipmapCount===1&&(o.minFilter=pt),o.format=u.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}});function ms(e){He.call(this,e)}ms.prototype=Object.assign(Object.create(He.prototype),{constructor:ms,load:function(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=mr.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),mr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(c){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}});function xl(e){He.call(this,e)}xl.prototype=Object.assign(Object.create(He.prototype),{constructor:xl,load:function(e,t,n,i){const r=new Kn,s=new ms(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(l){s.load(e[l],function(c){r.images[l]=c,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let l=0;l<e.length;++l)a(l);return r}});function rh(e){He.call(this,e)}rh.prototype=Object.assign(Object.create(He.prototype),{constructor:rh,load:function(e,t,n,i){const r=this,s=new ar,o=new Qt(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(a){const l=r.parse(a);l&&(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:Ct,s.wrapT=l.wrapT!==void 0?l.wrapT:Ct,s.magFilter=l.magFilter!==void 0?l.magFilter:pt,s.minFilter=l.minFilter!==void 0?l.minFilter:pt,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=jo),l.mipmapCount===1&&(s.minFilter=pt),s.needsUpdate=!0,t&&t(s,l))},n,i),s}});function Po(e){He.call(this,e)}Po.prototype=Object.assign(Object.create(He.prototype),{constructor:Po,load:function(e,t,n,i){const r=new Ve,s=new ms(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){r.image=o;const a=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;r.format=a?di:Kt,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}});function me(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(me.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let i=0;const r=n.length;let s;t?s=t:s=e*n[r-1];let o=0,a=r-1,l;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),l=n[i]-s,l<0)o=i+1;else if(l>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const c=n[i],u=n[i+1]-c,d=(s-c)/u;return(i+d)/(r-1)},getTangent:function(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=t||(s.isVector2?new J:new P);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new P,i=[],r=[],s=[],o=new P,a=new Ee;for(let d=0;d<=e;d++){const f=d/e;i[d]=this.getTangentAt(f,new P),i[d].normalize()}r[0]=new P,s[0]=new P;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),u<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let d=1;d<=e;d++){if(r[d]=r[d-1].clone(),s[d]=s[d-1].clone(),o.crossVectors(i[d-1],i[d]),o.length()>Number.EPSILON){o.normalize();const f=Math.acos(we.clamp(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(a.makeRotationAxis(o,f))}s[d].crossVectors(i[d],r[d])}if(t===!0){let d=Math.acos(we.clamp(r[0].dot(r[e]),-1,1));d/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(d=-d);for(let f=1;f<=e;f++)r[f].applyMatrix4(a.makeRotationAxis(i[f],d*f)),s[f].crossVectors(i[f],r[f])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function zt(e,t,n,i,r,s,o,a){me.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}zt.prototype=Object.create(me.prototype);zt.prototype.constructor=zt;zt.prototype.isEllipseCurve=!0;zt.prototype.getPoint=function(e,t){const n=t||new J,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,d=l-this.aY;a=u*c-d*h+this.aX,l=u*h+d*c+this.aY}return n.set(a,l)};zt.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};zt.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e};zt.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function gs(e,t,n,i,r,s){zt.call(this,e,t,n,n,i,r,s),this.type="ArcCurve"}gs.prototype=Object.create(zt.prototype);gs.prototype.constructor=gs;gs.prototype.isArcCurve=!0;function sc(){let e=0,t=0,n=0,i=0;function r(s,o,a,l){e=s,t=a,n=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,h,u){let d=(o-s)/c-(a-s)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,r(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return e+t*s+n*o+i*a}}}const ro=new P,Pa=new sc,Ra=new sc,Ia=new sc;function Rt(e=[],t=!1,n="centripetal",i=.5){me.call(this),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}Rt.prototype=Object.create(me.prototype);Rt.prototype.constructor=Rt;Rt.prototype.isCatmullRomCurve3=!0;Rt.prototype.getPoint=function(e,t=new P){const n=t,i=this.points,r=i.length,s=(r-(this.closed?0:1))*e;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let l,c;this.closed||o>0?l=i[(o-1)%r]:(ro.subVectors(i[0],i[1]).add(i[0]),l=ro);const h=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?c=i[(o+2)%r]:(ro.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=ro),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let f=Math.pow(l.distanceToSquared(h),d),p=Math.pow(h.distanceToSquared(u),d),v=Math.pow(u.distanceToSquared(c),d);p<1e-4&&(p=1),f<1e-4&&(f=p),v<1e-4&&(v=p),Pa.initNonuniformCatmullRom(l.x,h.x,u.x,c.x,f,p,v),Ra.initNonuniformCatmullRom(l.y,h.y,u.y,c.y,f,p,v),Ia.initNonuniformCatmullRom(l.z,h.z,u.z,c.z,f,p,v)}else this.curveType==="catmullrom"&&(Pa.initCatmullRom(l.x,h.x,u.x,c.x,this.tension),Ra.initCatmullRom(l.y,h.y,u.y,c.y,this.tension),Ia.initCatmullRom(l.z,h.z,u.z,c.z,this.tension));return n.set(Pa.calc(a),Ra.calc(a),Ia.calc(a)),n};Rt.prototype.copy=function(e){me.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};Rt.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e};Rt.prototype.fromJSON=function(e){me.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new P().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function sh(e,t,n,i,r){const s=(i-t)*.5,o=(r-n)*.5,a=e*e,l=e*a;return(2*n-2*i+s+o)*l+(-3*n+3*i-2*s-o)*a+s*e+n}function lb(e,t){const n=1-e;return n*n*t}function cb(e,t){return 2*(1-e)*e*t}function ub(e,t){return e*e*t}function Yr(e,t,n,i){return lb(e,t)+cb(e,n)+ub(e,i)}function hb(e,t){const n=1-e;return n*n*n*t}function fb(e,t){const n=1-e;return 3*n*n*e*t}function db(e,t){return 3*(1-e)*e*e*t}function pb(e,t){return e*e*e*t}function Zr(e,t,n,i,r){return hb(e,t)+fb(e,n)+db(e,i)+pb(e,r)}function hn(e=new J,t=new J,n=new J,i=new J){me.call(this),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}hn.prototype=Object.create(me.prototype);hn.prototype.constructor=hn;hn.prototype.isCubicBezierCurve=!0;hn.prototype.getPoint=function(e,t=new J){const n=t,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Zr(e,i.x,r.x,s.x,o.x),Zr(e,i.y,r.y,s.y,o.y)),n};hn.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};hn.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};hn.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function An(e=new P,t=new P,n=new P,i=new P){me.call(this),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}An.prototype=Object.create(me.prototype);An.prototype.constructor=An;An.prototype.isCubicBezierCurve3=!0;An.prototype.getPoint=function(e,t=new P){const n=t,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Zr(e,i.x,r.x,s.x,o.x),Zr(e,i.y,r.y,s.y,o.y),Zr(e,i.z,r.z,s.z,o.z)),n};An.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};An.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};An.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function It(e=new J,t=new J){me.call(this),this.type="LineCurve",this.v1=e,this.v2=t}It.prototype=Object.create(me.prototype);It.prototype.constructor=It;It.prototype.isLineCurve=!0;It.prototype.getPoint=function(e,t=new J){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};It.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};It.prototype.getTangent=function(e,t){const n=t||new J;return n.copy(this.v2).sub(this.v1).normalize(),n};It.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};It.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};It.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function fn(e=new P,t=new P){me.call(this),this.type="LineCurve3",this.v1=e,this.v2=t}fn.prototype=Object.create(me.prototype);fn.prototype.constructor=fn;fn.prototype.isLineCurve3=!0;fn.prototype.getPoint=function(e,t=new P){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};fn.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};fn.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};fn.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};fn.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function dn(e=new J,t=new J,n=new J){me.call(this),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}dn.prototype=Object.create(me.prototype);dn.prototype.constructor=dn;dn.prototype.isQuadraticBezierCurve=!0;dn.prototype.getPoint=function(e,t=new J){const n=t,i=this.v0,r=this.v1,s=this.v2;return n.set(Yr(e,i.x,r.x,s.x),Yr(e,i.y,r.y,s.y)),n};dn.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};dn.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};dn.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Ln(e=new P,t=new P,n=new P){me.call(this),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}Ln.prototype=Object.create(me.prototype);Ln.prototype.constructor=Ln;Ln.prototype.isQuadraticBezierCurve3=!0;Ln.prototype.getPoint=function(e,t=new P){const n=t,i=this.v0,r=this.v1,s=this.v2;return n.set(Yr(e,i.x,r.x,s.x),Yr(e,i.y,r.y,s.y),Yr(e,i.z,r.z,s.z)),n};Ln.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Ln.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Ln.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function pn(e=[]){me.call(this),this.type="SplineCurve",this.points=e}pn.prototype=Object.create(me.prototype);pn.prototype.constructor=pn;pn.prototype.isSplineCurve=!0;pn.prototype.getPoint=function(e,t=new J){const n=t,i=this.points,r=(i.length-1)*e,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(sh(o,a.x,l.x,c.x,h.x),sh(o,a.y,l.y,c.y,h.y)),n};pn.prototype.copy=function(e){me.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this};pn.prototype.toJSON=function(){const e=me.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e};pn.prototype.fromJSON=function(e){me.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new J().fromArray(i))}return this};var mb=Object.freeze({__proto__:null,ArcCurve:gs,CatmullRomCurve3:Rt,CubicBezierCurve:hn,CubicBezierCurve3:An,EllipseCurve:zt,LineCurve:It,LineCurve3:fn,QuadraticBezierCurve:dn,QuadraticBezierCurve3:Ln,SplineCurve:pn});function Wn(){me.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}Wn.prototype=Object.assign(Object.create(me.prototype),{constructor:Wn,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new It(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){const r=n[i]-t,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?e*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,a=s.getPoints(o);for(let l=0;l<a.length;l++){const c=a[l];n&&n.equals(c)||(t.push(c),n=c)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){me.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=me.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){me.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new mb[i.type]().fromJSON(i))}return this}});function ln(e){Wn.call(this),this.type="Path",this.currentPoint=new J,e&&this.setFromPoints(e)}ln.prototype=Object.assign(Object.create(Wn.prototype),{constructor:ln,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new It(this.currentPoint.clone(),new J(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,i){const r=new dn(this.currentPoint.clone(),new J(e,t),new J(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(e,t,n,i,r,s){const o=new hn(this.currentPoint.clone(),new J(e,t),new J(n,i),new J(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),n=new pn(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,n,i,r,s),this},absarc:function(e,t,n,i,r,s){return this.absellipse(e,t,n,n,i,r,s),this},ellipse:function(e,t,n,i,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,i,r,s,o,a),this},absellipse:function(e,t,n,i,r,s,o,a){const l=new zt(e,t,n,i,r,s,o,a);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(e){return Wn.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=Wn.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Wn.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function tr(e){ln.call(this,e),this.uuid=we.generateUUID(),this.type="Shape",this.holes=[]}tr.prototype=Object.assign(Object.create(ln.prototype),{constructor:tr,getPointsHoles:function(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){ln.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=ln.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){ln.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ln().fromJSON(i))}return this}});function Ye(e,t=1){ve.call(this),this.type="Light",this.color=new fe(e),this.intensity=t}Ye.prototype=Object.assign(Object.create(ve.prototype),{constructor:Ye,isLight:!0,copy:function(e){return ve.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=ve.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function oh(e,t,n){Ye.call(this,e,n),this.type="HemisphereLight",this.position.copy(ve.DefaultUp),this.updateMatrix(),this.groundColor=new fe(t)}oh.prototype=Object.assign(Object.create(Ye.prototype),{constructor:oh,isHemisphereLight:!0,copy:function(e){return Ye.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function Cn(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new J(512,512),this.map=null,this.mapPass=null,this.matrix=new Ee,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xo,this._frameExtents=new J(1,1),this._viewportCount=1,this._viewports=[new ke(0,0,1,1)]}Object.assign(Cn.prototype,{_projScreenMatrix:new Ee,_lightPositionWorld:new P,_lookTarget:new P,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(e.matrixWorld),t.position.copy(s),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function _l(){Cn.call(this,new rt(50,1,.5,500)),this.focus=1}_l.prototype=Object.assign(Object.create(Cn.prototype),{constructor:_l,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=we.RAD2DEG*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),Cn.prototype.updateMatrices.call(this,e)}});function ah(e,t,n,i,r,s){Ye.call(this,e,t),this.type="SpotLight",this.position.copy(ve.DefaultUp),this.updateMatrix(),this.target=new ve,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new _l}ah.prototype=Object.assign(Object.create(Ye.prototype),{constructor:ah,isSpotLight:!0,copy:function(e){return Ye.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function bl(){Cn.call(this,new rt(90,1,.5,500)),this._frameExtents=new J(4,2),this._viewportCount=6,this._viewports=[new ke(2,1,1,1),new ke(0,1,1,1),new ke(3,1,1,1),new ke(1,1,1,1),new ke(3,0,1,1),new ke(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}bl.prototype=Object.assign(Object.create(Cn.prototype),{constructor:bl,isPointLightShadow:!0,updateMatrices:function(e,t=0){const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function lh(e,t,n,i){Ye.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new bl}lh.prototype=Object.assign(Object.create(Ye.prototype),{constructor:lh,isPointLight:!0,copy:function(e){return Ye.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function wl(e=-1,t=1,n=1,i=-1,r=.1,s=2e3){Jn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}wl.prototype=Object.assign(Object.create(Jn.prototype),{constructor:wl,isOrthographicCamera:!0,copy:function(e,t){return Jn.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,s=n+e,o=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,o-=c*this.view.offsetY,a=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=ve.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function Ml(){Cn.call(this,new wl(-5,5,5,-5,.5,500))}Ml.prototype=Object.assign(Object.create(Cn.prototype),{constructor:Ml,isDirectionalLightShadow:!0,updateMatrices:function(e){Cn.prototype.updateMatrices.call(this,e)}});function ch(e,t){Ye.call(this,e,t),this.type="DirectionalLight",this.position.copy(ve.DefaultUp),this.updateMatrix(),this.target=new ve,this.shadow=new Ml}ch.prototype=Object.assign(Object.create(Ye.prototype),{constructor:ch,isDirectionalLight:!0,copy:function(e){return Ye.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function uh(e,t){Ye.call(this,e,t),this.type="AmbientLight"}uh.prototype=Object.assign(Object.create(Ye.prototype),{constructor:uh,isAmbientLight:!0});function hh(e,t,n,i){Ye.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}hh.prototype=Object.assign(Object.create(Ye.prototype),{constructor:hh,isRectAreaLight:!0,copy:function(e){return Ye.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Ye.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class gb{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new P)}set(t){for(let n=0;n<9;n++)this.coefficients[n].copy(t[n]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,n){const i=t.x,r=t.y,s=t.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.282095),n.addScaledVector(o[1],.488603*r),n.addScaledVector(o[2],.488603*s),n.addScaledVector(o[3],.488603*i),n.addScaledVector(o[4],1.092548*(i*r)),n.addScaledVector(o[5],1.092548*(r*s)),n.addScaledVector(o[6],.315392*(3*s*s-1)),n.addScaledVector(o[7],1.092548*(i*s)),n.addScaledVector(o[8],.546274*(i*i-r*r)),n}getIrradianceAt(t,n){const i=t.x,r=t.y,s=t.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.886227),n.addScaledVector(o[1],2*.511664*r),n.addScaledVector(o[2],2*.511664*s),n.addScaledVector(o[3],2*.511664*i),n.addScaledVector(o[4],2*.429043*i*r),n.addScaledVector(o[5],2*.429043*r*s),n.addScaledVector(o[6],.743125*s*s-.247708),n.addScaledVector(o[7],2*.429043*i*s),n.addScaledVector(o[8],.429043*(i*i-r*r)),n}add(t){for(let n=0;n<9;n++)this.coefficients[n].add(t.coefficients[n]);return this}addScaledSH(t,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],n);return this}scale(t){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(t);return this}lerp(t,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],n);return this}equals(t){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(t.coefficients[n]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(t,n+r*3);return this}toArray(t=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(t,n+r*3);return t}static getBasisAt(t,n){const i=t.x,r=t.y,s=t.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}function un(e,t){Ye.call(this,void 0,t),this.type="LightProbe",this.sh=e!==void 0?e:new gb}un.prototype=Object.assign(Object.create(Ye.prototype),{constructor:un,isLightProbe:!0,copy:function(e){return Ye.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Ye.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}});function fh(e){He.call(this,e),this.textures={}}fh.prototype=Object.assign(Object.create(He.prototype),{constructor:fh,load:function(e,t,n,i){const r=this,s=new Qt(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=new ib[e.type];if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=new fe().setHex(e.sheen)),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(i.skinning=e.skinning),e.morphTargets!==void 0&&(i.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(i.morphNormals=e.morphNormals),e.dithering!==void 0&&(i.dithering=e.dithering),e.vertexTangents!==void 0&&(i.vertexTangents=e.vertexTangents),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const s=e.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new fe().setHex(s.value);break;case"v2":i.uniforms[r].value=new J().fromArray(s.value);break;case"v3":i.uniforms[r].value=new P().fromArray(s.value);break;case"v4":i.uniforms[r].value=new ke().fromArray(s.value);break;case"m3":i.uniforms[r].value=new Et().fromArray(s.value);break;case"m4":i.uniforms[r].value=new Ee().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new J().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new J().fromArray(e.clearcoatNormalScale)),e.transmission!==void 0&&(i.transmission=e.transmission),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),i},setTextures:function(e){return this.textures=e,this}});const Gf={decodeText:function(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function Ro(){Ue.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}Ro.prototype=Object.assign(Object.create(Ue.prototype),{constructor:Ro,isInstancedBufferGeometry:!0,copy:function(e){return Ue.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=Ue.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}});function Sl(e,t,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),xe.call(this,e,t,n),this.meshPerAttribute=i||1}Sl.prototype=Object.assign(Object.create(xe.prototype),{constructor:Sl,isInstancedBufferAttribute:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=xe.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function dh(e){He.call(this,e)}dh.prototype=Object.assign(Object.create(He.prototype),{constructor:dh,load:function(e,t,n,i){const r=this,s=new Qt(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t={},n={};function i(d,f){if(t[f]!==void 0)return t[f];const v=d.interleavedBuffers[f],y=r(d,v.buffer),g=Bs(v.type,y),m=new Nt(g,v.stride);return m.uuid=v.uuid,t[f]=m,m}function r(d,f){if(n[f]!==void 0)return n[f];const v=d.arrayBuffers[f],y=new Uint32Array(v).buffer;return n[f]=y,y}const s=e.isInstancedBufferGeometry?new Ro:new Ue,o=e.data.index;if(o!==void 0){const d=Bs(o.type,o.array);s.setIndex(new xe(d,1))}const a=e.data.attributes;for(const d in a){const f=a[d];let p;if(f.isInterleavedBufferAttribute){const v=i(e.data,f.data);p=new yi(v,f.itemSize,f.offset,f.normalized)}else{const v=Bs(f.type,f.array),y=f.isInstancedBufferAttribute?Sl:xe;p=new y(v,f.itemSize,f.normalized)}f.name!==void 0&&(p.name=f.name),s.setAttribute(d,p)}const l=e.data.morphAttributes;if(l)for(const d in l){const f=l[d],p=[];for(let v=0,y=f.length;v<y;v++){const g=f[v];let m;if(g.isInterleavedBufferAttribute){const E=i(e.data,g.data);m=new yi(E,g.itemSize,g.offset,g.normalized)}else{const E=Bs(g.type,g.array);m=new xe(E,g.itemSize,g.normalized)}g.name!==void 0&&(m.name=g.name),p.push(m)}s.morphAttributes[d]=p}e.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,f=h.length;d!==f;++d){const p=h[d];s.addGroup(p.start,p.count,p.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const d=new P;u.center!==void 0&&d.fromArray(u.center),s.boundingSphere=new ei(d,u.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}});function ph(e){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),He.call(this,e),this.options={premultiplyAlpha:"none"}}ph.prototype=Object.assign(Object.create(He.prototype),{constructor:ph,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=mr.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(e,o).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,r.options)}).then(function(a){mr.add(e,a),t&&t(a),r.manager.itemEnd(e)}).catch(function(a){i&&i(a),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}});function kf(){this.type="ShapePath",this.color=new fe,this.subPaths=[],this.currentPath=null}Object.assign(kf.prototype,{moveTo:function(e,t){return this.currentPath=new ln,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this},bezierCurveTo:function(e,t,n,i,r,s){return this.currentPath.bezierCurveTo(e,t,n,i,r,s),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(g){const m=[];for(let E=0,S=g.length;E<S;E++){const A=g[E],b=new tr;b.curves=A.curves,m.push(b)}return m}function i(g,m){const E=m.length;let S=!1;for(let A=E-1,b=0;b<E;A=b++){let R=m[A],G=m[b],W=G.x-R.x,se=G.y-R.y;if(Math.abs(se)>Number.EPSILON){if(se<0&&(R=m[b],W=-W,G=m[A],se=-se),g.y<R.y||g.y>G.y)continue;if(g.y===R.y){if(g.x===R.x)return!0}else{const z=se*(g.x-R.x)-W*(g.y-R.y);if(z===0)return!0;if(z<0)continue;S=!S}}else{if(g.y!==R.y)continue;if(G.x<=g.x&&g.x<=R.x||R.x<=g.x&&g.x<=G.x)return!0}}return S}const r=Yn.isClockWise,s=this.subPaths;if(s.length===0)return[];if(t===!0)return n(s);let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new tr,l.curves=a.curves,c.push(l),c;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let g=0,m=s.length;g<m;g++)a=s[g],v=a.getPoints(),o=r(v),o=e?!o:o,o?(!h&&d[p]&&p++,d[p]={s:new tr,p:v},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return n(s);if(d.length>1){let g=!1;const m=[];for(let E=0,S=d.length;E<S;E++)u[E]=[];for(let E=0,S=d.length;E<S;E++){const A=f[E];for(let b=0;b<A.length;b++){const R=A[b];let G=!0;for(let W=0;W<d.length;W++)i(R.p,d[W].p)&&(E!==W&&m.push({froms:E,tos:W,hole:b}),G?(G=!1,u[W].push(R)):g=!0);G&&u[E].push(R)}}m.length>0&&(g||(f=u))}let y;for(let g=0,m=d.length;g<m;g++){l=d[g].s,c.push(l),y=f[g];for(let E=0,S=y.length;E<S;E++)l.holes.push(y[E].h)}return c}});function Vf(e){this.type="Font",this.data=e}Object.assign(Vf.prototype,{isFont:!0,generateShapes:function(e,t=100){const n=[],i=vb(e,t,this.data);for(let r=0,s=i.length;r<s;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function vb(e,t,n){const i=Array.from?Array.from(e):String(e).split(""),r=t/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,l=0;for(let c=0;c<i.length;c++){const h=i[c];if(h===`
`)a=0,l-=s;else{const u=yb(h,r,a,l,n);a+=u.offsetX,o.push(u.path)}}return o}function yb(e,t,n,i,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");return}const o=new kf;let a,l,c,h,u,d,f,p;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let y=0,g=v.length;y<g;)switch(v[y++]){case"m":a=v[y++]*t+n,l=v[y++]*t+i,o.moveTo(a,l);break;case"l":a=v[y++]*t+n,l=v[y++]*t+i,o.lineTo(a,l);break;case"q":c=v[y++]*t+n,h=v[y++]*t+i,u=v[y++]*t+n,d=v[y++]*t+i,o.quadraticCurveTo(u,d,c,h);break;case"b":c=v[y++]*t+n,h=v[y++]*t+i,u=v[y++]*t+n,d=v[y++]*t+i,f=v[y++]*t+n,p=v[y++]*t+i,o.bezierCurveTo(u,d,f,p,c,h);break}}return{offsetX:s.ha*t,path:o}}function mh(e){He.call(this,e)}mh.prototype=Object.assign(Object.create(He.prototype),{constructor:mh,load:function(e,t,n,i){const r=this,s=new Qt(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const l=r.parse(a);t&&t(l)},n,i)},parse:function(e){return new Vf(e)}});let so;const xb={getContext:function(){return so===void 0&&(so=new(window.AudioContext||window.webkitAudioContext)),so},setContext:function(e){so=e}};function gh(e){He.call(this,e)}gh.prototype=Object.assign(Object.create(He.prototype),{constructor:gh,load:function(e,t,n,i){const r=this,s=new Qt(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{const a=o.slice(0);xb.getContext().decodeAudioData(a,function(c){t(c)})}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}});function vh(e,t,n){un.call(this,void 0,n);const i=new fe().set(e),r=new fe().set(t),s=new P(i.r,i.g,i.b),o=new P(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}vh.prototype=Object.assign(Object.create(un.prototype),{constructor:vh,isHemisphereLightProbe:!0,copy:function(e){return un.prototype.copy.call(this,e),this},toJSON:function(e){return un.prototype.toJSON.call(this,e)}});function yh(e,t){un.call(this,void 0,t);const n=new fe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}yh.prototype=Object.assign(Object.create(un.prototype),{constructor:yh,isAmbientLightProbe:!0,copy:function(e){return un.prototype.copy.call(this,e),this},toJSON:function(e){return un.prototype.toJSON.call(this,e)}});const xh=new Ee,_h=new Ee;function _b(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new rt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new rt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(_b.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(we.DEG2RAD*t.fov*.5)/t.zoom;let a,l;_h.elements[12]=-r,xh.elements[12]=r,a=-o*t.aspect+s,l=o*t.aspect+s,i.elements[0]=2*t.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(i),a=-o*t.aspect-s,l=o*t.aspect-s,i.elements[0]=2*t.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_h),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(xh)}});function Wf(e,t,n){this.binding=e,this.valueSize=n;let i,r,s;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Wf.prototype,{accumulate:function(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=t}else{s+=t;const o=t/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=t*this._origIndex;this._mixBufferRegion(n,i,a,1-r,t)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let a=t,l=t+t;a!==l;++a)if(n[a]!==n[a+t]){o.setValue(n,i);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,s=i;r!==s;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)e[t+s]=e[n+s]},_slerp:function(e,t,n,i){xt.slerpFlat(e,t,e,t,e,n,i)},_slerpAdditive:function(e,t,n,i,r){const s=this._workIndex*r;xt.multiplyQuaternionsFlat(e,s,e,t,e,n),xt.slerpFlat(e,t,e,t,e,s,i)},_lerp:function(e,t,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]*s+e[n+o]*i}},_lerpAdditive:function(e,t,n,i,r){for(let s=0;s!==r;++s){const o=t+s;e[o]=e[o]+e[n+s]*i}}});const oc="\\[\\]\\.:\\/",bb=new RegExp("["+oc+"]","g"),ac="[^"+oc+"]",wb="[^"+oc.replace("\\.","")+"]",Mb=/((?:WC+[\/:])*)/.source.replace("WC",ac),Sb=/(WCOD+)?/.source.replace("WCOD",wb),Eb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ac),Tb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ac),Ab=new RegExp("^"+Mb+Sb+Eb+Tb+"$"),Lb=["material","materials","bones"];function jf(e,t,n){const i=n||_t.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}Object.assign(jf.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function _t(e,t,n){this.path=t,this.parsedPath=n||_t.parseTrackName(t),this.node=_t.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(_t,{Composite:jf,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new _t.Composite(e,t,n):new _t(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(bb,"")},parseTrackName:function(e){const t=Ab.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);Lb.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===t||o.uuid===t)return o;const a=n(o.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}});Object.assign(_t.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)t[n++]=i[r]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=_t.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let c=0;c<e.length;c++)if(e[c].name===l){l=c;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const s=e[i];if(s===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(_t.prototype,{_getValue_unbound:_t.prototype.getValue,_setValue_unbound:_t.prototype.setValue});function Cb(){this.uuid=we.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(Cb.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=e.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const u=arguments[c],d=u.uuid;let f=t[d];if(f===void 0){f=a++,t[d]=f,e.push(u);for(let p=0,v=s;p!==v;++p)r[p].push(new _t(u,n[p],i[p]))}else if(f<l){o=e[f];const p=--l,v=e[p];t[v.uuid]=f,e[f]=v,t[d]=p,e[p]=u;for(let y=0,g=s;y!==g;++y){const m=r[y],E=m[p];let S=m[f];m[f]=E,S===void 0&&(S=new _t(u,n[y],i[y])),m[p]=S}}else e[f]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],l=a.uuid,c=t[l];if(c!==void 0&&c>=r){const h=r++,u=e[h];t[u.uuid]=c,e[c]=u,t[l]=h,e[h]=a;for(let d=0,f=i;d!==f;++d){const p=n[d],v=p[h],y=p[c];p[c]=v,p[h]=y}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=e.length;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0)if(delete t[c],h<r){const u=--r,d=e[u],f=--s,p=e[f];t[d.uuid]=h,e[h]=d,t[p.uuid]=u,e[u]=p,e.pop();for(let v=0,y=i;v!==y;++v){const g=n[v],m=g[u],E=g[f];g[h]=m,g[u]=E,g.pop()}}else{const u=--s,d=e[u];u>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let f=0,p=i;f!==p;++f){const v=n[f];v[h]=v[u],v.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,h=new Array(l);i=r.length,n[e]=i,s.push(e),o.push(t),r.push(h);for(let u=c,d=a.length;u!==d;++u){const f=a[u];h[u]=new _t(f,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],l=e[o];t[l]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class Pb{constructor(t,n,i=null,r=n.blendMode){this._mixer=t,this._clip=n,this._localRoot=i,this.blendMode=r;const s=n.tracks,o=s.length,a=new Array(o),l={endingStart:Wi,endingEnd:Wi};for(let c=0;c!==o;++c){const h=s[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ev,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,n){return this.loop=t,this.repetitions=n,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,n,i){if(t.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=t._clip.duration,o=s/r,a=r/s;t.warp(1,o,n),this.warp(a,1,n)}return this}crossFadeTo(t,n,i){return t.crossFadeFrom(this,n,i)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,n,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=t/o,c[1]=n/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,n,i,r){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const l=(t-s)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(t);const o=this._updateTime(n),a=this._updateWeight(t);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case yf:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case ic:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(r,a)}}}_updateWeight(t){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(t)[0];n*=r,t>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(t){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(t)[0];n*=r,t>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n)}}return this._effectiveTimeScale=n,n}_updateTime(t){const n=this._clip.duration,i=this.loop;let r=this.time+t,s=this._loopCount;const o=i===tv;if(t===0)return s===-1?r:o&&(s&1)===1?n-r:r;if(i===Qg){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=n||r<0){const a=Math.floor(r/n);r-=n*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return n-r}return r}_setEndings(t,n,i){const r=this._interpolantSettings;i?(r.endingStart=ji,r.endingEnd=ji):(t?r.endingStart=this.zeroSlopeAtStart?ji:Wi:r.endingStart=wo,n?r.endingEnd=this.zeroSlopeAtEnd?ji:Wi:r.endingEnd=wo)}_scheduleFading(t,n,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=n,a[1]=s+t,l[1]=i,this}}function bh(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}bh.prototype=Object.assign(Object.create(en.prototype),{constructor:bh,_bindAction:function(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,s=e._propertyBindings,o=e._interpolants,a=n.uuid,l=this._bindingsByRootAndName;let c=l[a];c===void 0&&(c={},l[a]=c);for(let h=0;h!==r;++h){const u=i[h],d=u.name;let f=c[d];if(f!==void 0)s[h]=f;else{if(f=s[h],f!==void 0){f._cacheIndex===null&&(++f.referenceCount,this._addInactiveBinding(f,a,d));continue}const p=t&&t._propertyBindings[h].binding.parsedPath;f=new Wf(_t.create(n,d,p),u.ValueTypeName,u.getValueSize()),++f.referenceCount,this._addInactiveBinding(f,a,d),s[h]=f}o[h].resultBuffer=f.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_addInactiveBinding:function(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];s===void 0&&(s={},i[t]=s),s[n]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=t[t.length-1],l=e._cacheIndex;a._cacheIndex=l,t[l]=a,t.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Lo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const i=t||this._root,r=i.uuid;let s=typeof e=="string"?Xt.findByName(i,e):e;const o=s!==null?s.uuid:e,a=this._actionsByClip[o];let l=null;if(n===void 0&&(s!==null?n=s.blendMode:n=ic),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;l=a.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new Pb(this,s,t,n);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Xt.findByName(n,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,r,s);const o=this._bindings,a=this._nActiveBindings;for(let l=0;l!==a;++l)o[l].apply(s);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const l=s[o];this._deactivateAction(l);const c=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=c,t[c]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function wh(e,t,n){Nt.call(this,e,t),this.meshPerAttribute=n||1}wh.prototype=Object.assign(Object.create(Nt.prototype),{constructor:wh,isInstancedInterleavedBuffer:!0,copy:function(e){return Nt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=Nt.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=Nt.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}});function qf(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(qf.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(qf.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}});function Xf(e,t,n,i){this.ray=new xs(e,t),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new _f,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Mh(e,t){return e.distance-t.distance}function El(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),i===!0){const r=e.children;for(let s=0,o=r.length;s<o;s++)El(r[s],t,n,!0)}}Object.assign(Xf.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)},intersectObject:function(e,t,n){const i=n||[];return El(e,this,i,t),i.sort(Mh),i},intersectObjects:function(e,t,n){const i=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=e.length;r<s;r++)El(e[r],this,i,t);return i.sort(Mh),i}});class Sh{constructor(t=1,n=0,i=0){return this.radius=t,this.phi=n,this.theta=i,this}set(t,n,i){return this.radius=t,this.phi=n,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,n,i){return this.radius=Math.sqrt(t*t+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(we.clamp(n/this.radius,-1,1))),this}}const Eh=new J;class Rb{constructor(t,n){Object.defineProperty(this,"isBox2",{value:!0}),this.min=t!==void 0?t:new J(1/0,1/0),this.max=n!==void 0?n:new J(-1/0,-1/0)}set(t,n){return this.min.copy(t),this.max.copy(n),this}setFromPoints(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n++)this.expandByPoint(t[n]);return this}setFromCenterAndSize(t,n){const i=Eh.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return t===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new J),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return t===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new J),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,n){return n===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),n=new J),n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,n){return n===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),n=new J),n.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Eh.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function Io(e){ve.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Io.prototype=Object.create(ve.prototype);Io.prototype.constructor=Io;Io.prototype.isImmediateRenderObject=!0;const zn=new P,oo=new Ee,Da=new Ee;class Ib extends So{constructor(t){const n=Yf(t),i=new Ue,r=[],s=[],o=new fe(0,0,1),a=new fe(0,1,0);for(let c=0;c<n.length;c++){const h=n[c];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new Fe(r,3)),i.setAttribute("color",new Fe(s,3));const l=new Ut({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=n,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const n=this.bones,i=this.geometry,r=i.getAttribute("position");Da.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<n.length;s++){const a=n[s];a.parent&&a.parent.isBone&&(oo.multiplyMatrices(Da,a.matrixWorld),zn.setFromMatrixPosition(oo),r.setXYZ(o,zn.x,zn.y,zn.z),oo.multiplyMatrices(Da,a.parent.matrixWorld),zn.setFromMatrixPosition(oo),r.setXYZ(o+1,zn.x,zn.y,zn.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function Yf(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,Yf(e.children[n]));return t}class Db extends So{constructor(t=10,n=10,i=4473924,r=8947848){i=new fe(i),r=new fe(r);const s=n/2,o=t/n,a=t/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=n;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===s?i:r;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new Ue;h.setAttribute("position",new Fe(l,3)),h.setAttribute("color",new Fe(c,3));const u=new Ut({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}}const Nb=new Float32Array(1);new Int32Array(Nb.buffer);me.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(me.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e};Object.assign(Wn.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Ot;for(let n=0,i=e.length;n<i;n++){const r=e[n];t.vertices.push(new P(r.x,r.y,r.z||0))}return t}});Object.assign(ln.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});Object.create(Rt.prototype);Object.create(Rt.prototype);function Zf(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Rt.call(this,e),this.type="catmullrom"}Zf.prototype=Object.create(Rt.prototype);Object.assign(Zf.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});Db.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};Ib.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(He.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Gf.extractUrlBase(e)}});He.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(Rb.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(Qn.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(ei.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Xo.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)};Object.assign(we,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),we.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),we.ceilPowerOfTwo(e)}});Object.assign(Et.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}});Object.assign(Ee.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new P().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,s)},getInverse:function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()}});Sn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)};Object.assign(xt.prototype,{multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}});Object.assign(xs.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}});Object.assign(dt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}});Object.assign(dt,{barycoordFromPoint:function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),dt.getBarycoord(e,t,n,i,r)},normal:function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),dt.getNormal(e,t,n,i)}});Object.assign(tr.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new K0(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new tb(this,e)}});Object.assign(J.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(P.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(ke.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Ot.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.assign(ve.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(ve.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(lt.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(lt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),nv},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(sl.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(ll.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});ol.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(me.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}});rt.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)};Object.defineProperties(Ye.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}});Object.defineProperties(xe.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===is},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(is)}}});Object.assign(xe.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?is:qo),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ue.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new xe(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(Ue.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(Ro.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}});Object.defineProperties(Xf.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}});Object.defineProperties(Nt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===is},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}});Object.assign(Nt.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?is:qo),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Hf.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(Of.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(ye.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new fe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===pf}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}});Object.defineProperties(wi.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(bi.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}});Object.defineProperties(bt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}});Object.assign(bs.prototype,{clearTarget:function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(bs.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?xf:ys}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(Df.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties($t.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}});or.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};or.prototype.clear=function(e,t,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,i)};_r.crossOrigin=void 0;_r.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Po;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};_r.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new xl;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};_r.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};_r.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Rm}}));var Tl=function(e){He.call(this,e)};Tl.prototype=Object.assign(Object.create(He.prototype),{constructor:Tl,load:function(e,t,n,i){var r=this,s=new Qt(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(o){try{t(r.parse(o))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){function t(l){var c,h,u,d;if(d=new DataView(l),h=32/8*3+32/8*3*3+16/8,u=d.getUint32(80,!0),c=80+32/8+u*h,c===d.byteLength)return!0;for(var f=[115,111,108,105,100],p=0;p<5;p++)if(n(f,d,p))return!1;return!0}function n(l,c,h){for(var u=0,d=l.length;u<d;u++)if(l[u]!==c.getUint8(h+u,!1))return!1;return!0}function i(l){for(var c=new DataView(l),h=c.getUint32(80,!0),u,d,f,p=!1,v,y,g,m,E,S=0;S<80-10;S++)c.getUint32(S,!1)==1129270351&&c.getUint8(S+4)==82&&c.getUint8(S+5)==61&&(p=!0,v=new Float32Array(h*3*3),y=c.getUint8(S+6)/255,g=c.getUint8(S+7)/255,m=c.getUint8(S+8)/255,E=c.getUint8(S+9)/255);for(var A=84,b=12*4+2,R=new Ue,G=new Float32Array(h*3*3),W=new Float32Array(h*3*3),se=0;se<h;se++){var z=A+se*b,X=c.getFloat32(z,!0),V=c.getFloat32(z+4,!0),B=c.getFloat32(z+8,!0);if(p){var D=c.getUint16(z+48,!0);D&32768?(u=y,d=g,f=m):(u=(D&31)/31,d=(D>>5&31)/31,f=(D>>10&31)/31)}for(var H=1;H<=3;H++){var K=z+H*12,$=se*3*3+(H-1)*3;G[$]=c.getFloat32(K,!0),G[$+1]=c.getFloat32(K+4,!0),G[$+2]=c.getFloat32(K+8,!0),W[$]=X,W[$+1]=V,W[$+2]=B,p&&(v[$]=u,v[$+1]=d,v[$+2]=f)}}return R.setAttribute("position",new xe(G,3)),R.setAttribute("normal",new xe(W,3)),p&&(R.setAttribute("color",new xe(v,3)),R.hasColors=!0,R.alpha=E),R}function r(l){for(var c=new Ue,h=/solid([\s\S]*?)endsolid/g,u=/facet([\s\S]*?)endfacet/g,d=0,f=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,p=new RegExp("vertex"+f+f+f,"g"),v=new RegExp("normal"+f+f+f,"g"),y=[],g=[],m=new P,E,S=0,A=0,b=0;(E=h.exec(l))!==null;){A=b;for(var R=E[0];(E=u.exec(R))!==null;){for(var G=0,W=0,se=E[0];(E=v.exec(se))!==null;)m.x=parseFloat(E[1]),m.y=parseFloat(E[2]),m.z=parseFloat(E[3]),W++;for(;(E=p.exec(se))!==null;)y.push(parseFloat(E[1]),parseFloat(E[2]),parseFloat(E[3])),g.push(m.x,m.y,m.z),G++,b++;W!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+d),G!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+d),d++}var z=A,X=b-A;c.addGroup(z,X,S),S++}return c.setAttribute("position",new Fe(y,3)),c.setAttribute("normal",new Fe(g,3)),c}function s(l){return typeof l!="string"?Gf.decodeText(new Uint8Array(l)):l}function o(l){if(typeof l=="string"){for(var c=new Uint8Array(l.length),h=0;h<l.length;h++)c[h]=l.charCodeAt(h)&255;return c.buffer||c}else return l}var a=o(e);return t(a)?i(a):r(s(e))}});var vs=function(e,t){t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new P,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:Gn.ROTATE,MIDDLE:Gn.DOLLY,RIGHT:Gn.PAN},this.touches={ONE:kn.ROTATE,TWO:kn.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),a=o.NONE},this.update=function(){var C=new P,Q=new xt().setFromUnitVectors(e.up,new P(0,1,0)),re=Q.clone().invert(),ie=new P,he=new xt,Pe=2*Math.PI;return function(){var Ht=n.object.position;C.copy(Ht).sub(n.target),C.applyQuaternion(Q),c.setFromVector3(C),n.autoRotate&&a===o.NONE&&W(R()),n.enableDamping?(c.theta+=h.theta*n.dampingFactor,c.phi+=h.phi*n.dampingFactor):(c.theta+=h.theta,c.phi+=h.phi);var wt=n.minAzimuthAngle,We=n.maxAzimuthAngle;return isFinite(wt)&&isFinite(We)&&(wt<-Math.PI?wt+=Pe:wt>Math.PI&&(wt-=Pe),We<-Math.PI?We+=Pe:We>Math.PI&&(We-=Pe),wt<=We?c.theta=Math.max(wt,Math.min(We,c.theta)):c.theta=c.theta>(wt+We)/2?Math.max(wt,c.theta):Math.min(We,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=u,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),C.setFromSpherical(c),C.applyQuaternion(re),Ht.copy(n.target).add(C),n.object.lookAt(n.target),n.enableDamping===!0?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),d.set(0,0,0)),u=1,f||ie.distanceToSquared(n.object.position)>l||8*(1-he.dot(n.object.quaternion))>l?(n.dispatchEvent(i),ie.copy(n.object.position),he.copy(n.object.quaternion),f=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",Y,!1),n.domElement.removeEventListener("pointerdown",I,!1),n.domElement.removeEventListener("wheel",N,!1),n.domElement.removeEventListener("touchstart",k,!1),n.domElement.removeEventListener("touchend",ee,!1),n.domElement.removeEventListener("touchmove",j,!1),n.domElement.ownerDocument.removeEventListener("pointermove",U,!1),n.domElement.ownerDocument.removeEventListener("pointerup",O,!1),n.domElement.removeEventListener("keydown",M,!1)};var n=this,i={type:"change"},r={type:"start"},s={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},a=o.NONE,l=1e-6,c=new Sh,h=new Sh,u=1,d=new P,f=!1,p=new J,v=new J,y=new J,g=new J,m=new J,E=new J,S=new J,A=new J,b=new J;function R(){return 2*Math.PI/60/60*n.autoRotateSpeed}function G(){return Math.pow(.95,n.zoomSpeed)}function W(C){h.theta-=C}function se(C){h.phi-=C}var z=function(){var C=new P;return function(re,ie){C.setFromMatrixColumn(ie,0),C.multiplyScalar(-re),d.add(C)}}(),X=function(){var C=new P;return function(re,ie){n.screenSpacePanning===!0?C.setFromMatrixColumn(ie,1):(C.setFromMatrixColumn(ie,0),C.crossVectors(n.object.up,C)),C.multiplyScalar(re),d.add(C)}}(),V=function(){var C=new P;return function(re,ie){var he=n.domElement;if(n.object.isPerspectiveCamera){var Pe=n.object.position;C.copy(Pe).sub(n.target);var $e=C.length();$e*=Math.tan(n.object.fov/2*Math.PI/180),z(2*re*$e/he.clientHeight,n.object.matrix),X(2*ie*$e/he.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(z(re*(n.object.right-n.object.left)/n.object.zoom/he.clientWidth,n.object.matrix),X(ie*(n.object.top-n.object.bottom)/n.object.zoom/he.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function B(C){n.object.isPerspectiveCamera?u/=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*C)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function D(C){n.object.isPerspectiveCamera?u*=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/C)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function H(C){p.set(C.clientX,C.clientY)}function K(C){S.set(C.clientX,C.clientY)}function $(C){g.set(C.clientX,C.clientY)}function oe(C){v.set(C.clientX,C.clientY),y.subVectors(v,p).multiplyScalar(n.rotateSpeed);var Q=n.domElement;W(2*Math.PI*y.x/Q.clientHeight),se(2*Math.PI*y.y/Q.clientHeight),p.copy(v),n.update()}function ue(C){A.set(C.clientX,C.clientY),b.subVectors(A,S),b.y>0?B(G()):b.y<0&&D(G()),S.copy(A),n.update()}function ae(C){m.set(C.clientX,C.clientY),E.subVectors(m,g).multiplyScalar(n.panSpeed),V(E.x,E.y),g.copy(m),n.update()}function pe(C){C.deltaY<0?D(G()):C.deltaY>0&&B(G()),n.update()}function _e(C){var Q=!1;switch(C.keyCode){case n.keys.UP:V(0,n.keyPanSpeed),Q=!0;break;case n.keys.BOTTOM:V(0,-n.keyPanSpeed),Q=!0;break;case n.keys.LEFT:V(n.keyPanSpeed,0),Q=!0;break;case n.keys.RIGHT:V(-n.keyPanSpeed,0),Q=!0;break}Q&&(C.preventDefault(),n.update())}function Ge(C){if(C.touches.length==1)p.set(C.touches[0].pageX,C.touches[0].pageY);else{var Q=.5*(C.touches[0].pageX+C.touches[1].pageX),re=.5*(C.touches[0].pageY+C.touches[1].pageY);p.set(Q,re)}}function ne(C){if(C.touches.length==1)g.set(C.touches[0].pageX,C.touches[0].pageY);else{var Q=.5*(C.touches[0].pageX+C.touches[1].pageX),re=.5*(C.touches[0].pageY+C.touches[1].pageY);g.set(Q,re)}}function Be(C){var Q=C.touches[0].pageX-C.touches[1].pageX,re=C.touches[0].pageY-C.touches[1].pageY,ie=Math.sqrt(Q*Q+re*re);S.set(0,ie)}function de(C){n.enableZoom&&Be(C),n.enablePan&&ne(C)}function Te(C){n.enableZoom&&Be(C),n.enableRotate&&Ge(C)}function ge(C){if(C.touches.length==1)v.set(C.touches[0].pageX,C.touches[0].pageY);else{var Q=.5*(C.touches[0].pageX+C.touches[1].pageX),re=.5*(C.touches[0].pageY+C.touches[1].pageY);v.set(Q,re)}y.subVectors(v,p).multiplyScalar(n.rotateSpeed);var ie=n.domElement;W(2*Math.PI*y.x/ie.clientHeight),se(2*Math.PI*y.y/ie.clientHeight),p.copy(v)}function Ie(C){if(C.touches.length==1)m.set(C.touches[0].pageX,C.touches[0].pageY);else{var Q=.5*(C.touches[0].pageX+C.touches[1].pageX),re=.5*(C.touches[0].pageY+C.touches[1].pageY);m.set(Q,re)}E.subVectors(m,g).multiplyScalar(n.panSpeed),V(E.x,E.y),g.copy(m)}function be(C){var Q=C.touches[0].pageX-C.touches[1].pageX,re=C.touches[0].pageY-C.touches[1].pageY,ie=Math.sqrt(Q*Q+re*re);A.set(0,ie),b.set(0,Math.pow(A.y/S.y,n.zoomSpeed)),B(b.y),S.copy(A)}function w(C){n.enableZoom&&be(C),n.enablePan&&Ie(C)}function L(C){n.enableZoom&&be(C),n.enableRotate&&ge(C)}function I(C){if(n.enabled!==!1)switch(C.pointerType){case"mouse":case"pen":_(C);break}}function U(C){if(n.enabled!==!1)switch(C.pointerType){case"mouse":case"pen":x(C);break}}function O(C){switch(C.pointerType){case"mouse":case"pen":F();break}}function _(C){C.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus();var Q;switch(C.button){case 0:Q=n.mouseButtons.LEFT;break;case 1:Q=n.mouseButtons.MIDDLE;break;case 2:Q=n.mouseButtons.RIGHT;break;default:Q=-1}switch(Q){case Gn.DOLLY:if(n.enableZoom===!1)return;K(C),a=o.DOLLY;break;case Gn.ROTATE:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enablePan===!1)return;$(C),a=o.PAN}else{if(n.enableRotate===!1)return;H(C),a=o.ROTATE}break;case Gn.PAN:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enableRotate===!1)return;H(C),a=o.ROTATE}else{if(n.enablePan===!1)return;$(C),a=o.PAN}break;default:a=o.NONE}a!==o.NONE&&(n.domElement.ownerDocument.addEventListener("pointermove",U,!1),n.domElement.ownerDocument.addEventListener("pointerup",O,!1),n.dispatchEvent(r))}function x(C){if(n.enabled!==!1)switch(C.preventDefault(),a){case o.ROTATE:if(n.enableRotate===!1)return;oe(C);break;case o.DOLLY:if(n.enableZoom===!1)return;ue(C);break;case o.PAN:if(n.enablePan===!1)return;ae(C);break}}function F(C){n.domElement.ownerDocument.removeEventListener("pointermove",U,!1),n.domElement.ownerDocument.removeEventListener("pointerup",O,!1),n.enabled!==!1&&(n.dispatchEvent(s),a=o.NONE)}function N(C){n.enabled===!1||n.enableZoom===!1||a!==o.NONE&&a!==o.ROTATE||(C.preventDefault(),C.stopPropagation(),n.dispatchEvent(r),pe(C),n.dispatchEvent(s))}function M(C){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||_e(C)}function k(C){if(n.enabled!==!1){switch(C.preventDefault(),C.touches.length){case 1:switch(n.touches.ONE){case kn.ROTATE:if(n.enableRotate===!1)return;Ge(C),a=o.TOUCH_ROTATE;break;case kn.PAN:if(n.enablePan===!1)return;ne(C),a=o.TOUCH_PAN;break;default:a=o.NONE}break;case 2:switch(n.touches.TWO){case kn.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;de(C),a=o.TOUCH_DOLLY_PAN;break;case kn.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Te(C),a=o.TOUCH_DOLLY_ROTATE;break;default:a=o.NONE}break;default:a=o.NONE}a!==o.NONE&&n.dispatchEvent(r)}}function j(C){if(n.enabled!==!1)switch(C.preventDefault(),C.stopPropagation(),a){case o.TOUCH_ROTATE:if(n.enableRotate===!1)return;ge(C),n.update();break;case o.TOUCH_PAN:if(n.enablePan===!1)return;Ie(C),n.update();break;case o.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;w(C),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;L(C),n.update();break;default:a=o.NONE}}function ee(C){n.enabled!==!1&&(n.dispatchEvent(s),a=o.NONE)}function Y(C){n.enabled!==!1&&C.preventDefault()}n.domElement.addEventListener("contextmenu",Y,!1),n.domElement.addEventListener("pointerdown",I,!1),n.domElement.addEventListener("wheel",N,!1),n.domElement.addEventListener("touchstart",k,!1),n.domElement.addEventListener("touchend",ee,!1),n.domElement.addEventListener("touchmove",j,!1),n.domElement.addEventListener("keydown",M,!1),this.update()};vs.prototype=Object.create(en.prototype);vs.prototype.constructor=vs;var Al=function(e,t){vs.call(this,e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=Gn.PAN,this.mouseButtons.RIGHT=Gn.ROTATE,this.touches.ONE=kn.PAN,this.touches.TWO=kn.DOLLY_ROTATE};Al.prototype=Object.create(en.prototype);Al.prototype.constructor=Al;const Ob=Yl("canvas",{id:"bg",style:{width:"100vw",height:"100vh",position:"fixed",top:"0",left:"0"}},null,-1),Fb=[Ob],Bb=fp({__name:"App",setup(e){const t=new Of;let n,i,r,s=!0;Qh(()=>{s&&(s=!1,t.background=new fe(6710886),t.fog=new rc(7999,.002),n=new rt(75,window.innerWidth/window.innerHeight,.1,1e3),n.position.set(-9,3,6),i=new bs({canvas:document.querySelector("#bg"),antialias:!0,alpha:!0}),r=new vs(n,i.domElement),a(),o(),l("models/model.stl","textures/overlay.svg","textures/top.jpg","textures/edge.png","textures/edge.png","textures/edge.png","textures/edge.png","textures/bottom.jpg").then(u=>{u.rotation.x=-Math.PI/2,u.position.set(-6,0,3),t.add(u)}))});function o(){r.update(),i.render(t,n),requestAnimationFrame(o)}function a(){i.setSize(window.innerWidth,window.innerHeight),i.setPixelRatio(Math.min(window.devicePixelRatio,2)),n.aspect=window.innerWidth/window.innerHeight,n.updateProjectionMatrix()}window.addEventListener("resize",a);async function l(u,d,f,p,v,y,g,m){const E=new Tl,S=new Po,A=await E.loadAsync(u),b=await c(d);b.needsUpdate=!0;const R=S.load(f),G=S.load(p),W=S.load(v),se=S.load(y),z=S.load(g),X=S.load(m),V=new bt({uniforms:{lightDirection:{value:new P(-1,-1,1).normalize()},lightColor:{value:new ke(1,1,1,1)},topTexture1:{value:b},topTexture2:{value:R},frontTexture:{value:G},backTexture:{value:W},leftTexture:{value:se},rightTexture:{value:z},bottomTexture:{value:X},min:{value:new P},max:{value:new P},tolerance:{value:.001}},vertexShader:`
      varying vec2 vUv;
      varying vec3 vNormal;
      varying vec3 vPosition;

      void main() {
        vUv = uv;
        vNormal = normal;
        vPosition = position;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);
      }
    `,fragmentShader:`
      uniform vec3 lightDirection;
      uniform vec4 lightColor;
      uniform sampler2D topTexture1;
      uniform sampler2D topTexture2;
      uniform sampler2D frontTexture;
      uniform sampler2D backTexture;
      uniform sampler2D leftTexture;
      uniform sampler2D rightTexture;
      uniform sampler2D bottomTexture;
      uniform vec3 min;
      uniform vec3 max;
      uniform float tolerance;

      varying vec2 vUv;
      varying vec3 vNormal;
      varying vec3 vPosition;

      void main() {
        vec4 mixColor = vec4(0);

        float minMinX = min.x - tolerance;
        float maxMinX = min.x + tolerance;

        float minMaxX = max.x - tolerance;
        float maxMaxX = max.x + tolerance;

        float minMinY = min.y - tolerance;
        float maxMinY = min.y + tolerance;

        float minMaxY = max.y - tolerance;
        float maxMaxY = max.y + tolerance;

        float minMinZ = min.z - tolerance;
        float maxMinZ = min.z + tolerance;

        float minMaxZ = max.z - tolerance;
        float maxMaxZ = max.z + tolerance;

        if (vPosition.y >= minMinY && vPosition.y <= maxMinY) {
          mixColor = texture2D(frontTexture, vUv);
        } else if (vPosition.y >= minMaxY && vPosition.y <= maxMaxY) {
          mixColor = texture2D(backTexture, vUv);
        } else if (vPosition.x >= minMinX && vPosition.x <= maxMinX) {
          mixColor = texture2D(leftTexture, vUv);
        } else if (vPosition.x >= minMaxX && vPosition.x <= maxMaxX) {
          mixColor = texture2D(rightTexture, vUv);
        } else if (vPosition.z >= minMinZ && vPosition.z <= maxMinZ) {
          mixColor = texture2D(bottomTexture, vUv);
        } else {
          vec4 topColor1 = texture2D(topTexture1, vUv);
          vec4 topColor2 = texture2D(topTexture2, vUv);
          topColor2 = topColor2.a > .5 ? topColor2 : vec4(0, 0, 0, 1);
          mixColor = mix(topColor1, topColor2, .5);
          vec3 norm = normalize(vNormal);
          float nDotL = clamp(dot(lightDirection, norm), 0., 1.);
          mixColor = lightColor * mixColor * nDotL;
        }

        gl_FragColor = mixColor;
      }
    `}),{stlMesh:B,min:D,max:H}=h(A,V);return V.uniforms.min.value=D,V.uniforms.max.value=H,B}async function c(u){var R,G,W,se;const d=new Qt,f=new ms,p=await d.loadAsync(u),y=new DOMParser().parseFromString(p,"image/svg+xml").documentElement,g=new XMLSerializer().serializeToString(y),m=`data:image/svg+xml;base64,${window.btoa(unescape(encodeURIComponent(g)))}`,E=await f.loadAsync(m),S=document.createElement("canvas");S.width=(G=(R=y.width)==null?void 0:R.baseVal)==null?void 0:G.value,S.height=(se=(W=y.height)==null?void 0:W.baseVal)==null?void 0:se.value;const A=S.getContext("2d");return A==null||A.drawImage(E,0,0),new Ve(S)}function h(u,d){let f=u;u.isBufferGeometry&&(f=new Ot().fromBufferGeometry(u)),f.computeBoundingBox(),f.computeVertexNormals();const p=f.boundingBox.max,v=f.boundingBox.min,y=new P(0-v.x,0-v.y,0-v.z),g=new P(p.x-v.x,p.y-v.y,p.z-v.z),m=f.faces;f.faceVertexUvs[0]=[];const E=5;for(let A=0;A<m.length;A++){const b=f.vertices[m[A].a],R=f.vertices[m[A].b],G=f.vertices[m[A].c];b.y===v.y&&R.y===v.y&&G.y===v.y?f.faceVertexUvs[0].push([new J((b.x+y.x)/g.x,(b.z+y.z)/(g.z*E)),new J((R.x+y.x)/g.x,(R.z+y.z)/(g.z*E)),new J((G.x+y.x)/g.x,(G.z+y.z)/(g.z*E))]):b.y===p.y&&R.y===p.y&&G.y===p.y?f.faceVertexUvs[0].push([new J((b.x+y.x)/g.x,(b.z+y.z)/(g.z*E)),new J((R.x+y.x)/g.x,(R.z+y.z)/(g.z*E)),new J((G.x+y.x)/g.x,(G.z+y.z)/(g.z*E))]):b.x===v.x&&R.x===v.x&&G.x===v.x?f.faceVertexUvs[0].push([new J((b.y+y.y)/g.y,(b.z+y.z)/(g.z*E)),new J((R.y+y.y)/g.y,(R.z+y.z)/(g.z*E)),new J((G.y+y.y)/g.y,(G.z+y.z)/(g.z*E))]):b.x===p.x&&R.x===p.x&&G.x===p.x?f.faceVertexUvs[0].push([new J((b.y+y.y)/g.y,(b.z+y.z)/(g.z*E)),new J((R.y+y.y)/g.y,(R.z+y.z)/(g.z*E)),new J((G.y+y.y)/g.y,(G.z+y.z)/(g.z*E))]):f.faceVertexUvs[0].push([new J((b.x+y.x)/g.x,(b.y+y.y)/g.y),new J((R.x+y.x)/g.x,(R.y+y.y)/g.y),new J((G.x+y.x)/g.x,(G.y+y.y)/g.y)])}return f.uvsNeedUpdate=!0,{stlMesh:new lt(f,d),min:v,max:p}}return(u,d)=>(Vp(),qp("div",null,Fb))}});Cm(Bb).mount("#app");
